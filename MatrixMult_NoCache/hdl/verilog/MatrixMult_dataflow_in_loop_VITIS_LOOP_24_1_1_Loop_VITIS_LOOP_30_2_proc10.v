// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMult_dataflow_in_loop_VITIS_LOOP_24_1_1_Loop_VITIS_LOOP_30_2_proc10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        size,
        m_axi_matrix_a_0_AWVALID,
        m_axi_matrix_a_0_AWREADY,
        m_axi_matrix_a_0_AWADDR,
        m_axi_matrix_a_0_AWID,
        m_axi_matrix_a_0_AWLEN,
        m_axi_matrix_a_0_AWSIZE,
        m_axi_matrix_a_0_AWBURST,
        m_axi_matrix_a_0_AWLOCK,
        m_axi_matrix_a_0_AWCACHE,
        m_axi_matrix_a_0_AWPROT,
        m_axi_matrix_a_0_AWQOS,
        m_axi_matrix_a_0_AWREGION,
        m_axi_matrix_a_0_AWUSER,
        m_axi_matrix_a_0_WVALID,
        m_axi_matrix_a_0_WREADY,
        m_axi_matrix_a_0_WDATA,
        m_axi_matrix_a_0_WSTRB,
        m_axi_matrix_a_0_WLAST,
        m_axi_matrix_a_0_WID,
        m_axi_matrix_a_0_WUSER,
        m_axi_matrix_a_0_ARVALID,
        m_axi_matrix_a_0_ARREADY,
        m_axi_matrix_a_0_ARADDR,
        m_axi_matrix_a_0_ARID,
        m_axi_matrix_a_0_ARLEN,
        m_axi_matrix_a_0_ARSIZE,
        m_axi_matrix_a_0_ARBURST,
        m_axi_matrix_a_0_ARLOCK,
        m_axi_matrix_a_0_ARCACHE,
        m_axi_matrix_a_0_ARPROT,
        m_axi_matrix_a_0_ARQOS,
        m_axi_matrix_a_0_ARREGION,
        m_axi_matrix_a_0_ARUSER,
        m_axi_matrix_a_0_RVALID,
        m_axi_matrix_a_0_RREADY,
        m_axi_matrix_a_0_RDATA,
        m_axi_matrix_a_0_RLAST,
        m_axi_matrix_a_0_RID,
        m_axi_matrix_a_0_RFIFONUM,
        m_axi_matrix_a_0_RUSER,
        m_axi_matrix_a_0_RRESP,
        m_axi_matrix_a_0_BVALID,
        m_axi_matrix_a_0_BREADY,
        m_axi_matrix_a_0_BRESP,
        m_axi_matrix_a_0_BID,
        m_axi_matrix_a_0_BUSER,
        matrix_in_1,
        m_axi_matrix_b_0_AWVALID,
        m_axi_matrix_b_0_AWREADY,
        m_axi_matrix_b_0_AWADDR,
        m_axi_matrix_b_0_AWID,
        m_axi_matrix_b_0_AWLEN,
        m_axi_matrix_b_0_AWSIZE,
        m_axi_matrix_b_0_AWBURST,
        m_axi_matrix_b_0_AWLOCK,
        m_axi_matrix_b_0_AWCACHE,
        m_axi_matrix_b_0_AWPROT,
        m_axi_matrix_b_0_AWQOS,
        m_axi_matrix_b_0_AWREGION,
        m_axi_matrix_b_0_AWUSER,
        m_axi_matrix_b_0_WVALID,
        m_axi_matrix_b_0_WREADY,
        m_axi_matrix_b_0_WDATA,
        m_axi_matrix_b_0_WSTRB,
        m_axi_matrix_b_0_WLAST,
        m_axi_matrix_b_0_WID,
        m_axi_matrix_b_0_WUSER,
        m_axi_matrix_b_0_ARVALID,
        m_axi_matrix_b_0_ARREADY,
        m_axi_matrix_b_0_ARADDR,
        m_axi_matrix_b_0_ARID,
        m_axi_matrix_b_0_ARLEN,
        m_axi_matrix_b_0_ARSIZE,
        m_axi_matrix_b_0_ARBURST,
        m_axi_matrix_b_0_ARLOCK,
        m_axi_matrix_b_0_ARCACHE,
        m_axi_matrix_b_0_ARPROT,
        m_axi_matrix_b_0_ARQOS,
        m_axi_matrix_b_0_ARREGION,
        m_axi_matrix_b_0_ARUSER,
        m_axi_matrix_b_0_RVALID,
        m_axi_matrix_b_0_RREADY,
        m_axi_matrix_b_0_RDATA,
        m_axi_matrix_b_0_RLAST,
        m_axi_matrix_b_0_RID,
        m_axi_matrix_b_0_RFIFONUM,
        m_axi_matrix_b_0_RUSER,
        m_axi_matrix_b_0_RRESP,
        m_axi_matrix_b_0_BVALID,
        m_axi_matrix_b_0_BREADY,
        m_axi_matrix_b_0_BRESP,
        m_axi_matrix_b_0_BID,
        m_axi_matrix_b_0_BUSER,
        matrix_in_2,
        p_read,
        p_read2,
        p_read6,
        p_read10,
        p_read14,
        p_read18,
        p_read22,
        p_read26,
        p_read30,
        p_read34,
        p_read38,
        p_read42,
        p_read46,
        p_read50,
        p_read54,
        p_read58,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] size;
output   m_axi_matrix_a_0_AWVALID;
input   m_axi_matrix_a_0_AWREADY;
output  [63:0] m_axi_matrix_a_0_AWADDR;
output  [0:0] m_axi_matrix_a_0_AWID;
output  [31:0] m_axi_matrix_a_0_AWLEN;
output  [2:0] m_axi_matrix_a_0_AWSIZE;
output  [1:0] m_axi_matrix_a_0_AWBURST;
output  [1:0] m_axi_matrix_a_0_AWLOCK;
output  [3:0] m_axi_matrix_a_0_AWCACHE;
output  [2:0] m_axi_matrix_a_0_AWPROT;
output  [3:0] m_axi_matrix_a_0_AWQOS;
output  [3:0] m_axi_matrix_a_0_AWREGION;
output  [0:0] m_axi_matrix_a_0_AWUSER;
output   m_axi_matrix_a_0_WVALID;
input   m_axi_matrix_a_0_WREADY;
output  [15:0] m_axi_matrix_a_0_WDATA;
output  [1:0] m_axi_matrix_a_0_WSTRB;
output   m_axi_matrix_a_0_WLAST;
output  [0:0] m_axi_matrix_a_0_WID;
output  [0:0] m_axi_matrix_a_0_WUSER;
output   m_axi_matrix_a_0_ARVALID;
input   m_axi_matrix_a_0_ARREADY;
output  [63:0] m_axi_matrix_a_0_ARADDR;
output  [0:0] m_axi_matrix_a_0_ARID;
output  [31:0] m_axi_matrix_a_0_ARLEN;
output  [2:0] m_axi_matrix_a_0_ARSIZE;
output  [1:0] m_axi_matrix_a_0_ARBURST;
output  [1:0] m_axi_matrix_a_0_ARLOCK;
output  [3:0] m_axi_matrix_a_0_ARCACHE;
output  [2:0] m_axi_matrix_a_0_ARPROT;
output  [3:0] m_axi_matrix_a_0_ARQOS;
output  [3:0] m_axi_matrix_a_0_ARREGION;
output  [0:0] m_axi_matrix_a_0_ARUSER;
input   m_axi_matrix_a_0_RVALID;
output   m_axi_matrix_a_0_RREADY;
input  [15:0] m_axi_matrix_a_0_RDATA;
input   m_axi_matrix_a_0_RLAST;
input  [0:0] m_axi_matrix_a_0_RID;
input  [12:0] m_axi_matrix_a_0_RFIFONUM;
input  [0:0] m_axi_matrix_a_0_RUSER;
input  [1:0] m_axi_matrix_a_0_RRESP;
input   m_axi_matrix_a_0_BVALID;
output   m_axi_matrix_a_0_BREADY;
input  [1:0] m_axi_matrix_a_0_BRESP;
input  [0:0] m_axi_matrix_a_0_BID;
input  [0:0] m_axi_matrix_a_0_BUSER;
input  [63:0] matrix_in_1;
output   m_axi_matrix_b_0_AWVALID;
input   m_axi_matrix_b_0_AWREADY;
output  [63:0] m_axi_matrix_b_0_AWADDR;
output  [0:0] m_axi_matrix_b_0_AWID;
output  [31:0] m_axi_matrix_b_0_AWLEN;
output  [2:0] m_axi_matrix_b_0_AWSIZE;
output  [1:0] m_axi_matrix_b_0_AWBURST;
output  [1:0] m_axi_matrix_b_0_AWLOCK;
output  [3:0] m_axi_matrix_b_0_AWCACHE;
output  [2:0] m_axi_matrix_b_0_AWPROT;
output  [3:0] m_axi_matrix_b_0_AWQOS;
output  [3:0] m_axi_matrix_b_0_AWREGION;
output  [0:0] m_axi_matrix_b_0_AWUSER;
output   m_axi_matrix_b_0_WVALID;
input   m_axi_matrix_b_0_WREADY;
output  [15:0] m_axi_matrix_b_0_WDATA;
output  [1:0] m_axi_matrix_b_0_WSTRB;
output   m_axi_matrix_b_0_WLAST;
output  [0:0] m_axi_matrix_b_0_WID;
output  [0:0] m_axi_matrix_b_0_WUSER;
output   m_axi_matrix_b_0_ARVALID;
input   m_axi_matrix_b_0_ARREADY;
output  [63:0] m_axi_matrix_b_0_ARADDR;
output  [0:0] m_axi_matrix_b_0_ARID;
output  [31:0] m_axi_matrix_b_0_ARLEN;
output  [2:0] m_axi_matrix_b_0_ARSIZE;
output  [1:0] m_axi_matrix_b_0_ARBURST;
output  [1:0] m_axi_matrix_b_0_ARLOCK;
output  [3:0] m_axi_matrix_b_0_ARCACHE;
output  [2:0] m_axi_matrix_b_0_ARPROT;
output  [3:0] m_axi_matrix_b_0_ARQOS;
output  [3:0] m_axi_matrix_b_0_ARREGION;
output  [0:0] m_axi_matrix_b_0_ARUSER;
input   m_axi_matrix_b_0_RVALID;
output   m_axi_matrix_b_0_RREADY;
input  [15:0] m_axi_matrix_b_0_RDATA;
input   m_axi_matrix_b_0_RLAST;
input  [0:0] m_axi_matrix_b_0_RID;
input  [12:0] m_axi_matrix_b_0_RFIFONUM;
input  [0:0] m_axi_matrix_b_0_RUSER;
input  [1:0] m_axi_matrix_b_0_RRESP;
input   m_axi_matrix_b_0_BVALID;
output   m_axi_matrix_b_0_BREADY;
input  [1:0] m_axi_matrix_b_0_BRESP;
input  [0:0] m_axi_matrix_b_0_BID;
input  [0:0] m_axi_matrix_b_0_BUSER;
input  [63:0] matrix_in_2;
input  [0:0] p_read;
input  [0:0] p_read2;
input  [0:0] p_read6;
input  [0:0] p_read10;
input  [0:0] p_read14;
input  [0:0] p_read18;
input  [0:0] p_read22;
input  [0:0] p_read26;
input  [0:0] p_read30;
input  [0:0] p_read34;
input  [0:0] p_read38;
input  [0:0] p_read42;
input  [0:0] p_read46;
input  [0:0] p_read50;
input  [0:0] p_read54;
input  [0:0] p_read58;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;

reg ap_idle;
reg m_axi_matrix_a_0_ARVALID;
reg m_axi_matrix_a_0_RREADY;
reg m_axi_matrix_b_0_ARVALID;
reg m_axi_matrix_b_0_RREADY;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg[31:0] ap_return_9;
reg[31:0] ap_return_10;
reg[31:0] ap_return_11;
reg[31:0] ap_return_12;
reg[31:0] ap_return_13;
reg[31:0] ap_return_14;
reg[31:0] ap_return_15;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    grp_matrixSlicer_fu_298_matrix_a_blk_n_AR;
wire    grp_matrixSlicer_fu_298_matrix_a_blk_n_R;
wire    grp_matrixSlicer_fu_298_matrix_b_blk_n_AR;
wire    grp_matrixSlicer_fu_298_matrix_b_blk_n_R;
reg   [0:0] icmp_ln30_reg_1243;
reg    ap_block_state16_pp0_stage15_iter0_grp5;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_state32_pp0_stage15_iter1_grp5;
reg    ap_block_pp0_stage15_subdone;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    matrix_a_blk_n_AR;
reg    matrix_a_blk_n_R;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_grp1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_grp2;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_grp3;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_grp4;
wire    ap_block_pp0_stage15_grp5;
wire    ap_block_pp0_stage0_grp6;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp7;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp8;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_grp9;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_grp10;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_grp11;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_grp12;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_grp13;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_grp14;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_grp15;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_grp16;
reg    matrix_b_blk_n_AR;
reg    matrix_b_blk_n_R;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
reg    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_subdone;
reg   [63:0] matrix_in_2_read_reg_1228;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0;
reg   [63:0] matrix_in_1_read_reg_1233;
reg   [15:0] size_read_reg_1238;
reg    ap_block_state17_pp0_stage0_iter1_grp6;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln30_fu_549_p2;
reg   [0:0] icmp_ln30_reg_1243_pp0_iter1_reg;
wire   [13:0] add_ln30_fu_555_p2;
reg   [13:0] add_ln30_reg_1247;
reg   [15:0] Matrix_4x4_1_0_0_i_reg_1252;
reg    ap_block_pp0_stage15_11001_grp5;
reg   [15:0] Matrix_4x4_1_0_1_i_reg_1257;
reg   [15:0] Matrix_4x4_1_0_2_i_reg_1262;
reg   [15:0] Matrix_4x4_1_0_3_i_reg_1267;
reg   [15:0] Matrix_4x4_1_1_0_i_reg_1272;
reg   [15:0] Matrix_4x4_1_1_1_i_reg_1277;
reg   [15:0] Matrix_4x4_1_1_2_i_reg_1282;
reg   [15:0] Matrix_4x4_1_1_3_i_reg_1287;
reg   [15:0] Matrix_4x4_1_2_0_i_reg_1292;
reg   [15:0] Matrix_4x4_1_2_1_i_reg_1297;
reg   [15:0] Matrix_4x4_1_2_2_i_reg_1302;
reg   [15:0] Matrix_4x4_1_2_3_i_reg_1307;
reg   [15:0] Matrix_4x4_1_3_0_i_reg_1312;
reg   [15:0] Matrix_4x4_1_3_1_i_reg_1317;
reg   [15:0] Matrix_4x4_1_3_2_i_reg_1322;
reg   [15:0] Matrix_4x4_1_3_3_i_reg_1327;
reg   [15:0] Matrix_4x4_2_0_0_i_reg_1332;
reg   [15:0] Matrix_4x4_2_0_1_i_reg_1337;
reg   [15:0] Matrix_4x4_2_0_2_i_reg_1342;
reg   [15:0] Matrix_4x4_2_0_3_i_reg_1347;
reg   [15:0] Matrix_4x4_2_1_0_i_reg_1352;
reg   [15:0] Matrix_4x4_2_1_1_i_reg_1357;
reg   [15:0] Matrix_4x4_2_1_2_i_reg_1362;
reg   [15:0] Matrix_4x4_2_1_3_i_reg_1367;
reg   [15:0] Matrix_4x4_2_2_0_i_reg_1372;
reg   [15:0] Matrix_4x4_2_2_1_i_reg_1377;
reg   [15:0] Matrix_4x4_2_2_2_i_reg_1382;
reg   [15:0] Matrix_4x4_2_2_3_i_reg_1387;
reg   [15:0] Matrix_4x4_2_3_0_i_reg_1392;
reg   [15:0] Matrix_4x4_2_3_1_i_reg_1397;
reg   [15:0] Matrix_4x4_2_3_2_i_reg_1402;
reg   [15:0] Matrix_4x4_2_3_3_i_reg_1407;
reg   [31:0] matrix_4x4_out_0_0_i_reg_1412;
wire    ap_block_pp0_stage5_11001_grp0;
reg    ap_block_pp0_stage5_subdone_grp0_done_reg;
wire    ap_block_pp0_stage5_subdone_grp0;
reg    ap_block_pp0_stage5_subdone;
reg   [31:0] matrix_4x4_out_0_1_i_reg_1417;
reg   [31:0] matrix_4x4_out_0_2_i_reg_1422;
reg   [31:0] matrix_4x4_out_0_3_i_reg_1427;
reg   [31:0] matrix_4x4_out_1_0_i_reg_1432;
reg   [31:0] matrix_4x4_out_1_1_i_reg_1437;
reg   [31:0] matrix_4x4_out_1_2_i_reg_1442;
reg   [31:0] matrix_4x4_out_1_3_i_reg_1447;
reg   [31:0] matrix_4x4_out_2_0_i_reg_1452;
reg   [31:0] matrix_4x4_out_2_1_i_reg_1457;
reg   [31:0] matrix_4x4_out_2_2_i_reg_1462;
reg   [31:0] matrix_4x4_out_2_3_i_reg_1467;
reg   [31:0] matrix_4x4_out_3_0_i_reg_1472;
reg   [31:0] matrix_4x4_out_3_1_i_reg_1477;
reg   [31:0] matrix_4x4_out_3_2_i_reg_1482;
reg   [31:0] matrix_4x4_out_3_3_i_reg_1487;
reg   [31:0] Matrix_4x4_final_0_0_ret_i_reg_1492;
wire    ap_block_pp0_stage6_11001_grp0;
reg    ap_block_pp0_stage6_subdone_grp0_done_reg;
wire    ap_block_pp0_stage6_subdone_grp0;
reg    ap_block_pp0_stage6_subdone;
reg   [31:0] Matrix_4x4_final_0_1_ret_i_reg_1497;
reg   [31:0] Matrix_4x4_final_0_2_ret_i_reg_1502;
reg   [31:0] Matrix_4x4_final_0_3_ret_i_reg_1507;
reg   [31:0] Matrix_4x4_final_1_0_ret_i_reg_1512;
reg   [31:0] Matrix_4x4_final_1_1_ret_i_reg_1517;
reg   [31:0] Matrix_4x4_final_1_2_ret_i_reg_1522;
reg   [31:0] Matrix_4x4_final_1_3_ret_i_reg_1527;
reg   [31:0] Matrix_4x4_final_2_0_ret_i_reg_1532;
reg   [31:0] Matrix_4x4_final_2_1_ret_i_reg_1537;
reg   [31:0] Matrix_4x4_final_2_2_ret_i_reg_1542;
reg   [31:0] Matrix_4x4_final_2_3_ret_i_reg_1547;
reg   [31:0] Matrix_4x4_final_3_0_ret_i_reg_1552;
reg   [31:0] Matrix_4x4_final_3_1_ret_i_reg_1557;
reg   [31:0] Matrix_4x4_final_3_2_ret_i_reg_1562;
reg   [31:0] Matrix_4x4_final_3_3_ret_i_reg_1567;
reg    ap_block_state8_pp0_stage7_iter0_grp1;
reg    ap_block_state24_pp0_stage7_iter1_grp1;
reg    ap_block_pp0_stage7_subdone;
wire    grp_matrixSlicer_fu_298_ap_start;
wire    grp_matrixSlicer_fu_298_ap_done;
wire    grp_matrixSlicer_fu_298_ap_idle;
wire    grp_matrixSlicer_fu_298_ap_ready;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWVALID;
wire   [63:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWADDR;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWID;
wire   [31:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWLEN;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWSIZE;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWBURST;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWLOCK;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWCACHE;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWPROT;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWQOS;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWREGION;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WVALID;
wire   [15:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WDATA;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WSTRB;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WLAST;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WID;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARVALID;
wire   [63:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARADDR;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARID;
wire   [31:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLEN;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARSIZE;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARBURST;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLOCK;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARCACHE;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARPROT;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARQOS;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARREGION;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_RREADY;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_a_0_BREADY;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWVALID;
wire   [63:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWADDR;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWID;
wire   [31:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWLEN;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWSIZE;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWBURST;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWLOCK;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWCACHE;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWPROT;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWQOS;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWREGION;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WVALID;
wire   [15:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WDATA;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WSTRB;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WLAST;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WID;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARVALID;
wire   [63:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARADDR;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARID;
wire   [31:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLEN;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARSIZE;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARBURST;
wire   [1:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLOCK;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARCACHE;
wire   [2:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARPROT;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARQOS;
wire   [3:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARREGION;
wire   [0:0] grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARUSER;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_RREADY;
wire    grp_matrixSlicer_fu_298_m_axi_matrix_b_0_BREADY;
reg    grp_matrixSlicer_fu_298_ap_ce;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_0;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_1;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_2;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_3;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_4;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_5;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_6;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_7;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_8;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_9;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_10;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_11;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_12;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_13;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_14;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_15;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_16;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_17;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_18;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_19;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_20;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_21;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_22;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_23;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_24;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_25;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_26;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_27;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_28;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_29;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_30;
wire   [15:0] grp_matrixSlicer_fu_298_ap_return_31;
wire    ap_block_pp0_stage1_11001_ignoreCallOp125_grp7;
wire    ap_block_pp0_stage2_11001_ignoreCallOp127_grp8;
wire    ap_block_pp0_stage3_11001_ignoreCallOp128_grp9;
wire    ap_block_pp0_stage4_11001_ignoreCallOp129_grp10;
wire    ap_block_pp0_stage5_11001_ignoreCallOp130_grp11;
wire    ap_block_pp0_stage6_11001_ignoreCallOp131_grp12;
wire    ap_block_pp0_stage7_11001_ignoreCallOp132_grp1;
reg    ap_block_pp0_stage8_11001_ignoreCallOp133_grp2;
wire    ap_block_pp0_stage9_11001_ignoreCallOp134_grp13;
wire    ap_block_pp0_stage10_11001_ignoreCallOp135_grp14;
wire    ap_block_pp0_stage11_11001_ignoreCallOp136_grp3;
wire    ap_block_pp0_stage12_11001_ignoreCallOp137_grp4;
wire    ap_block_pp0_stage13_11001_ignoreCallOp138_grp15;
wire    ap_block_pp0_stage14_11001_ignoreCallOp139_grp16;
wire    ap_block_pp0_stage15_11001_ignoreCallOp140_grp5;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call20;
reg    ap_block_pp0_stage0_11001_ignoreCallOp141_grp6;
wire   [31:0] grp_multiplier_fu_315_ap_return_0;
wire   [31:0] grp_multiplier_fu_315_ap_return_1;
wire   [31:0] grp_multiplier_fu_315_ap_return_2;
wire   [31:0] grp_multiplier_fu_315_ap_return_3;
wire   [31:0] grp_multiplier_fu_315_ap_return_4;
wire   [31:0] grp_multiplier_fu_315_ap_return_5;
wire   [31:0] grp_multiplier_fu_315_ap_return_6;
wire   [31:0] grp_multiplier_fu_315_ap_return_7;
wire   [31:0] grp_multiplier_fu_315_ap_return_8;
wire   [31:0] grp_multiplier_fu_315_ap_return_9;
wire   [31:0] grp_multiplier_fu_315_ap_return_10;
wire   [31:0] grp_multiplier_fu_315_ap_return_11;
wire   [31:0] grp_multiplier_fu_315_ap_return_12;
wire   [31:0] grp_multiplier_fu_315_ap_return_13;
wire   [31:0] grp_multiplier_fu_315_ap_return_14;
wire   [31:0] grp_multiplier_fu_315_ap_return_15;
reg    grp_multiplier_fu_315_ap_ce;
reg    ap_block_state18_pp0_stage1_iter1_ignore_call53_grp7;
reg    ap_block_pp0_stage1_11001_ignoreCallOp190;
reg    ap_block_state19_pp0_stage2_iter1_ignore_call53_grp8;
reg    ap_block_pp0_stage2_11001_ignoreCallOp191;
reg    ap_block_state20_pp0_stage3_iter1_ignore_call53_grp9;
reg    ap_block_pp0_stage3_11001_ignoreCallOp192;
reg    ap_block_state21_pp0_stage4_iter1_ignore_call53_grp10;
reg    ap_block_pp0_stage4_11001_ignoreCallOp193;
reg    ap_block_state22_pp0_stage5_iter1_ignore_call53_grp11;
reg    ap_block_pp0_stage5_11001_ignoreCallOp194;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call53;
reg    ap_block_pp0_stage0_11001_ignoreCallOp189_grp0;
wire    ap_block_pp0_stage1_11001_ignoreCallOp190_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_11001_ignoreCallOp191_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_11001_ignoreCallOp192_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
wire    ap_block_pp0_stage3_subdone_grp0;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_11001_ignoreCallOp193_grp0;
reg    ap_block_pp0_stage4_subdone_grp0_done_reg;
wire    ap_block_pp0_stage4_subdone_grp0;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_11001_ignoreCallOp194_grp0;
wire    call_ret2_i_matrixAdder_fu_351_ap_ready;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_0;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_1;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_2;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_3;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_4;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_5;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_6;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_7;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_8;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_9;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_10;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_11;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_12;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_13;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_14;
wire   [31:0] call_ret2_i_matrixAdder_fu_351_ap_return_15;
reg    grp_matrixSlicer_fu_298_ap_start_reg;
wire    ap_block_pp0_stage7_ignoreCallOp132_grp1;
wire    ap_block_pp0_stage8_ignoreCallOp133_grp2;
wire    ap_block_pp0_stage9_ignoreCallOp134_grp13;
wire    ap_block_pp0_stage10_ignoreCallOp135_grp14;
wire    ap_block_pp0_stage11_ignoreCallOp136_grp3;
wire    ap_block_pp0_stage12_ignoreCallOp137_grp4;
wire    ap_block_pp0_stage13_ignoreCallOp138_grp15;
wire    ap_block_pp0_stage14_ignoreCallOp139_grp16;
wire    ap_block_pp0_stage15_ignoreCallOp140_grp5;
wire    ap_block_pp0_stage0_ignoreCallOp141_grp6;
wire    ap_block_pp0_stage1_ignoreCallOp142_grp7;
wire    ap_block_pp0_stage2_ignoreCallOp143_grp8;
wire    ap_block_pp0_stage3_ignoreCallOp144_grp9;
wire    ap_block_pp0_stage4_ignoreCallOp145_grp10;
wire    ap_block_pp0_stage5_ignoreCallOp146_grp11;
wire    ap_block_pp0_stage6_ignoreCallOp147_grp12;
wire    ap_block_pp0_stage7_ignoreCallOp148_grp1;
wire    ap_block_pp0_stage8_ignoreCallOp149_grp2;
wire    ap_block_pp0_stage9_ignoreCallOp150_grp13;
wire    ap_block_pp0_stage10_ignoreCallOp151_grp14;
wire    ap_block_pp0_stage11_ignoreCallOp152_grp3;
wire    ap_block_pp0_stage12_ignoreCallOp153_grp4;
wire    ap_block_pp0_stage13_ignoreCallOp154_grp15;
wire    ap_block_pp0_stage14_ignoreCallOp155_grp16;
wire    ap_block_pp0_stage15_ignoreCallOp156_grp5;
wire    ap_block_pp0_stage1_ignoreCallOp125_grp7;
wire    ap_block_pp0_stage2_ignoreCallOp127_grp8;
wire    ap_block_pp0_stage3_ignoreCallOp128_grp9;
wire    ap_block_pp0_stage0_ignoreCallOp189_grp0;
wire    ap_block_pp0_stage6_ignoreCallOp227_grp0;
reg   [13:0] i_fu_116;
wire    ap_block_pp0_stage1_11001_grp0;
wire    ap_loop_init;
reg   [13:0] ap_sig_allocacmp_i_load;
wire    ap_block_pp0_stage0;
reg   [31:0] Matrix_4x4_final_15_i_out_0_fu_120;
wire   [31:0] p_read_cast_fu_447_p1;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage6_grp0;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_block_pp0_stage15_11001;
reg    ap_condition_exit_pp0_iter1_stage7;
reg    ap_idle_pp0_0to0;
reg   [31:0] Matrix_4x4_final_14_i_out_0_fu_124;
wire   [31:0] p_read2_cast_fu_443_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load;
reg   [31:0] Matrix_4x4_final_13_i_out_0_fu_128;
wire   [31:0] p_read6_cast_fu_439_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load;
reg   [31:0] Matrix_4x4_final_12_i_out_0_fu_132;
wire   [31:0] p_read10_cast_fu_435_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load;
reg   [31:0] Matrix_4x4_final_11_i_out_0_fu_136;
wire   [31:0] p_read14_cast_fu_431_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load;
reg   [31:0] Matrix_4x4_final_10_i_out_0_fu_140;
wire   [31:0] p_read18_cast_fu_427_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load;
reg   [31:0] Matrix_4x4_final_9_i_out_0_fu_144;
wire   [31:0] p_read22_cast_fu_423_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load;
reg   [31:0] Matrix_4x4_final_8_i_out_0_fu_148;
wire   [31:0] p_read26_cast_fu_419_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load;
reg   [31:0] Matrix_4x4_final_7_i_out_0_fu_152;
wire   [31:0] p_read30_cast_fu_415_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load;
reg   [31:0] Matrix_4x4_final_6_i_out_0_fu_156;
wire   [31:0] p_read34_cast_fu_411_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load;
reg   [31:0] Matrix_4x4_final_5_i_out_0_fu_160;
wire   [31:0] p_read38_cast_fu_407_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load;
reg   [31:0] Matrix_4x4_final_4_i_out_0_fu_164;
wire   [31:0] p_read42_cast_fu_403_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load;
reg   [31:0] Matrix_4x4_final_3_i_out_0_fu_168;
wire   [31:0] p_read46_cast_fu_399_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load;
reg   [31:0] Matrix_4x4_final_2_i_out_0_fu_172;
wire   [31:0] p_read50_cast_fu_395_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load;
reg   [31:0] Matrix_4x4_final_1_i_out_0_fu_176;
wire   [31:0] p_read54_cast_fu_391_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load;
reg   [31:0] Matrix_4x4_final_i_out_0_fu_180;
wire   [31:0] p_read58_cast_fu_387_p1;
reg   [31:0] ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load;
wire    ap_block_pp0_stage0_grp0;
wire   [13:0] tmp_fu_451_p4;
wire    ap_block_pp0_stage5_grp0;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [31:0] ap_return_8_preg;
reg   [31:0] ap_return_9_preg;
reg   [31:0] ap_return_10_preg;
reg   [31:0] ap_return_11_preg;
reg   [31:0] ap_return_12_preg;
reg   [31:0] ap_return_13_preg;
reg   [31:0] ap_return_14_preg;
reg   [31:0] ap_return_15_preg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
reg    ap_block_state18_pp0_stage1_iter1_grp7;
reg    ap_block_state19_pp0_stage2_iter1_grp8;
reg    ap_block_state20_pp0_stage3_iter1_grp9;
reg    ap_block_state21_pp0_stage4_iter1_grp10;
reg    ap_block_state22_pp0_stage5_iter1_grp11;
reg    ap_block_state23_pp0_stage6_iter1_grp12;
reg    ap_block_state9_pp0_stage8_iter0_grp2;
reg    ap_block_state25_pp0_stage8_iter1_grp2;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_state26_pp0_stage9_iter1_grp13;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_state27_pp0_stage10_iter1_grp14;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_state12_pp0_stage11_iter0_grp3;
reg    ap_block_state28_pp0_stage11_iter1_grp3;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_state13_pp0_stage12_iter0_grp4;
reg    ap_block_state29_pp0_stage12_iter1_grp4;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_state30_pp0_stage13_iter1_grp15;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_state31_pp0_stage14_iter1_grp16;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp0_done_reg = 1'b0;
#0 grp_matrixSlicer_fu_298_ap_start_reg = 1'b0;
#0 i_fu_116 = 14'd0;
#0 Matrix_4x4_final_15_i_out_0_fu_120 = 32'd0;
#0 Matrix_4x4_final_14_i_out_0_fu_124 = 32'd0;
#0 Matrix_4x4_final_13_i_out_0_fu_128 = 32'd0;
#0 Matrix_4x4_final_12_i_out_0_fu_132 = 32'd0;
#0 Matrix_4x4_final_11_i_out_0_fu_136 = 32'd0;
#0 Matrix_4x4_final_10_i_out_0_fu_140 = 32'd0;
#0 Matrix_4x4_final_9_i_out_0_fu_144 = 32'd0;
#0 Matrix_4x4_final_8_i_out_0_fu_148 = 32'd0;
#0 Matrix_4x4_final_7_i_out_0_fu_152 = 32'd0;
#0 Matrix_4x4_final_6_i_out_0_fu_156 = 32'd0;
#0 Matrix_4x4_final_5_i_out_0_fu_160 = 32'd0;
#0 Matrix_4x4_final_4_i_out_0_fu_164 = 32'd0;
#0 Matrix_4x4_final_3_i_out_0_fu_168 = 32'd0;
#0 Matrix_4x4_final_2_i_out_0_fu_172 = 32'd0;
#0 Matrix_4x4_final_1_i_out_0_fu_176 = 32'd0;
#0 Matrix_4x4_final_i_out_0_fu_180 = 32'd0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
#0 ap_return_8_preg = 32'd0;
#0 ap_return_9_preg = 32'd0;
#0 ap_return_10_preg = 32'd0;
#0 ap_return_11_preg = 32'd0;
#0 ap_return_12_preg = 32'd0;
#0 ap_return_13_preg = 32'd0;
#0 ap_return_14_preg = 32'd0;
#0 ap_return_15_preg = 32'd0;
end

MatrixMult_matrixSlicer grp_matrixSlicer_fu_298(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixSlicer_fu_298_ap_start),
    .ap_done(grp_matrixSlicer_fu_298_ap_done),
    .ap_idle(grp_matrixSlicer_fu_298_ap_idle),
    .ap_ready(grp_matrixSlicer_fu_298_ap_ready),
    .m_axi_matrix_a_0_AWVALID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWVALID),
    .m_axi_matrix_a_0_AWREADY(1'b0),
    .m_axi_matrix_a_0_AWADDR(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWADDR),
    .m_axi_matrix_a_0_AWID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWID),
    .m_axi_matrix_a_0_AWLEN(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWLEN),
    .m_axi_matrix_a_0_AWSIZE(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWSIZE),
    .m_axi_matrix_a_0_AWBURST(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWBURST),
    .m_axi_matrix_a_0_AWLOCK(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWLOCK),
    .m_axi_matrix_a_0_AWCACHE(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWCACHE),
    .m_axi_matrix_a_0_AWPROT(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWPROT),
    .m_axi_matrix_a_0_AWQOS(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWQOS),
    .m_axi_matrix_a_0_AWREGION(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWREGION),
    .m_axi_matrix_a_0_AWUSER(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_AWUSER),
    .m_axi_matrix_a_0_WVALID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WVALID),
    .m_axi_matrix_a_0_WREADY(1'b0),
    .m_axi_matrix_a_0_WDATA(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WDATA),
    .m_axi_matrix_a_0_WSTRB(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WSTRB),
    .m_axi_matrix_a_0_WLAST(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WLAST),
    .m_axi_matrix_a_0_WID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WID),
    .m_axi_matrix_a_0_WUSER(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_WUSER),
    .m_axi_matrix_a_0_ARVALID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARVALID),
    .m_axi_matrix_a_0_ARREADY(m_axi_matrix_a_0_ARREADY),
    .m_axi_matrix_a_0_ARADDR(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARADDR),
    .m_axi_matrix_a_0_ARID(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARID),
    .m_axi_matrix_a_0_ARLEN(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLEN),
    .m_axi_matrix_a_0_ARSIZE(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARSIZE),
    .m_axi_matrix_a_0_ARBURST(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARBURST),
    .m_axi_matrix_a_0_ARLOCK(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLOCK),
    .m_axi_matrix_a_0_ARCACHE(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARCACHE),
    .m_axi_matrix_a_0_ARPROT(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARPROT),
    .m_axi_matrix_a_0_ARQOS(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARQOS),
    .m_axi_matrix_a_0_ARREGION(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARREGION),
    .m_axi_matrix_a_0_ARUSER(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARUSER),
    .m_axi_matrix_a_0_RVALID(m_axi_matrix_a_0_RVALID),
    .m_axi_matrix_a_0_RREADY(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_RREADY),
    .m_axi_matrix_a_0_RDATA(m_axi_matrix_a_0_RDATA),
    .m_axi_matrix_a_0_RLAST(m_axi_matrix_a_0_RLAST),
    .m_axi_matrix_a_0_RID(m_axi_matrix_a_0_RID),
    .m_axi_matrix_a_0_RFIFONUM(m_axi_matrix_a_0_RFIFONUM),
    .m_axi_matrix_a_0_RUSER(m_axi_matrix_a_0_RUSER),
    .m_axi_matrix_a_0_RRESP(m_axi_matrix_a_0_RRESP),
    .m_axi_matrix_a_0_BVALID(1'b0),
    .m_axi_matrix_a_0_BREADY(grp_matrixSlicer_fu_298_m_axi_matrix_a_0_BREADY),
    .m_axi_matrix_a_0_BRESP(2'd0),
    .m_axi_matrix_a_0_BID(1'd0),
    .m_axi_matrix_a_0_BUSER(1'd0),
    .m_axi_matrix_b_0_AWVALID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWVALID),
    .m_axi_matrix_b_0_AWREADY(1'b0),
    .m_axi_matrix_b_0_AWADDR(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWADDR),
    .m_axi_matrix_b_0_AWID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWID),
    .m_axi_matrix_b_0_AWLEN(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWLEN),
    .m_axi_matrix_b_0_AWSIZE(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWSIZE),
    .m_axi_matrix_b_0_AWBURST(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWBURST),
    .m_axi_matrix_b_0_AWLOCK(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWLOCK),
    .m_axi_matrix_b_0_AWCACHE(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWCACHE),
    .m_axi_matrix_b_0_AWPROT(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWPROT),
    .m_axi_matrix_b_0_AWQOS(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWQOS),
    .m_axi_matrix_b_0_AWREGION(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWREGION),
    .m_axi_matrix_b_0_AWUSER(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_AWUSER),
    .m_axi_matrix_b_0_WVALID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WVALID),
    .m_axi_matrix_b_0_WREADY(1'b0),
    .m_axi_matrix_b_0_WDATA(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WDATA),
    .m_axi_matrix_b_0_WSTRB(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WSTRB),
    .m_axi_matrix_b_0_WLAST(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WLAST),
    .m_axi_matrix_b_0_WID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WID),
    .m_axi_matrix_b_0_WUSER(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_WUSER),
    .m_axi_matrix_b_0_ARVALID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARVALID),
    .m_axi_matrix_b_0_ARREADY(m_axi_matrix_b_0_ARREADY),
    .m_axi_matrix_b_0_ARADDR(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARADDR),
    .m_axi_matrix_b_0_ARID(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARID),
    .m_axi_matrix_b_0_ARLEN(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLEN),
    .m_axi_matrix_b_0_ARSIZE(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARSIZE),
    .m_axi_matrix_b_0_ARBURST(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARBURST),
    .m_axi_matrix_b_0_ARLOCK(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLOCK),
    .m_axi_matrix_b_0_ARCACHE(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARCACHE),
    .m_axi_matrix_b_0_ARPROT(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARPROT),
    .m_axi_matrix_b_0_ARQOS(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARQOS),
    .m_axi_matrix_b_0_ARREGION(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARREGION),
    .m_axi_matrix_b_0_ARUSER(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARUSER),
    .m_axi_matrix_b_0_RVALID(m_axi_matrix_b_0_RVALID),
    .m_axi_matrix_b_0_RREADY(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_RREADY),
    .m_axi_matrix_b_0_RDATA(m_axi_matrix_b_0_RDATA),
    .m_axi_matrix_b_0_RLAST(m_axi_matrix_b_0_RLAST),
    .m_axi_matrix_b_0_RID(m_axi_matrix_b_0_RID),
    .m_axi_matrix_b_0_RFIFONUM(m_axi_matrix_b_0_RFIFONUM),
    .m_axi_matrix_b_0_RUSER(m_axi_matrix_b_0_RUSER),
    .m_axi_matrix_b_0_RRESP(m_axi_matrix_b_0_RRESP),
    .m_axi_matrix_b_0_BVALID(1'b0),
    .m_axi_matrix_b_0_BREADY(grp_matrixSlicer_fu_298_m_axi_matrix_b_0_BREADY),
    .m_axi_matrix_b_0_BRESP(2'd0),
    .m_axi_matrix_b_0_BID(1'd0),
    .m_axi_matrix_b_0_BUSER(1'd0),
    .ap_ce(grp_matrixSlicer_fu_298_ap_ce),
    .matrix_in_1(matrix_in_1_read_reg_1233),
    .matrix_in_2(matrix_in_2_read_reg_1228),
    .size(size_read_reg_1238),
    .ap_return_0(grp_matrixSlicer_fu_298_ap_return_0),
    .ap_return_1(grp_matrixSlicer_fu_298_ap_return_1),
    .ap_return_2(grp_matrixSlicer_fu_298_ap_return_2),
    .ap_return_3(grp_matrixSlicer_fu_298_ap_return_3),
    .ap_return_4(grp_matrixSlicer_fu_298_ap_return_4),
    .ap_return_5(grp_matrixSlicer_fu_298_ap_return_5),
    .ap_return_6(grp_matrixSlicer_fu_298_ap_return_6),
    .ap_return_7(grp_matrixSlicer_fu_298_ap_return_7),
    .ap_return_8(grp_matrixSlicer_fu_298_ap_return_8),
    .ap_return_9(grp_matrixSlicer_fu_298_ap_return_9),
    .ap_return_10(grp_matrixSlicer_fu_298_ap_return_10),
    .ap_return_11(grp_matrixSlicer_fu_298_ap_return_11),
    .ap_return_12(grp_matrixSlicer_fu_298_ap_return_12),
    .ap_return_13(grp_matrixSlicer_fu_298_ap_return_13),
    .ap_return_14(grp_matrixSlicer_fu_298_ap_return_14),
    .ap_return_15(grp_matrixSlicer_fu_298_ap_return_15),
    .ap_return_16(grp_matrixSlicer_fu_298_ap_return_16),
    .ap_return_17(grp_matrixSlicer_fu_298_ap_return_17),
    .ap_return_18(grp_matrixSlicer_fu_298_ap_return_18),
    .ap_return_19(grp_matrixSlicer_fu_298_ap_return_19),
    .ap_return_20(grp_matrixSlicer_fu_298_ap_return_20),
    .ap_return_21(grp_matrixSlicer_fu_298_ap_return_21),
    .ap_return_22(grp_matrixSlicer_fu_298_ap_return_22),
    .ap_return_23(grp_matrixSlicer_fu_298_ap_return_23),
    .ap_return_24(grp_matrixSlicer_fu_298_ap_return_24),
    .ap_return_25(grp_matrixSlicer_fu_298_ap_return_25),
    .ap_return_26(grp_matrixSlicer_fu_298_ap_return_26),
    .ap_return_27(grp_matrixSlicer_fu_298_ap_return_27),
    .ap_return_28(grp_matrixSlicer_fu_298_ap_return_28),
    .ap_return_29(grp_matrixSlicer_fu_298_ap_return_29),
    .ap_return_30(grp_matrixSlicer_fu_298_ap_return_30),
    .ap_return_31(grp_matrixSlicer_fu_298_ap_return_31),
    .matrix_a_blk_n_AR(grp_matrixSlicer_fu_298_matrix_a_blk_n_AR),
    .matrix_a_blk_n_R(grp_matrixSlicer_fu_298_matrix_a_blk_n_R),
    .matrix_b_blk_n_AR(grp_matrixSlicer_fu_298_matrix_b_blk_n_AR),
    .matrix_b_blk_n_R(grp_matrixSlicer_fu_298_matrix_b_blk_n_R)
);

MatrixMult_multiplier grp_multiplier_fu_315(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .matrix_in_1_0_0_val(Matrix_4x4_1_0_0_i_reg_1252),
    .matrix_in_1_0_1_val(Matrix_4x4_1_0_1_i_reg_1257),
    .matrix_in_1_0_2_val(Matrix_4x4_1_0_2_i_reg_1262),
    .matrix_in_1_0_3_val(Matrix_4x4_1_0_3_i_reg_1267),
    .matrix_in_1_1_0_val(Matrix_4x4_1_1_0_i_reg_1272),
    .matrix_in_1_1_1_val(Matrix_4x4_1_1_1_i_reg_1277),
    .matrix_in_1_1_2_val(Matrix_4x4_1_1_2_i_reg_1282),
    .matrix_in_1_1_3_val(Matrix_4x4_1_1_3_i_reg_1287),
    .matrix_in_1_2_0_val(Matrix_4x4_1_2_0_i_reg_1292),
    .matrix_in_1_2_1_val(Matrix_4x4_1_2_1_i_reg_1297),
    .matrix_in_1_2_2_val(Matrix_4x4_1_2_2_i_reg_1302),
    .matrix_in_1_2_3_val(Matrix_4x4_1_2_3_i_reg_1307),
    .matrix_in_1_3_0_val(Matrix_4x4_1_3_0_i_reg_1312),
    .matrix_in_1_3_1_val(Matrix_4x4_1_3_1_i_reg_1317),
    .matrix_in_1_3_2_val(Matrix_4x4_1_3_2_i_reg_1322),
    .matrix_in_1_3_3_val(Matrix_4x4_1_3_3_i_reg_1327),
    .matrix_in_2_0_0_val(Matrix_4x4_2_0_0_i_reg_1332),
    .matrix_in_2_0_1_val(Matrix_4x4_2_0_1_i_reg_1337),
    .matrix_in_2_0_2_val(Matrix_4x4_2_0_2_i_reg_1342),
    .matrix_in_2_0_3_val(Matrix_4x4_2_0_3_i_reg_1347),
    .matrix_in_2_1_0_val(Matrix_4x4_2_1_0_i_reg_1352),
    .matrix_in_2_1_1_val(Matrix_4x4_2_1_1_i_reg_1357),
    .matrix_in_2_1_2_val(Matrix_4x4_2_1_2_i_reg_1362),
    .matrix_in_2_1_3_val(Matrix_4x4_2_1_3_i_reg_1367),
    .matrix_in_2_2_0_val(Matrix_4x4_2_2_0_i_reg_1372),
    .matrix_in_2_2_1_val(Matrix_4x4_2_2_1_i_reg_1377),
    .matrix_in_2_2_2_val(Matrix_4x4_2_2_2_i_reg_1382),
    .matrix_in_2_2_3_val(Matrix_4x4_2_2_3_i_reg_1387),
    .matrix_in_2_3_0_val(Matrix_4x4_2_3_0_i_reg_1392),
    .matrix_in_2_3_1_val(Matrix_4x4_2_3_1_i_reg_1397),
    .matrix_in_2_3_2_val(Matrix_4x4_2_3_2_i_reg_1402),
    .matrix_in_2_3_3_val(Matrix_4x4_2_3_3_i_reg_1407),
    .ap_return_0(grp_multiplier_fu_315_ap_return_0),
    .ap_return_1(grp_multiplier_fu_315_ap_return_1),
    .ap_return_2(grp_multiplier_fu_315_ap_return_2),
    .ap_return_3(grp_multiplier_fu_315_ap_return_3),
    .ap_return_4(grp_multiplier_fu_315_ap_return_4),
    .ap_return_5(grp_multiplier_fu_315_ap_return_5),
    .ap_return_6(grp_multiplier_fu_315_ap_return_6),
    .ap_return_7(grp_multiplier_fu_315_ap_return_7),
    .ap_return_8(grp_multiplier_fu_315_ap_return_8),
    .ap_return_9(grp_multiplier_fu_315_ap_return_9),
    .ap_return_10(grp_multiplier_fu_315_ap_return_10),
    .ap_return_11(grp_multiplier_fu_315_ap_return_11),
    .ap_return_12(grp_multiplier_fu_315_ap_return_12),
    .ap_return_13(grp_multiplier_fu_315_ap_return_13),
    .ap_return_14(grp_multiplier_fu_315_ap_return_14),
    .ap_return_15(grp_multiplier_fu_315_ap_return_15),
    .ap_ce(grp_multiplier_fu_315_ap_ce)
);

MatrixMult_matrixAdder call_ret2_i_matrixAdder_fu_351(
    .ap_ready(call_ret2_i_matrixAdder_fu_351_ap_ready),
    .input_matrix_0_0_val(matrix_4x4_out_0_0_i_reg_1412),
    .input_matrix_0_1_val(matrix_4x4_out_0_1_i_reg_1417),
    .input_matrix_0_2_val(matrix_4x4_out_0_2_i_reg_1422),
    .input_matrix_0_3_val(matrix_4x4_out_0_3_i_reg_1427),
    .input_matrix_1_0_val(matrix_4x4_out_1_0_i_reg_1432),
    .input_matrix_1_1_val(matrix_4x4_out_1_1_i_reg_1437),
    .input_matrix_1_2_val(matrix_4x4_out_1_2_i_reg_1442),
    .input_matrix_1_3_val(matrix_4x4_out_1_3_i_reg_1447),
    .input_matrix_2_0_val(matrix_4x4_out_2_0_i_reg_1452),
    .input_matrix_2_1_val(matrix_4x4_out_2_1_i_reg_1457),
    .input_matrix_2_2_val(matrix_4x4_out_2_2_i_reg_1462),
    .input_matrix_2_3_val(matrix_4x4_out_2_3_i_reg_1467),
    .input_matrix_3_0_val(matrix_4x4_out_3_0_i_reg_1472),
    .input_matrix_3_1_val(matrix_4x4_out_3_1_i_reg_1477),
    .input_matrix_3_2_val(matrix_4x4_out_3_2_i_reg_1482),
    .input_matrix_3_3_val(matrix_4x4_out_3_3_i_reg_1487),
    .output_matrix_read(Matrix_4x4_final_15_i_out_0_fu_120),
    .output_matrix_read_31(Matrix_4x4_final_14_i_out_0_fu_124),
    .output_matrix_read_32(Matrix_4x4_final_13_i_out_0_fu_128),
    .output_matrix_read_33(Matrix_4x4_final_12_i_out_0_fu_132),
    .output_matrix_read_34(Matrix_4x4_final_11_i_out_0_fu_136),
    .output_matrix_read_35(Matrix_4x4_final_10_i_out_0_fu_140),
    .output_matrix_read_36(Matrix_4x4_final_9_i_out_0_fu_144),
    .output_matrix_read_37(Matrix_4x4_final_8_i_out_0_fu_148),
    .output_matrix_read_38(Matrix_4x4_final_7_i_out_0_fu_152),
    .output_matrix_read_39(Matrix_4x4_final_6_i_out_0_fu_156),
    .output_matrix_read_40(Matrix_4x4_final_5_i_out_0_fu_160),
    .output_matrix_read_41(Matrix_4x4_final_4_i_out_0_fu_164),
    .output_matrix_read_42(Matrix_4x4_final_3_i_out_0_fu_168),
    .output_matrix_read_43(Matrix_4x4_final_2_i_out_0_fu_172),
    .output_matrix_read_44(Matrix_4x4_final_1_i_out_0_fu_176),
    .output_matrix_read_45(Matrix_4x4_final_i_out_0_fu_180),
    .ap_return_0(call_ret2_i_matrixAdder_fu_351_ap_return_0),
    .ap_return_1(call_ret2_i_matrixAdder_fu_351_ap_return_1),
    .ap_return_2(call_ret2_i_matrixAdder_fu_351_ap_return_2),
    .ap_return_3(call_ret2_i_matrixAdder_fu_351_ap_return_3),
    .ap_return_4(call_ret2_i_matrixAdder_fu_351_ap_return_4),
    .ap_return_5(call_ret2_i_matrixAdder_fu_351_ap_return_5),
    .ap_return_6(call_ret2_i_matrixAdder_fu_351_ap_return_6),
    .ap_return_7(call_ret2_i_matrixAdder_fu_351_ap_return_7),
    .ap_return_8(call_ret2_i_matrixAdder_fu_351_ap_return_8),
    .ap_return_9(call_ret2_i_matrixAdder_fu_351_ap_return_9),
    .ap_return_10(call_ret2_i_matrixAdder_fu_351_ap_return_10),
    .ap_return_11(call_ret2_i_matrixAdder_fu_351_ap_return_11),
    .ap_return_12(call_ret2_i_matrixAdder_fu_351_ap_return_12),
    .ap_return_13(call_ret2_i_matrixAdder_fu_351_ap_return_13),
    .ap_return_14(call_ret2_i_matrixAdder_fu_351_ap_return_14),
    .ap_return_15(call_ret2_i_matrixAdder_fu_351_ap_return_15),
    .ap_rst(ap_rst)
);

MatrixMult_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp0)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp0)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp0)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_0_preg <= ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_10_preg <= ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_11_preg <= ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_12_preg <= ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_13_preg <= ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_14_preg <= ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_15_preg <= ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_1_preg <= ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_2_preg <= ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_3_preg <= ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_4_preg <= ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_5_preg <= ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_6_preg <= ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_7_preg <= ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_8_preg <= ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_return_9_preg <= ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixSlicer_fu_298_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln30_fu_549_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_matrixSlicer_fu_298_ap_start_reg <= 1'b1;
        end else if ((grp_matrixSlicer_fu_298_ap_ready == 1'b1)) begin
            grp_matrixSlicer_fu_298_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_10_i_out_0_fu_140 <= p_read18_cast_fu_427_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_10_i_out_0_fu_140 <= Matrix_4x4_final_1_1_ret_i_reg_1517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_11_i_out_0_fu_136 <= p_read14_cast_fu_431_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_11_i_out_0_fu_136 <= Matrix_4x4_final_1_0_ret_i_reg_1512;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_12_i_out_0_fu_132 <= p_read10_cast_fu_435_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_12_i_out_0_fu_132 <= Matrix_4x4_final_0_3_ret_i_reg_1507;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_13_i_out_0_fu_128 <= p_read6_cast_fu_439_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_13_i_out_0_fu_128 <= Matrix_4x4_final_0_2_ret_i_reg_1502;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_14_i_out_0_fu_124 <= p_read2_cast_fu_443_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_14_i_out_0_fu_124 <= Matrix_4x4_final_0_1_ret_i_reg_1497;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_15_i_out_0_fu_120 <= p_read_cast_fu_447_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_15_i_out_0_fu_120 <= Matrix_4x4_final_0_0_ret_i_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_1_i_out_0_fu_176 <= p_read54_cast_fu_391_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_1_i_out_0_fu_176 <= Matrix_4x4_final_3_2_ret_i_reg_1562;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_2_i_out_0_fu_172 <= p_read50_cast_fu_395_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_2_i_out_0_fu_172 <= Matrix_4x4_final_3_1_ret_i_reg_1557;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_3_i_out_0_fu_168 <= p_read46_cast_fu_399_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_3_i_out_0_fu_168 <= Matrix_4x4_final_3_0_ret_i_reg_1552;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_4_i_out_0_fu_164 <= p_read42_cast_fu_403_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_4_i_out_0_fu_164 <= Matrix_4x4_final_2_3_ret_i_reg_1547;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_5_i_out_0_fu_160 <= p_read38_cast_fu_407_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_5_i_out_0_fu_160 <= Matrix_4x4_final_2_2_ret_i_reg_1542;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_6_i_out_0_fu_156 <= p_read34_cast_fu_411_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_6_i_out_0_fu_156 <= Matrix_4x4_final_2_1_ret_i_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_7_i_out_0_fu_152 <= p_read30_cast_fu_415_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_7_i_out_0_fu_152 <= Matrix_4x4_final_2_0_ret_i_reg_1532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_8_i_out_0_fu_148 <= p_read26_cast_fu_419_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_8_i_out_0_fu_148 <= Matrix_4x4_final_1_3_ret_i_reg_1527;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_9_i_out_0_fu_144 <= p_read22_cast_fu_423_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_9_i_out_0_fu_144 <= Matrix_4x4_final_1_2_ret_i_reg_1522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Matrix_4x4_final_i_out_0_fu_180 <= p_read58_cast_fu_387_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Matrix_4x4_final_i_out_0_fu_180 <= Matrix_4x4_final_3_3_ret_i_reg_1567;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage7) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        i_fu_116 <= 14'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001_grp0) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_116 <= add_ln30_reg_1247;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001_grp5) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        Matrix_4x4_1_0_0_i_reg_1252 <= grp_matrixSlicer_fu_298_ap_return_0;
        Matrix_4x4_1_0_1_i_reg_1257 <= grp_matrixSlicer_fu_298_ap_return_1;
        Matrix_4x4_1_0_2_i_reg_1262 <= grp_matrixSlicer_fu_298_ap_return_2;
        Matrix_4x4_1_0_3_i_reg_1267 <= grp_matrixSlicer_fu_298_ap_return_3;
        Matrix_4x4_1_1_0_i_reg_1272 <= grp_matrixSlicer_fu_298_ap_return_4;
        Matrix_4x4_1_1_1_i_reg_1277 <= grp_matrixSlicer_fu_298_ap_return_5;
        Matrix_4x4_1_1_2_i_reg_1282 <= grp_matrixSlicer_fu_298_ap_return_6;
        Matrix_4x4_1_1_3_i_reg_1287 <= grp_matrixSlicer_fu_298_ap_return_7;
        Matrix_4x4_1_2_0_i_reg_1292 <= grp_matrixSlicer_fu_298_ap_return_8;
        Matrix_4x4_1_2_1_i_reg_1297 <= grp_matrixSlicer_fu_298_ap_return_9;
        Matrix_4x4_1_2_2_i_reg_1302 <= grp_matrixSlicer_fu_298_ap_return_10;
        Matrix_4x4_1_2_3_i_reg_1307 <= grp_matrixSlicer_fu_298_ap_return_11;
        Matrix_4x4_1_3_0_i_reg_1312 <= grp_matrixSlicer_fu_298_ap_return_12;
        Matrix_4x4_1_3_1_i_reg_1317 <= grp_matrixSlicer_fu_298_ap_return_13;
        Matrix_4x4_1_3_2_i_reg_1322 <= grp_matrixSlicer_fu_298_ap_return_14;
        Matrix_4x4_1_3_3_i_reg_1327 <= grp_matrixSlicer_fu_298_ap_return_15;
        Matrix_4x4_2_0_0_i_reg_1332 <= grp_matrixSlicer_fu_298_ap_return_16;
        Matrix_4x4_2_0_1_i_reg_1337 <= grp_matrixSlicer_fu_298_ap_return_17;
        Matrix_4x4_2_0_2_i_reg_1342 <= grp_matrixSlicer_fu_298_ap_return_18;
        Matrix_4x4_2_0_3_i_reg_1347 <= grp_matrixSlicer_fu_298_ap_return_19;
        Matrix_4x4_2_1_0_i_reg_1352 <= grp_matrixSlicer_fu_298_ap_return_20;
        Matrix_4x4_2_1_1_i_reg_1357 <= grp_matrixSlicer_fu_298_ap_return_21;
        Matrix_4x4_2_1_2_i_reg_1362 <= grp_matrixSlicer_fu_298_ap_return_22;
        Matrix_4x4_2_1_3_i_reg_1367 <= grp_matrixSlicer_fu_298_ap_return_23;
        Matrix_4x4_2_2_0_i_reg_1372 <= grp_matrixSlicer_fu_298_ap_return_24;
        Matrix_4x4_2_2_1_i_reg_1377 <= grp_matrixSlicer_fu_298_ap_return_25;
        Matrix_4x4_2_2_2_i_reg_1382 <= grp_matrixSlicer_fu_298_ap_return_26;
        Matrix_4x4_2_2_3_i_reg_1387 <= grp_matrixSlicer_fu_298_ap_return_27;
        Matrix_4x4_2_3_0_i_reg_1392 <= grp_matrixSlicer_fu_298_ap_return_28;
        Matrix_4x4_2_3_1_i_reg_1397 <= grp_matrixSlicer_fu_298_ap_return_29;
        Matrix_4x4_2_3_2_i_reg_1402 <= grp_matrixSlicer_fu_298_ap_return_30;
        Matrix_4x4_2_3_3_i_reg_1407 <= grp_matrixSlicer_fu_298_ap_return_31;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Matrix_4x4_final_0_0_ret_i_reg_1492 <= call_ret2_i_matrixAdder_fu_351_ap_return_0;
        Matrix_4x4_final_0_1_ret_i_reg_1497 <= call_ret2_i_matrixAdder_fu_351_ap_return_1;
        Matrix_4x4_final_0_2_ret_i_reg_1502 <= call_ret2_i_matrixAdder_fu_351_ap_return_2;
        Matrix_4x4_final_0_3_ret_i_reg_1507 <= call_ret2_i_matrixAdder_fu_351_ap_return_3;
        Matrix_4x4_final_1_0_ret_i_reg_1512 <= call_ret2_i_matrixAdder_fu_351_ap_return_4;
        Matrix_4x4_final_1_1_ret_i_reg_1517 <= call_ret2_i_matrixAdder_fu_351_ap_return_5;
        Matrix_4x4_final_1_2_ret_i_reg_1522 <= call_ret2_i_matrixAdder_fu_351_ap_return_6;
        Matrix_4x4_final_1_3_ret_i_reg_1527 <= call_ret2_i_matrixAdder_fu_351_ap_return_7;
        Matrix_4x4_final_2_0_ret_i_reg_1532 <= call_ret2_i_matrixAdder_fu_351_ap_return_8;
        Matrix_4x4_final_2_1_ret_i_reg_1537 <= call_ret2_i_matrixAdder_fu_351_ap_return_9;
        Matrix_4x4_final_2_2_ret_i_reg_1542 <= call_ret2_i_matrixAdder_fu_351_ap_return_10;
        Matrix_4x4_final_2_3_ret_i_reg_1547 <= call_ret2_i_matrixAdder_fu_351_ap_return_11;
        Matrix_4x4_final_3_0_ret_i_reg_1552 <= call_ret2_i_matrixAdder_fu_351_ap_return_12;
        Matrix_4x4_final_3_1_ret_i_reg_1557 <= call_ret2_i_matrixAdder_fu_351_ap_return_13;
        Matrix_4x4_final_3_2_ret_i_reg_1562 <= call_ret2_i_matrixAdder_fu_351_ap_return_14;
        Matrix_4x4_final_3_3_ret_i_reg_1567 <= call_ret2_i_matrixAdder_fu_351_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln30_reg_1247 <= add_ln30_fu_555_p2;
        icmp_ln30_reg_1243 <= icmp_ln30_fu_549_p2;
        icmp_ln30_reg_1243_pp0_iter1_reg <= icmp_ln30_reg_1243;
        size_read_reg_1238 <= size;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        matrix_4x4_out_0_0_i_reg_1412 <= grp_multiplier_fu_315_ap_return_0;
        matrix_4x4_out_0_1_i_reg_1417 <= grp_multiplier_fu_315_ap_return_1;
        matrix_4x4_out_0_2_i_reg_1422 <= grp_multiplier_fu_315_ap_return_2;
        matrix_4x4_out_0_3_i_reg_1427 <= grp_multiplier_fu_315_ap_return_3;
        matrix_4x4_out_1_0_i_reg_1432 <= grp_multiplier_fu_315_ap_return_4;
        matrix_4x4_out_1_1_i_reg_1437 <= grp_multiplier_fu_315_ap_return_5;
        matrix_4x4_out_1_2_i_reg_1442 <= grp_multiplier_fu_315_ap_return_6;
        matrix_4x4_out_1_3_i_reg_1447 <= grp_multiplier_fu_315_ap_return_7;
        matrix_4x4_out_2_0_i_reg_1452 <= grp_multiplier_fu_315_ap_return_8;
        matrix_4x4_out_2_1_i_reg_1457 <= grp_multiplier_fu_315_ap_return_9;
        matrix_4x4_out_2_2_i_reg_1462 <= grp_multiplier_fu_315_ap_return_10;
        matrix_4x4_out_2_3_i_reg_1467 <= grp_multiplier_fu_315_ap_return_11;
        matrix_4x4_out_3_0_i_reg_1472 <= grp_multiplier_fu_315_ap_return_12;
        matrix_4x4_out_3_1_i_reg_1477 <= grp_multiplier_fu_315_ap_return_13;
        matrix_4x4_out_3_2_i_reg_1482 <= grp_multiplier_fu_315_ap_return_14;
        matrix_4x4_out_3_3_i_reg_1487 <= grp_multiplier_fu_315_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matrix_in_1_read_reg_1233 <= matrix_in_1;
        matrix_in_2_read_reg_1228 <= matrix_in_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln30_reg_1243_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter1_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_loop_exit_done_int = 1'b1;
    end else begin
        ap_loop_exit_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_0 = ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_1 = ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_10 = ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_11 = ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_12 = ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_13 = ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_14 = ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_15 = ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_2 = ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_3 = ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_4 = ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_5 = ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_6 = ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_7 = ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_8 = ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_return_9 = ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load = Matrix_4x4_final_1_1_ret_i_reg_1517;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load = Matrix_4x4_final_10_i_out_0_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load = Matrix_4x4_final_1_0_ret_i_reg_1512;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load = Matrix_4x4_final_11_i_out_0_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load = Matrix_4x4_final_0_3_ret_i_reg_1507;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load = Matrix_4x4_final_12_i_out_0_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load = Matrix_4x4_final_0_2_ret_i_reg_1502;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load = Matrix_4x4_final_13_i_out_0_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load = Matrix_4x4_final_0_1_ret_i_reg_1497;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load = Matrix_4x4_final_14_i_out_0_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load = Matrix_4x4_final_0_0_ret_i_reg_1492;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load = Matrix_4x4_final_15_i_out_0_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load = Matrix_4x4_final_3_2_ret_i_reg_1562;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load = Matrix_4x4_final_1_i_out_0_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load = Matrix_4x4_final_3_1_ret_i_reg_1557;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load = Matrix_4x4_final_2_i_out_0_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load = Matrix_4x4_final_3_0_ret_i_reg_1552;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load = Matrix_4x4_final_3_i_out_0_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load = Matrix_4x4_final_2_3_ret_i_reg_1547;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load = Matrix_4x4_final_4_i_out_0_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load = Matrix_4x4_final_2_2_ret_i_reg_1542;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load = Matrix_4x4_final_5_i_out_0_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load = Matrix_4x4_final_2_1_ret_i_reg_1537;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load = Matrix_4x4_final_6_i_out_0_fu_156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load = Matrix_4x4_final_2_0_ret_i_reg_1532;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load = Matrix_4x4_final_7_i_out_0_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load = Matrix_4x4_final_1_3_ret_i_reg_1527;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load = Matrix_4x4_final_8_i_out_0_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load = Matrix_4x4_final_1_2_ret_i_reg_1522;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load = Matrix_4x4_final_9_i_out_0_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load = Matrix_4x4_final_3_3_ret_i_reg_1567;
    end else begin
        ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load = Matrix_4x4_final_i_out_0_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 14'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_116;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp141_grp6) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp140_grp5) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp139_grp16) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp138_grp15) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp137_grp4) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp136_grp3) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp135_grp14) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp134_grp13) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp133_grp2) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp132_grp1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp131_grp12) & (1'b1 == 
    ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp130_grp11) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp129_grp10) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp128_grp9) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp127_grp8) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp125_grp7) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_matrixSlicer_fu_298_ap_ce = 1'b1;
    end else begin
        grp_matrixSlicer_fu_298_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp194_grp0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp189_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp193_grp0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp192_grp0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp191_grp0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp190_grp0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_multiplier_fu_315_ap_ce = 1'b1;
    end else begin
        grp_multiplier_fu_315_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_ignoreCallOp152_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp151_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp150_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp149_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp148_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_ignoreCallOp147_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_ignoreCallOp146_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_ignoreCallOp145_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_ignoreCallOp144_grp9) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_ignoreCallOp143_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_ignoreCallOp142_grp7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_ignoreCallOp141_grp6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_ignoreCallOp140_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_ignoreCallOp139_grp16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_ignoreCallOp138_grp15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_ignoreCallOp137_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_ignoreCallOp136_grp3) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp135_grp14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp134_grp13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp133_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp132_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        m_axi_matrix_a_0_ARVALID = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARVALID;
    end else begin
        m_axi_matrix_a_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_ignoreCallOp156_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_ignoreCallOp155_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_ignoreCallOp154_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_ignoreCallOp153_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_ignoreCallOp152_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp151_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp150_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp149_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp148_grp1) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_ignoreCallOp147_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_ignoreCallOp146_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_ignoreCallOp145_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_ignoreCallOp144_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_ignoreCallOp143_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_ignoreCallOp142_grp7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_ignoreCallOp141_grp6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_ignoreCallOp140_grp5) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        m_axi_matrix_a_0_RREADY = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_RREADY;
    end else begin
        m_axi_matrix_a_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_ignoreCallOp152_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp151_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp150_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp149_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp148_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_ignoreCallOp147_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_ignoreCallOp146_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_ignoreCallOp145_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_ignoreCallOp144_grp9) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_ignoreCallOp143_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_ignoreCallOp142_grp7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_ignoreCallOp141_grp6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_ignoreCallOp140_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_ignoreCallOp139_grp16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_ignoreCallOp138_grp15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_ignoreCallOp137_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_ignoreCallOp136_grp3) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp135_grp14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp134_grp13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp133_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp132_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        m_axi_matrix_b_0_ARVALID = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARVALID;
    end else begin
        m_axi_matrix_b_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_ignoreCallOp156_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_ignoreCallOp155_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_ignoreCallOp154_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_ignoreCallOp153_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_ignoreCallOp152_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_ignoreCallOp151_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_ignoreCallOp150_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_ignoreCallOp149_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_ignoreCallOp148_grp1) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_ignoreCallOp147_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_ignoreCallOp146_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_ignoreCallOp145_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_ignoreCallOp144_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_ignoreCallOp143_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_ignoreCallOp142_grp7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_ignoreCallOp141_grp6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_ignoreCallOp140_grp5) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        m_axi_matrix_b_0_RREADY = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_RREADY;
    end else begin
        m_axi_matrix_b_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage10_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_grp7) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_grp6) & (icmp_ln30_reg_1243 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        matrix_a_blk_n_AR = grp_matrixSlicer_fu_298_matrix_a_blk_n_AR;
    end else begin
        matrix_a_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage10_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_grp7) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_grp6) & (icmp_ln30_reg_1243 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        matrix_a_blk_n_R = grp_matrixSlicer_fu_298_matrix_a_blk_n_R;
    end else begin
        matrix_a_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage10_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_grp7) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_grp6) & (icmp_ln30_reg_1243 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        matrix_b_blk_n_AR = grp_matrixSlicer_fu_298_matrix_b_blk_n_AR;
    end else begin
        matrix_b_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_grp16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_grp15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage10_grp14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_grp13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_grp12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_grp11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_grp10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_grp9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_grp8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_grp7) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_grp6) & (icmp_ln30_reg_1243 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage15_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage12_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage11_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage8_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln30_reg_1243 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        matrix_b_blk_n_R = grp_matrixSlicer_fu_298_matrix_b_blk_n_R;
    end else begin
        matrix_b_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage7) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_fu_555_p2 = (ap_sig_allocacmp_i_load + 14'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1_grp6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp141_grp6 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call20));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp189_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0_ignore_call53));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp141_grp6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp189_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1_grp6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

assign ap_block_pp0_stage10_11001_ignoreCallOp135_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_ignoreCallOp135_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_ignoreCallOp151_grp14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage10_iter1_grp14));
end

assign ap_block_pp0_stage11_11001_ignoreCallOp136_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_ignoreCallOp136_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_ignoreCallOp152_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage11_iter1_grp3)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0_grp3)));
end

assign ap_block_pp0_stage12_11001_ignoreCallOp137_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_ignoreCallOp137_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_ignoreCallOp153_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage12_iter1_grp4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state13_pp0_stage12_iter0_grp4)));
end

assign ap_block_pp0_stage13_11001_ignoreCallOp138_grp15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_grp15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_ignoreCallOp138_grp15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_ignoreCallOp154_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage13_iter1_grp15));
end

assign ap_block_pp0_stage14_11001_ignoreCallOp139_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_ignoreCallOp139_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_ignoreCallOp155_grp16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage14_iter1_grp16));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage15_iter1_grp5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0_grp5)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp5 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage15_iter1_grp5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0_grp5)));
end

assign ap_block_pp0_stage15_11001_ignoreCallOp140_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_ignoreCallOp140_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_ignoreCallOp156_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage15_iter1_grp5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0_grp5)));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp125_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp190 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage1_iter1_ignore_call53_grp7));
end

assign ap_block_pp0_stage1_11001_ignoreCallOp190_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp125_grp7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp142_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage1_iter1_grp7));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp127_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_ignoreCallOp191 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_ignore_call53_grp8));
end

assign ap_block_pp0_stage2_11001_ignoreCallOp191_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp127_grp8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp143_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_grp8));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp128_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_ignoreCallOp192 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_ignore_call53_grp9));
end

assign ap_block_pp0_stage3_11001_ignoreCallOp192_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp128_grp9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp144_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_grp9));
end

assign ap_block_pp0_stage3_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp129_grp10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001_ignoreCallOp193 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_ignore_call53_grp10));
end

assign ap_block_pp0_stage4_11001_ignoreCallOp193_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_ignoreCallOp145_grp10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_grp10));
end

assign ap_block_pp0_stage4_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp130_grp11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001_ignoreCallOp194 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_ignore_call53_grp11));
end

assign ap_block_pp0_stage5_11001_ignoreCallOp194_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_ignoreCallOp146_grp11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_grp11));
end

assign ap_block_pp0_stage5_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp131_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_ignoreCallOp147_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_ignoreCallOp227_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage6_iter1_grp12));
end

assign ap_block_pp0_stage6_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0_grp1)));
end

assign ap_block_pp0_stage7_11001_ignoreCallOp132_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_ignoreCallOp132_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_ignoreCallOp148_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001_ignoreCallOp133_grp2 = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage8_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_ignoreCallOp133_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_ignoreCallOp149_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage8_iter1_grp2)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state9_pp0_stage8_iter0_grp2)));
end

assign ap_block_pp0_stage9_11001_ignoreCallOp134_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_ignoreCallOp134_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_ignoreCallOp150_grp13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage9_iter1_grp13));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0_grp3 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0_grp4 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0_grp5 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1_grp6 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1_grp7 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1_ignore_call53_grp7 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1_grp8 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1_ignore_call53_grp8 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call20 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call53 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state20_pp0_stage3_iter1_grp9 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage3_iter1_ignore_call53_grp9 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage4_iter1_grp10 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage4_iter1_ignore_call53_grp10 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage5_iter1_grp11 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage5_iter1_ignore_call53_grp11 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage6_iter1_grp12 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage7_iter1_grp1 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage8_iter1_grp2 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage9_iter1_grp13 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage10_iter1_grp14 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage11_iter1_grp3 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage12_iter1_grp4 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage13_iter1_grp15 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage14_iter1_grp16 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage15_iter1_grp5 = (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0_grp1 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0_grp2 = ((icmp_ln30_reg_1243 == 1'd0) & (((grp_matrixSlicer_fu_298_matrix_b_blk_n_R & grp_matrixSlicer_fu_298_matrix_b_blk_n_AR) == 1'b0) | ((grp_matrixSlicer_fu_298_matrix_a_blk_n_R & grp_matrixSlicer_fu_298_matrix_a_blk_n_AR) == 1'b0)));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign ap_ready = ap_ready_sig;

assign grp_matrixSlicer_fu_298_ap_start = grp_matrixSlicer_fu_298_ap_start_reg;

assign icmp_ln30_fu_549_p2 = ((ap_sig_allocacmp_i_load == tmp_fu_451_p4) ? 1'b1 : 1'b0);

assign m_axi_matrix_a_0_ARADDR = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARADDR;

assign m_axi_matrix_a_0_ARBURST = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARBURST;

assign m_axi_matrix_a_0_ARCACHE = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARCACHE;

assign m_axi_matrix_a_0_ARID = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARID;

assign m_axi_matrix_a_0_ARLEN = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLEN;

assign m_axi_matrix_a_0_ARLOCK = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARLOCK;

assign m_axi_matrix_a_0_ARPROT = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARPROT;

assign m_axi_matrix_a_0_ARQOS = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARQOS;

assign m_axi_matrix_a_0_ARREGION = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARREGION;

assign m_axi_matrix_a_0_ARSIZE = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARSIZE;

assign m_axi_matrix_a_0_ARUSER = grp_matrixSlicer_fu_298_m_axi_matrix_a_0_ARUSER;

assign m_axi_matrix_a_0_AWADDR = 64'd0;

assign m_axi_matrix_a_0_AWBURST = 2'd0;

assign m_axi_matrix_a_0_AWCACHE = 4'd0;

assign m_axi_matrix_a_0_AWID = 1'd0;

assign m_axi_matrix_a_0_AWLEN = 32'd0;

assign m_axi_matrix_a_0_AWLOCK = 2'd0;

assign m_axi_matrix_a_0_AWPROT = 3'd0;

assign m_axi_matrix_a_0_AWQOS = 4'd0;

assign m_axi_matrix_a_0_AWREGION = 4'd0;

assign m_axi_matrix_a_0_AWSIZE = 3'd0;

assign m_axi_matrix_a_0_AWUSER = 1'd0;

assign m_axi_matrix_a_0_AWVALID = 1'b0;

assign m_axi_matrix_a_0_BREADY = 1'b0;

assign m_axi_matrix_a_0_WDATA = 16'd0;

assign m_axi_matrix_a_0_WID = 1'd0;

assign m_axi_matrix_a_0_WLAST = 1'b0;

assign m_axi_matrix_a_0_WSTRB = 2'd0;

assign m_axi_matrix_a_0_WUSER = 1'd0;

assign m_axi_matrix_a_0_WVALID = 1'b0;

assign m_axi_matrix_b_0_ARADDR = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARADDR;

assign m_axi_matrix_b_0_ARBURST = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARBURST;

assign m_axi_matrix_b_0_ARCACHE = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARCACHE;

assign m_axi_matrix_b_0_ARID = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARID;

assign m_axi_matrix_b_0_ARLEN = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLEN;

assign m_axi_matrix_b_0_ARLOCK = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARLOCK;

assign m_axi_matrix_b_0_ARPROT = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARPROT;

assign m_axi_matrix_b_0_ARQOS = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARQOS;

assign m_axi_matrix_b_0_ARREGION = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARREGION;

assign m_axi_matrix_b_0_ARSIZE = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARSIZE;

assign m_axi_matrix_b_0_ARUSER = grp_matrixSlicer_fu_298_m_axi_matrix_b_0_ARUSER;

assign m_axi_matrix_b_0_AWADDR = 64'd0;

assign m_axi_matrix_b_0_AWBURST = 2'd0;

assign m_axi_matrix_b_0_AWCACHE = 4'd0;

assign m_axi_matrix_b_0_AWID = 1'd0;

assign m_axi_matrix_b_0_AWLEN = 32'd0;

assign m_axi_matrix_b_0_AWLOCK = 2'd0;

assign m_axi_matrix_b_0_AWPROT = 3'd0;

assign m_axi_matrix_b_0_AWQOS = 4'd0;

assign m_axi_matrix_b_0_AWREGION = 4'd0;

assign m_axi_matrix_b_0_AWSIZE = 3'd0;

assign m_axi_matrix_b_0_AWUSER = 1'd0;

assign m_axi_matrix_b_0_AWVALID = 1'b0;

assign m_axi_matrix_b_0_BREADY = 1'b0;

assign m_axi_matrix_b_0_WDATA = 16'd0;

assign m_axi_matrix_b_0_WID = 1'd0;

assign m_axi_matrix_b_0_WLAST = 1'b0;

assign m_axi_matrix_b_0_WSTRB = 2'd0;

assign m_axi_matrix_b_0_WUSER = 1'd0;

assign m_axi_matrix_b_0_WVALID = 1'b0;

assign p_read10_cast_fu_435_p1 = p_read10;

assign p_read14_cast_fu_431_p1 = p_read14;

assign p_read18_cast_fu_427_p1 = p_read18;

assign p_read22_cast_fu_423_p1 = p_read22;

assign p_read26_cast_fu_419_p1 = p_read26;

assign p_read2_cast_fu_443_p1 = p_read2;

assign p_read30_cast_fu_415_p1 = p_read30;

assign p_read34_cast_fu_411_p1 = p_read34;

assign p_read38_cast_fu_407_p1 = p_read38;

assign p_read42_cast_fu_403_p1 = p_read42;

assign p_read46_cast_fu_399_p1 = p_read46;

assign p_read50_cast_fu_395_p1 = p_read50;

assign p_read54_cast_fu_391_p1 = p_read54;

assign p_read58_cast_fu_387_p1 = p_read58;

assign p_read6_cast_fu_439_p1 = p_read6;

assign p_read_cast_fu_447_p1 = p_read;

assign tmp_fu_451_p4 = {{size[15:2]}};

endmodule //MatrixMult_dataflow_in_loop_VITIS_LOOP_24_1_1_Loop_VITIS_LOOP_30_2_proc10
