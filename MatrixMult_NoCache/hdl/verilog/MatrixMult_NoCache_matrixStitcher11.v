// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMult_NoCache_matrixStitcher11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_matrix_c_0_AWVALID,
        m_axi_matrix_c_0_AWREADY,
        m_axi_matrix_c_0_AWADDR,
        m_axi_matrix_c_0_AWID,
        m_axi_matrix_c_0_AWLEN,
        m_axi_matrix_c_0_AWSIZE,
        m_axi_matrix_c_0_AWBURST,
        m_axi_matrix_c_0_AWLOCK,
        m_axi_matrix_c_0_AWCACHE,
        m_axi_matrix_c_0_AWPROT,
        m_axi_matrix_c_0_AWQOS,
        m_axi_matrix_c_0_AWREGION,
        m_axi_matrix_c_0_AWUSER,
        m_axi_matrix_c_0_WVALID,
        m_axi_matrix_c_0_WREADY,
        m_axi_matrix_c_0_WDATA,
        m_axi_matrix_c_0_WSTRB,
        m_axi_matrix_c_0_WLAST,
        m_axi_matrix_c_0_WID,
        m_axi_matrix_c_0_WUSER,
        m_axi_matrix_c_0_ARVALID,
        m_axi_matrix_c_0_ARREADY,
        m_axi_matrix_c_0_ARADDR,
        m_axi_matrix_c_0_ARID,
        m_axi_matrix_c_0_ARLEN,
        m_axi_matrix_c_0_ARSIZE,
        m_axi_matrix_c_0_ARBURST,
        m_axi_matrix_c_0_ARLOCK,
        m_axi_matrix_c_0_ARCACHE,
        m_axi_matrix_c_0_ARPROT,
        m_axi_matrix_c_0_ARQOS,
        m_axi_matrix_c_0_ARREGION,
        m_axi_matrix_c_0_ARUSER,
        m_axi_matrix_c_0_RVALID,
        m_axi_matrix_c_0_RREADY,
        m_axi_matrix_c_0_RDATA,
        m_axi_matrix_c_0_RLAST,
        m_axi_matrix_c_0_RID,
        m_axi_matrix_c_0_RFIFONUM,
        m_axi_matrix_c_0_RUSER,
        m_axi_matrix_c_0_RRESP,
        m_axi_matrix_c_0_BVALID,
        m_axi_matrix_c_0_BREADY,
        m_axi_matrix_c_0_BRESP,
        m_axi_matrix_c_0_BID,
        m_axi_matrix_c_0_BUSER,
        ap_ce,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        size,
        matrix_out
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_matrix_c_0_AWVALID;
input   m_axi_matrix_c_0_AWREADY;
output  [63:0] m_axi_matrix_c_0_AWADDR;
output  [0:0] m_axi_matrix_c_0_AWID;
output  [31:0] m_axi_matrix_c_0_AWLEN;
output  [2:0] m_axi_matrix_c_0_AWSIZE;
output  [1:0] m_axi_matrix_c_0_AWBURST;
output  [1:0] m_axi_matrix_c_0_AWLOCK;
output  [3:0] m_axi_matrix_c_0_AWCACHE;
output  [2:0] m_axi_matrix_c_0_AWPROT;
output  [3:0] m_axi_matrix_c_0_AWQOS;
output  [3:0] m_axi_matrix_c_0_AWREGION;
output  [0:0] m_axi_matrix_c_0_AWUSER;
output   m_axi_matrix_c_0_WVALID;
input   m_axi_matrix_c_0_WREADY;
output  [31:0] m_axi_matrix_c_0_WDATA;
output  [3:0] m_axi_matrix_c_0_WSTRB;
output   m_axi_matrix_c_0_WLAST;
output  [0:0] m_axi_matrix_c_0_WID;
output  [0:0] m_axi_matrix_c_0_WUSER;
output   m_axi_matrix_c_0_ARVALID;
input   m_axi_matrix_c_0_ARREADY;
output  [63:0] m_axi_matrix_c_0_ARADDR;
output  [0:0] m_axi_matrix_c_0_ARID;
output  [31:0] m_axi_matrix_c_0_ARLEN;
output  [2:0] m_axi_matrix_c_0_ARSIZE;
output  [1:0] m_axi_matrix_c_0_ARBURST;
output  [1:0] m_axi_matrix_c_0_ARLOCK;
output  [3:0] m_axi_matrix_c_0_ARCACHE;
output  [2:0] m_axi_matrix_c_0_ARPROT;
output  [3:0] m_axi_matrix_c_0_ARQOS;
output  [3:0] m_axi_matrix_c_0_ARREGION;
output  [0:0] m_axi_matrix_c_0_ARUSER;
input   m_axi_matrix_c_0_RVALID;
output   m_axi_matrix_c_0_RREADY;
input  [31:0] m_axi_matrix_c_0_RDATA;
input   m_axi_matrix_c_0_RLAST;
input  [0:0] m_axi_matrix_c_0_RID;
input  [11:0] m_axi_matrix_c_0_RFIFONUM;
input  [0:0] m_axi_matrix_c_0_RUSER;
input  [1:0] m_axi_matrix_c_0_RRESP;
input   m_axi_matrix_c_0_BVALID;
output   m_axi_matrix_c_0_BREADY;
input  [1:0] m_axi_matrix_c_0_BRESP;
input  [0:0] m_axi_matrix_c_0_BID;
input  [0:0] m_axi_matrix_c_0_BUSER;
input   ap_ce;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
input  [31:0] p_read11;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] p_read14;
input  [31:0] p_read15;
input  [15:0] size;
input  [63:0] matrix_out;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_matrix_c_0_AWVALID;
reg[63:0] m_axi_matrix_c_0_AWADDR;
reg m_axi_matrix_c_0_WVALID;
reg[31:0] m_axi_matrix_c_0_WDATA;
reg m_axi_matrix_c_0_BREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_pp0_stage15_subdone_grp12_done_reg;
reg    ap_block_pp0_stage15_subdone_grp12;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage15_subdone_grp13_done_reg;
reg    ap_block_pp0_stage15_subdone_grp13;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [12:0] row_offset;
reg   [12:0] col_offset;
reg    matrix_c_blk_n_AW;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_grp1;
reg    ap_block_pp0_stage6_subdone_grp1_done_reg;
reg    ap_block_pp0_stage6_subdone_grp1;
reg    ap_block_pp0_stage6_subdone;
reg    matrix_c_blk_n_W;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_grp2;
reg    ap_block_pp0_stage7_subdone_grp2_done_reg;
reg    ap_block_pp0_stage7_subdone_grp2;
reg    ap_block_pp0_stage7_subdone;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_grp3;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_grp4;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_grp5;
reg    ap_block_pp0_stage10_subdone_grp5_done_reg;
reg    ap_block_pp0_stage10_subdone_grp5;
reg    ap_block_pp0_stage10_subdone;
reg    matrix_c_blk_n_B;
wire    ap_block_pp0_stage15_grp12;
wire    ap_block_pp0_stage10_grp6;
reg    ap_block_pp0_stage10_subdone_grp6_done_reg;
reg    ap_block_pp0_stage10_subdone_grp6;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_grp7;
reg    ap_block_pp0_stage11_subdone_grp7_done_reg;
reg    ap_block_pp0_stage11_subdone_grp7;
reg    ap_block_pp0_stage11_subdone;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_grp8;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_grp9;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_grp10;
reg    ap_block_pp0_stage14_subdone_grp10_done_reg;
reg    ap_block_pp0_stage14_subdone_grp10;
reg    ap_block_pp0_stage14_subdone;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_grp18;
reg    ap_block_pp0_stage3_subdone_grp18_done_reg;
reg    ap_block_pp0_stage3_subdone_grp18;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage14_grp11;
reg    ap_block_pp0_stage14_subdone_grp11_done_reg;
reg    ap_block_pp0_stage14_subdone_grp11;
wire    ap_block_pp0_stage15_grp13;
wire    ap_block_pp0_stage0_grp14;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp15;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp16;
reg    ap_block_pp0_stage2_subdone_grp16_done_reg;
reg    ap_block_pp0_stage2_subdone_grp16;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage7_grp23;
reg    ap_block_pp0_stage7_subdone_grp23_done_reg;
reg    ap_block_pp0_stage7_subdone_grp23;
wire    ap_block_pp0_stage2_grp17;
reg    ap_block_pp0_stage2_subdone_grp17_done_reg;
reg    ap_block_pp0_stage2_subdone_grp17;
wire    ap_block_pp0_stage3_grp19;
reg    ap_block_pp0_stage3_subdone_grp19_done_reg;
reg    ap_block_pp0_stage3_subdone_grp19;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_grp20;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_grp21;
wire    ap_block_pp0_stage6_grp22;
reg    ap_block_pp0_stage6_subdone_grp22_done_reg;
reg    ap_block_pp0_stage6_subdone_grp22;
wire    ap_block_pp0_stage11_grp24;
reg    ap_block_pp0_stage11_subdone_grp24_done_reg;
reg    ap_block_pp0_stage11_subdone_grp24;
reg   [15:0] size_read_reg_506;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_subdone;
reg   [12:0] row_offset_load_reg_513;
reg   [12:0] col_offset_load_reg_520;
wire   [28:0] size_cast2_fu_248_p1;
reg   [28:0] size_cast2_reg_531;
wire   [12:0] add_ln39_fu_252_p2;
reg   [12:0] add_ln39_reg_537;
wire   [13:0] row_offset_load_cast8_fu_258_p1;
reg   [13:0] row_offset_load_cast8_reg_543;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
reg    ap_block_pp0_stage1_subdone_grp0;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln41_fu_264_p2;
reg   [0:0] icmp_ln41_reg_549;
wire   [12:0] select_ln41_1_fu_281_p3;
reg   [12:0] select_ln41_1_reg_554;
wire   [29:0] size_cast7_fu_294_p1;
reg   [29:0] size_cast7_reg_560;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
reg    ap_block_pp0_stage2_subdone_grp0;
wire   [28:0] zext_ln35_1_fu_297_p1;
reg   [28:0] zext_ln35_1_reg_566;
wire   [28:0] grp_fu_474_p3;
reg   [28:0] add_ln35_reg_575;
wire    ap_block_pp0_stage3_11001_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
reg    ap_block_pp0_stage3_subdone_grp0;
reg   [63:0] matrix_out_read_reg_580;
wire    ap_block_pp0_stage4_11001_grp0;
reg    ap_block_pp0_stage4_subdone_grp0_done_reg;
reg    ap_block_pp0_stage4_subdone_grp0;
reg    ap_block_pp0_stage4_subdone;
wire   [29:0] zext_ln35_fu_326_p1;
reg   [29:0] zext_ln35_reg_588;
wire   [28:0] grp_fu_482_p4;
reg   [28:0] add_ln35_2_reg_599;
reg   [63:0] matrix_c_addr_reg_604;
wire    ap_block_pp0_stage5_11001_grp0;
reg    ap_block_pp0_stage5_subdone_grp0_done_reg;
reg    ap_block_pp0_stage5_subdone_grp0;
reg    ap_block_pp0_stage5_subdone;
wire   [29:0] grp_fu_490_p4;
reg   [29:0] add_ln35_4_reg_611;
reg   [31:0] p_read31_reg_616;
wire    ap_block_pp0_stage6_11001_grp0;
reg    ap_block_pp0_stage6_subdone_grp0_done_reg;
reg    ap_block_pp0_stage6_subdone_grp0;
wire   [29:0] grp_fu_499_p4;
reg   [29:0] add_ln35_6_reg_621;
reg   [31:0] p_read_15_reg_626;
wire    ap_block_pp0_stage7_11001_grp0;
reg    ap_block_pp0_stage7_subdone_grp0_done_reg;
reg    ap_block_pp0_stage7_subdone_grp0;
reg   [31:0] p_read_14_reg_646;
wire    ap_block_pp0_stage8_11001_grp0;
reg    ap_block_pp0_stage8_subdone_grp0_done_reg;
reg    ap_block_pp0_stage8_subdone_grp0;
reg    ap_block_pp0_stage8_subdone;
reg   [63:0] matrix_c_addr_1_reg_651;
reg   [63:0] matrix_c_addr_2_reg_658;
reg   [63:0] matrix_c_addr_3_reg_665;
reg   [31:0] p_read_13_reg_672;
wire    ap_block_pp0_stage9_11001_grp0;
reg    ap_block_pp0_stage9_subdone_grp0_done_reg;
reg    ap_block_pp0_stage9_subdone_grp0;
reg    ap_block_pp0_stage9_subdone;
reg   [31:0] p_read_12_reg_677;
wire    ap_block_pp0_stage10_11001_grp0;
reg    ap_block_pp0_stage10_subdone_grp0_done_reg;
reg    ap_block_pp0_stage10_subdone_grp0;
reg   [31:0] p_read_11_reg_682;
wire    ap_block_pp0_stage11_11001_grp0;
reg    ap_block_pp0_stage11_subdone_grp0_done_reg;
reg    ap_block_pp0_stage11_subdone_grp0;
reg   [31:0] p_read_10_reg_687;
reg    ap_block_pp0_stage12_11001_grp0;
reg    ap_block_pp0_stage12_subdone_grp0_done_reg;
reg    ap_block_pp0_stage12_subdone_grp0;
reg    ap_block_pp0_stage12_subdone;
reg   [31:0] p_read_9_reg_692;
wire    ap_block_pp0_stage13_11001_grp0;
reg    ap_block_pp0_stage13_subdone_grp0_done_reg;
reg    ap_block_pp0_stage13_subdone_grp0;
reg    ap_block_pp0_stage13_subdone;
reg   [31:0] p_read_8_reg_697;
wire    ap_block_pp0_stage14_11001_grp0;
reg    ap_block_pp0_stage14_subdone_grp0_done_reg;
reg    ap_block_pp0_stage14_subdone_grp0;
reg   [31:0] p_read_1_reg_702;
wire    ap_block_pp0_stage15_11001_grp0;
reg    ap_block_pp0_stage15_subdone_grp0_done_reg;
reg    ap_block_pp0_stage15_subdone_grp0;
reg   [31:0] p_read_2_reg_707;
reg   [31:0] p_read_3_reg_712;
reg   [31:0] p_read_4_reg_717;
reg   [31:0] p_read_5_reg_722;
reg   [31:0] p_read_6_reg_727;
reg   [31:0] p_read_7_reg_732;
wire  signed [63:0] p_cast_cast_fu_356_p1;
wire    ap_block_pp0_stage5_grp0;
wire  signed [63:0] p_cast3_cast_fu_424_p1;
wire    ap_block_pp0_stage8_grp0;
wire  signed [63:0] p_cast5_cast_fu_444_p1;
wire  signed [63:0] sext_ln39_fu_464_p1;
reg    ap_block_pp0_stage6_11001_grp1;
reg    ap_block_pp0_stage10_11001_grp6;
reg    ap_block_pp0_stage14_11001_grp11;
reg    ap_block_pp0_stage2_11001_grp17;
reg    ap_block_pp0_stage7_11001_grp2;
wire    ap_block_pp0_stage7_01001_grp2;
reg    ap_block_pp0_stage8_11001_grp3;
wire    ap_block_pp0_stage8_01001_grp3;
reg    ap_block_pp0_stage9_11001_grp4;
wire    ap_block_pp0_stage9_01001_grp4;
reg    ap_block_pp0_stage10_11001_grp5;
wire    ap_block_pp0_stage10_01001_grp5;
reg    ap_block_pp0_stage11_11001_grp7;
wire    ap_block_pp0_stage11_01001_grp7;
reg    ap_block_pp0_stage12_11001_grp8;
reg    ap_block_pp0_stage12_01001_grp8;
reg    ap_block_pp0_stage13_11001_grp9;
wire    ap_block_pp0_stage13_01001_grp9;
reg    ap_block_pp0_stage14_11001_grp10;
wire    ap_block_pp0_stage14_01001_grp10;
reg    ap_block_pp0_stage15_11001_grp13;
wire    ap_block_pp0_stage15_01001_grp13;
reg    ap_block_pp0_stage0_11001_grp14;
reg    ap_block_pp0_stage0_01001_grp14;
reg    ap_block_pp0_stage1_11001_grp15;
wire    ap_block_pp0_stage1_01001_grp15;
reg    ap_block_pp0_stage2_11001_grp16;
wire    ap_block_pp0_stage2_01001_grp16;
reg    ap_block_pp0_stage3_11001_grp19;
wire    ap_block_pp0_stage3_01001_grp19;
reg    ap_block_pp0_stage4_11001_grp20;
wire    ap_block_pp0_stage4_01001_grp20;
reg    ap_block_pp0_stage5_11001_grp21;
wire    ap_block_pp0_stage5_01001_grp21;
reg    ap_block_pp0_stage6_11001_grp22;
wire    ap_block_pp0_stage6_01001_grp22;
reg    ap_block_pp0_stage15_11001_grp12;
reg    ap_block_pp0_stage3_11001_grp18;
reg    ap_block_pp0_stage7_11001_grp23;
reg    ap_block_pp0_stage11_11001_grp24;
wire   [12:0] select_ln47_fu_313_p3;
wire   [0:0] and_ln47_fu_308_p2;
wire    ap_block_pp0_stage0_grp0;
wire   [12:0] select_ln41_fu_274_p3;
wire    ap_block_pp0_stage1_grp0;
wire   [15:0] zext_ln41_fu_261_p1;
wire   [12:0] add_ln44_fu_269_p2;
wire    ap_block_pp0_stage2_grp0;
wire   [15:0] zext_ln47_fu_300_p1;
wire   [0:0] icmp_ln47_fu_303_p2;
wire    ap_block_pp0_stage4_grp0;
wire   [30:0] shl_ln_fu_329_p3;
wire   [63:0] grp_fu_340_p0;
wire   [63:0] grp_fu_340_p2;
wire   [61:0] p_cast_fu_346_p4;
wire    ap_block_pp0_stage7_grp0;
wire   [30:0] shl_ln35_1_fu_366_p3;
wire   [63:0] grp_fu_377_p0;
wire   [31:0] shl_ln35_2_fu_382_p3;
wire   [63:0] grp_fu_393_p0;
wire   [31:0] shl_ln35_3_fu_398_p3;
wire   [63:0] grp_fu_409_p0;
wire   [63:0] grp_fu_377_p2;
wire   [61:0] p_cast3_fu_414_p4;
wire   [63:0] grp_fu_393_p2;
wire   [61:0] p_cast5_fu_434_p4;
wire   [63:0] grp_fu_409_p2;
wire   [61:0] trunc_ln1_fu_454_p4;
wire   [15:0] grp_fu_474_p0;
wire   [12:0] grp_fu_474_p1;
wire   [12:0] grp_fu_474_p2;
wire   [12:0] grp_fu_482_p0;
wire   [0:0] grp_fu_482_p1;
wire   [15:0] grp_fu_482_p2;
wire   [12:0] grp_fu_482_p3;
wire    ap_block_pp0_stage3_grp0;
wire   [12:0] grp_fu_490_p0;
wire   [1:0] grp_fu_490_p1;
wire   [15:0] grp_fu_490_p2;
wire   [12:0] grp_fu_490_p3;
wire   [12:0] grp_fu_499_p0;
wire   [1:0] grp_fu_499_p1;
wire   [15:0] grp_fu_499_p2;
wire   [12:0] grp_fu_499_p3;
reg    grp_fu_340_ce;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    grp_fu_377_ce;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp0_stage8_11001;
reg    grp_fu_393_ce;
reg    grp_fu_409_ce;
reg    grp_fu_474_ce;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    grp_fu_482_ce;
reg    grp_fu_490_ce;
reg    grp_fu_499_ce;
reg    ap_block_pp0_stage6_11001;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_474_p00;
wire   [28:0] grp_fu_474_p10;
wire   [28:0] grp_fu_474_p20;
wire   [13:0] grp_fu_482_p00;
wire   [29:0] grp_fu_490_p20;
wire   [29:0] grp_fu_490_p30;
reg    ap_condition_1519;
reg    ap_condition_1522;
reg    ap_condition_1525;
reg    ap_condition_1528;
reg    ap_condition_1531;
reg    ap_condition_858;
reg    ap_condition_870;
reg    ap_condition_1538;
reg    ap_condition_1541;
reg    ap_condition_913;
reg    ap_condition_925;
reg    ap_condition_1548;
reg    ap_condition_1551;
reg    ap_condition_970;
reg    ap_condition_982;
reg    ap_condition_1558;
reg    ap_condition_1562;
reg    ap_condition_1026;
reg    ap_condition_1038;
reg    ap_condition_1570;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp12_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp13_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 row_offset = 13'd0;
#0 col_offset = 13'd0;
#0 ap_block_pp0_stage6_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp10_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp18_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp11_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp16_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp23_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp17_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp19_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp22_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp24_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp0_done_reg = 1'b0;
end

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_340_p0),
    .din1(matrix_out),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_377_p0),
    .din1(matrix_out_read_reg_580),
    .ce(grp_fu_377_ce),
    .dout(grp_fu_377_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_393_p0),
    .din1(matrix_out_read_reg_580),
    .ce(grp_fu_393_ce),
    .dout(grp_fu_393_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_409_p0),
    .din1(matrix_out_read_reg_580),
    .ce(grp_fu_409_ce),
    .dout(grp_fu_409_p2)
);

MatrixMult_NoCache_mac_muladd_16ns_13ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
mac_muladd_16ns_13ns_13ns_29_4_1_U181(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_474_p0),
    .din1(grp_fu_474_p1),
    .din2(grp_fu_474_p2),
    .ce(grp_fu_474_ce),
    .dout(grp_fu_474_p3)
);

MatrixMult_NoCache_ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1_U182(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_482_p0),
    .din1(grp_fu_482_p1),
    .din2(grp_fu_482_p2),
    .din3(grp_fu_482_p3),
    .ce(grp_fu_482_ce),
    .dout(grp_fu_482_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U183(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_490_p0),
    .din1(grp_fu_490_p1),
    .din2(grp_fu_490_p2),
    .din3(grp_fu_490_p3),
    .ce(grp_fu_490_ce),
    .dout(grp_fu_490_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_499_p0),
    .din1(grp_fu_499_p1),
    .din2(grp_fu_499_p2),
    .din3(grp_fu_499_p3),
    .ce(grp_fu_499_ce),
    .dout(grp_fu_499_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp0)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp5)) begin
                ap_block_pp0_stage10_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp6)) begin
                ap_block_pp0_stage10_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp0)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp24_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp24_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp24)) begin
                ap_block_pp0_stage11_subdone_grp24_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp7)) begin
                ap_block_pp0_stage11_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp0)) begin
                ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp0)) begin
                ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp0)) begin
                ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp10_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp10_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp10)) begin
                ap_block_pp0_stage14_subdone_grp10_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp11_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp11)) begin
                ap_block_pp0_stage14_subdone_grp11_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp0)) begin
                ap_block_pp0_stage15_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp12_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp12_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp12)) begin
                ap_block_pp0_stage15_subdone_grp12_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp13_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp13_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp13)) begin
                ap_block_pp0_stage15_subdone_grp13_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp16_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp16_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp16)) begin
                ap_block_pp0_stage2_subdone_grp16_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp17_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp17_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp17)) begin
                ap_block_pp0_stage2_subdone_grp17_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp18)) begin
                ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp19_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp19_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp19)) begin
                ap_block_pp0_stage3_subdone_grp19_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp0)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp0)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp0)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp1)) begin
                ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp22_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp22_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp22)) begin
                ap_block_pp0_stage6_subdone_grp22_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp0)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp23_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp23_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp23)) begin
                ap_block_pp0_stage7_subdone_grp23_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp2)) begin
                ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp0)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp0)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        add_ln35_2_reg_599 <= grp_fu_482_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        add_ln35_4_reg_611 <= grp_fu_490_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))) begin
        add_ln35_6_reg_621 <= grp_fu_499_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        add_ln35_reg_575 <= grp_fu_474_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        add_ln39_reg_537 <= add_ln39_fu_252_p2;
        col_offset_load_reg_520 <= col_offset;
        row_offset_load_reg_513 <= row_offset;
        size_cast2_reg_531[15 : 0] <= size_cast2_fu_248_p1[15 : 0];
        size_read_reg_506 <= size;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        col_offset <= select_ln41_fu_274_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        icmp_ln41_reg_549 <= icmp_ln41_fu_264_p2;
        row_offset_load_cast8_reg_543[12 : 0] <= row_offset_load_cast8_fu_258_p1[12 : 0];
        select_ln41_1_reg_554 <= select_ln41_1_fu_281_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0))) begin
        matrix_c_addr_1_reg_651 <= p_cast3_cast_fu_424_p1;
        matrix_c_addr_2_reg_658 <= p_cast5_cast_fu_444_p1;
        matrix_c_addr_3_reg_665 <= sext_ln39_fu_464_p1;
        p_read_14_reg_646 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        matrix_c_addr_reg_604 <= p_cast_cast_fu_356_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        matrix_out_read_reg_580 <= matrix_out;
        zext_ln35_reg_588[12 : 0] <= zext_ln35_fu_326_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))) begin
        p_read31_reg_616 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp0))) begin
        p_read_10_reg_687 <= p_read6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp0))) begin
        p_read_11_reg_682 <= p_read5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp0))) begin
        p_read_12_reg_677 <= p_read4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0))) begin
        p_read_13_reg_672 <= p_read3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))) begin
        p_read_15_reg_626 <= p_read1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage15_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp0))) begin
        p_read_1_reg_702 <= p_read15;
        p_read_2_reg_707 <= p_read14;
        p_read_3_reg_712 <= p_read13;
        p_read_4_reg_717 <= p_read12;
        p_read_5_reg_722 <= p_read11;
        p_read_6_reg_727 <= p_read10;
        p_read_7_reg_732 <= p_read9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp0))) begin
        p_read_8_reg_697 <= p_read8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp0))) begin
        p_read_9_reg_692 <= p_read7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'd0 == and_ln47_fu_308_p2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        row_offset <= select_ln47_fu_313_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        size_cast7_reg_560[15 : 0] <= size_cast7_fu_294_p1[15 : 0];
        zext_ln35_1_reg_566[12 : 0] <= zext_ln35_1_fu_297_p1[12 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))))) begin
        grp_fu_377_ce = 1'b1;
    end else begin
        grp_fu_377_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))))) begin
        grp_fu_393_ce = 1'b1;
    end else begin
        grp_fu_393_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))))) begin
        grp_fu_409_ce = 1'b1;
    end else begin
        grp_fu_409_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))))) begin
        grp_fu_474_ce = 1'b1;
    end else begin
        grp_fu_474_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))))) begin
        grp_fu_482_ce = 1'b1;
    end else begin
        grp_fu_482_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))))) begin
        grp_fu_490_ce = 1'b1;
    end else begin
        grp_fu_490_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_499_ce = 1'b1;
    end else begin
        grp_fu_499_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1528)) begin
            m_axi_matrix_c_0_AWADDR = matrix_c_addr_3_reg_665;
        end else if ((1'b1 == ap_condition_1525)) begin
            m_axi_matrix_c_0_AWADDR = matrix_c_addr_2_reg_658;
        end else if ((1'b1 == ap_condition_1522)) begin
            m_axi_matrix_c_0_AWADDR = matrix_c_addr_1_reg_651;
        end else if ((1'b1 == ap_condition_1519)) begin
            m_axi_matrix_c_0_AWADDR = matrix_c_addr_reg_604;
        end else begin
            m_axi_matrix_c_0_AWADDR = 'bx;
        end
    end else begin
        m_axi_matrix_c_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001_grp17) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001_grp11) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001_grp6) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001_grp1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)))) begin
        m_axi_matrix_c_0_AWVALID = 1'b1;
    end else begin
        m_axi_matrix_c_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001_grp12) & (1'b0 == ap_block_pp0_stage15_subdone_grp12_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp23)))) begin
        m_axi_matrix_c_0_BREADY = 1'b1;
    end else begin
        m_axi_matrix_c_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_1570)) begin
            m_axi_matrix_c_0_WDATA = p_read_1_reg_702;
        end else if ((1'b1 == ap_condition_1038)) begin
            m_axi_matrix_c_0_WDATA = p_read_2_reg_707;
        end else if ((1'b1 == ap_condition_1026)) begin
            m_axi_matrix_c_0_WDATA = p_read_3_reg_712;
        end else if ((1'b1 == ap_condition_1562)) begin
            m_axi_matrix_c_0_WDATA = p_read_4_reg_717;
        end else if ((1'b1 == ap_condition_1558)) begin
            m_axi_matrix_c_0_WDATA = p_read_5_reg_722;
        end else if ((1'b1 == ap_condition_982)) begin
            m_axi_matrix_c_0_WDATA = p_read_6_reg_727;
        end else if ((1'b1 == ap_condition_970)) begin
            m_axi_matrix_c_0_WDATA = p_read_7_reg_732;
        end else if ((1'b1 == ap_condition_1551)) begin
            m_axi_matrix_c_0_WDATA = p_read_8_reg_697;
        end else if ((1'b1 == ap_condition_1548)) begin
            m_axi_matrix_c_0_WDATA = p_read_9_reg_692;
        end else if ((1'b1 == ap_condition_925)) begin
            m_axi_matrix_c_0_WDATA = p_read_10_reg_687;
        end else if ((1'b1 == ap_condition_913)) begin
            m_axi_matrix_c_0_WDATA = p_read_11_reg_682;
        end else if ((1'b1 == ap_condition_1541)) begin
            m_axi_matrix_c_0_WDATA = p_read_12_reg_677;
        end else if ((1'b1 == ap_condition_1538)) begin
            m_axi_matrix_c_0_WDATA = p_read_13_reg_672;
        end else if ((1'b1 == ap_condition_870)) begin
            m_axi_matrix_c_0_WDATA = p_read_14_reg_646;
        end else if ((1'b1 == ap_condition_858)) begin
            m_axi_matrix_c_0_WDATA = p_read_15_reg_626;
        end else if ((1'b1 == ap_condition_1531)) begin
            m_axi_matrix_c_0_WDATA = p_read31_reg_616;
        end else begin
            m_axi_matrix_c_0_WDATA = 'bx;
        end
    end else begin
        m_axi_matrix_c_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001_grp13) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_11001_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001_grp16) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001_grp15)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001_grp14)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp22)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001_grp10) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001_grp9)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001_grp8)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001_grp7) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001_grp5) 
    & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001_grp4)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001_grp3)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001_grp2) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg)))) begin
        m_axi_matrix_c_0_WVALID = 1'b1;
    end else begin
        m_axi_matrix_c_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage2_grp17)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage14_grp11)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage10_grp6)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage6_grp1)))) begin
        matrix_c_blk_n_AW = m_axi_matrix_c_0_AWREADY;
    end else begin
        matrix_c_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp12) & (1'b0 == ap_block_pp0_stage15_subdone_grp12_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage3_grp18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage11_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage7_grp23)))) begin
        matrix_c_blk_n_B = m_axi_matrix_c_0_BVALID;
    end else begin
        matrix_c_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp13) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage2_grp16)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp15)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage3_grp19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp14)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg) 
    & (1'b0 == ap_block_pp0_stage6_grp22)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage14_grp10)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_grp9)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_grp8)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage11_grp7)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage10_grp5)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_grp4)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_grp3)) | ((1'b1 == ap_CS_fsm_pp0_stage7) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage7_grp2)))) begin
        matrix_c_blk_n_W = m_axi_matrix_c_0_WREADY;
    end else begin
        matrix_c_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln39_fu_252_p2 = (col_offset + 13'd4);

assign add_ln44_fu_269_p2 = (row_offset_load_reg_513 + 13'd4);

assign and_ln47_fu_308_p2 = (icmp_ln47_fu_303_p2 & icmp_ln41_reg_549);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

always @ (*) begin
    ap_block_pp0_stage0_01001_grp14 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp14 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

assign ap_block_pp0_stage10_01001_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001_grp5 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_grp6 = ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg));
end

assign ap_block_pp0_stage10_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((m_axi_matrix_c_0_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp5 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp6 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg)));
end

assign ap_block_pp0_stage11_01001_grp7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001_grp24 = ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp24_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_grp7 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage11_grp24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp24_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp24 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp24_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp7 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage12_01001_grp8 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage12_11001_grp0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage12_11001_grp8 = ((ap_done_reg == 1'b1) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)));
end

assign ap_block_pp0_stage12_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_done_reg == 1'b1) | (1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone_grp0 = ((ap_done_reg == 1'b1) | (1'b0 == ap_ce));
end

assign ap_block_pp0_stage13_01001_grp9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001_grp9 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage13_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp0 = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage14_01001_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001_grp10 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_grp11 = ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg));
end

assign ap_block_pp0_stage14_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_grp11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((m_axi_matrix_c_0_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp10 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp11 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg)));
end

assign ap_block_pp0_stage15_01001_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001_grp12 = ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp12_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp13 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg));
end

assign ap_block_pp0_stage15_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_grp13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (1'b0 == ap_block_pp0_stage15_subdone_grp12_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp12 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp12_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp13 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg)));
end

assign ap_block_pp0_stage1_01001_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp15 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp0 = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2_01001_grp16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_matrix_c_0_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg))));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp16 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp17 = ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_matrix_c_0_AWREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp16 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp17 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg)));
end

assign ap_block_pp0_stage3_01001_grp19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg))));
end

assign ap_block_pp0_stage3_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_grp18 = ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp19 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg));
end

assign ap_block_pp0_stage3_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_matrix_c_0_WREADY == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp18 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp19 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg)));
end

assign ap_block_pp0_stage4_01001_grp20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage4_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001_grp20 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage4_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp0 = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage5_01001_grp21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage5_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001_grp21 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage5_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp0 = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage6_01001_grp22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg)));
end

assign ap_block_pp0_stage6_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001_grp1 = ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_grp22 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg));
end

assign ap_block_pp0_stage6_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp1 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp22 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg)));
end

assign ap_block_pp0_stage7_01001_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg)));
end

assign ap_block_pp0_stage7_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001_grp2 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_grp23 = ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg));
end

assign ap_block_pp0_stage7_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg)) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp2 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp23 = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp23_done_reg)));
end

assign ap_block_pp0_stage8_01001_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage8_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001_grp3 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage8_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp0 = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage9_01001_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001_grp4 = ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage9_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b0 == ap_ce) | ((m_axi_matrix_c_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_condition_1026 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_01001_grp20));
end

always @ (*) begin
    ap_condition_1038 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001_grp21));
end

always @ (*) begin
    ap_condition_1519 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001_grp1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_condition_1522 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001_grp6) & (1'b0 == ap_block_pp0_stage10_subdone_grp6_done_reg));
end

always @ (*) begin
    ap_condition_1525 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001_grp11) & (1'b0 == ap_block_pp0_stage14_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_condition_1528 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp17) & (1'b0 == ap_block_pp0_stage2_subdone_grp17_done_reg));
end

always @ (*) begin
    ap_condition_1531 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001_grp2) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_condition_1538 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001_grp5) & (1'b0 == ap_block_pp0_stage10_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_condition_1541 = ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001_grp7) & (1'b0 == ap_block_pp0_stage11_subdone_grp7_done_reg));
end

always @ (*) begin
    ap_condition_1548 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001_grp10) & (1'b0 == ap_block_pp0_stage14_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_condition_1551 = ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001_grp13) & (1'b0 == ap_block_pp0_stage15_subdone_grp13_done_reg));
end

always @ (*) begin
    ap_condition_1558 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001_grp16) & (1'b0 == ap_block_pp0_stage2_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_condition_1562 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage3_01001_grp19));
end

always @ (*) begin
    ap_condition_1570 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage6_01001_grp22));
end

always @ (*) begin
    ap_condition_858 = ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001_grp3));
end

always @ (*) begin
    ap_condition_870 = ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001_grp4));
end

always @ (*) begin
    ap_condition_913 = ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001_grp8));
end

always @ (*) begin
    ap_condition_925 = ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001_grp9));
end

always @ (*) begin
    ap_condition_970 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001_grp14));
end

always @ (*) begin
    ap_condition_982 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001_grp15));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_340_p0 = shl_ln_fu_329_p3;

assign grp_fu_377_p0 = shl_ln35_1_fu_366_p3;

assign grp_fu_393_p0 = shl_ln35_2_fu_382_p3;

assign grp_fu_409_p0 = shl_ln35_3_fu_398_p3;

assign grp_fu_474_p0 = grp_fu_474_p00;

assign grp_fu_474_p00 = size;

assign grp_fu_474_p1 = grp_fu_474_p10;

assign grp_fu_474_p10 = row_offset;

assign grp_fu_474_p2 = grp_fu_474_p20;

assign grp_fu_474_p20 = col_offset_load_reg_520;

assign grp_fu_482_p0 = grp_fu_482_p00;

assign grp_fu_482_p00 = row_offset_load_reg_513;

assign grp_fu_482_p1 = 14'd1;

assign grp_fu_482_p2 = size_cast2_reg_531;

assign grp_fu_482_p3 = zext_ln35_1_reg_566;

assign grp_fu_490_p0 = row_offset_load_cast8_reg_543;

assign grp_fu_490_p1 = 14'd2;

assign grp_fu_490_p2 = grp_fu_490_p20;

assign grp_fu_490_p20 = size_read_reg_506;

assign grp_fu_490_p3 = grp_fu_490_p30;

assign grp_fu_490_p30 = col_offset_load_reg_520;

assign grp_fu_499_p0 = row_offset_load_cast8_reg_543;

assign grp_fu_499_p1 = 14'd3;

assign grp_fu_499_p2 = size_cast7_reg_560;

assign grp_fu_499_p3 = zext_ln35_reg_588;

assign icmp_ln41_fu_264_p2 = ((zext_ln41_fu_261_p1 < size_read_reg_506) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_303_p2 = ((zext_ln47_fu_300_p1 < size_read_reg_506) ? 1'b1 : 1'b0);

assign m_axi_matrix_c_0_ARADDR = 64'd0;

assign m_axi_matrix_c_0_ARBURST = 2'd0;

assign m_axi_matrix_c_0_ARCACHE = 4'd0;

assign m_axi_matrix_c_0_ARID = 1'd0;

assign m_axi_matrix_c_0_ARLEN = 32'd0;

assign m_axi_matrix_c_0_ARLOCK = 2'd0;

assign m_axi_matrix_c_0_ARPROT = 3'd0;

assign m_axi_matrix_c_0_ARQOS = 4'd0;

assign m_axi_matrix_c_0_ARREGION = 4'd0;

assign m_axi_matrix_c_0_ARSIZE = 3'd0;

assign m_axi_matrix_c_0_ARUSER = 1'd0;

assign m_axi_matrix_c_0_ARVALID = 1'b0;

assign m_axi_matrix_c_0_AWBURST = 2'd0;

assign m_axi_matrix_c_0_AWCACHE = 4'd0;

assign m_axi_matrix_c_0_AWID = 1'd0;

assign m_axi_matrix_c_0_AWLEN = 64'd4;

assign m_axi_matrix_c_0_AWLOCK = 2'd0;

assign m_axi_matrix_c_0_AWPROT = 3'd0;

assign m_axi_matrix_c_0_AWQOS = 4'd0;

assign m_axi_matrix_c_0_AWREGION = 4'd0;

assign m_axi_matrix_c_0_AWSIZE = 3'd0;

assign m_axi_matrix_c_0_AWUSER = 1'd0;

assign m_axi_matrix_c_0_RREADY = 1'b0;

assign m_axi_matrix_c_0_WID = 1'd0;

assign m_axi_matrix_c_0_WLAST = 1'b0;

assign m_axi_matrix_c_0_WSTRB = 4'd15;

assign m_axi_matrix_c_0_WUSER = 1'd0;

assign p_cast3_cast_fu_424_p1 = $signed(p_cast3_fu_414_p4);

assign p_cast3_fu_414_p4 = {{grp_fu_377_p2[63:2]}};

assign p_cast5_cast_fu_444_p1 = $signed(p_cast5_fu_434_p4);

assign p_cast5_fu_434_p4 = {{grp_fu_393_p2[63:2]}};

assign p_cast_cast_fu_356_p1 = $signed(p_cast_fu_346_p4);

assign p_cast_fu_346_p4 = {{grp_fu_340_p2[63:2]}};

assign row_offset_load_cast8_fu_258_p1 = row_offset_load_reg_513;

assign select_ln41_1_fu_281_p3 = ((icmp_ln41_fu_264_p2[0:0] == 1'b1) ? row_offset_load_reg_513 : add_ln44_fu_269_p2);

assign select_ln41_fu_274_p3 = ((icmp_ln41_fu_264_p2[0:0] == 1'b1) ? add_ln39_reg_537 : 13'd0);

assign select_ln47_fu_313_p3 = ((icmp_ln47_fu_303_p2[0:0] == 1'b1) ? select_ln41_1_reg_554 : 13'd0);

assign sext_ln39_fu_464_p1 = $signed(trunc_ln1_fu_454_p4);

assign shl_ln35_1_fu_366_p3 = {{add_ln35_2_reg_599}, {2'd0}};

assign shl_ln35_2_fu_382_p3 = {{add_ln35_4_reg_611}, {2'd0}};

assign shl_ln35_3_fu_398_p3 = {{add_ln35_6_reg_621}, {2'd0}};

assign shl_ln_fu_329_p3 = {{add_ln35_reg_575}, {2'd0}};

assign size_cast2_fu_248_p1 = size;

assign size_cast7_fu_294_p1 = size_read_reg_506;

assign trunc_ln1_fu_454_p4 = {{grp_fu_409_p2[63:2]}};

assign zext_ln35_1_fu_297_p1 = col_offset_load_reg_520;

assign zext_ln35_fu_326_p1 = col_offset_load_reg_520;

assign zext_ln41_fu_261_p1 = add_ln39_reg_537;

assign zext_ln47_fu_300_p1 = select_ln41_1_reg_554;

always @ (posedge ap_clk) begin
    size_cast2_reg_531[28:16] <= 13'b0000000000000;
    row_offset_load_cast8_reg_543[13] <= 1'b0;
    size_cast7_reg_560[29:16] <= 14'b00000000000000;
    zext_ln35_1_reg_566[28:13] <= 16'b0000000000000000;
    zext_ln35_reg_588[29:13] <= 17'b00000000000000000;
end

endmodule //MatrixMult_NoCache_matrixStitcher11
