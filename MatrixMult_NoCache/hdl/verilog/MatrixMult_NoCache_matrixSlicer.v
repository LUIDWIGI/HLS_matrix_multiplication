// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMult_NoCache_matrixSlicer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_matrix_a_0_AWVALID,
        m_axi_matrix_a_0_AWREADY,
        m_axi_matrix_a_0_AWADDR,
        m_axi_matrix_a_0_AWID,
        m_axi_matrix_a_0_AWLEN,
        m_axi_matrix_a_0_AWSIZE,
        m_axi_matrix_a_0_AWBURST,
        m_axi_matrix_a_0_AWLOCK,
        m_axi_matrix_a_0_AWCACHE,
        m_axi_matrix_a_0_AWPROT,
        m_axi_matrix_a_0_AWQOS,
        m_axi_matrix_a_0_AWREGION,
        m_axi_matrix_a_0_AWUSER,
        m_axi_matrix_a_0_WVALID,
        m_axi_matrix_a_0_WREADY,
        m_axi_matrix_a_0_WDATA,
        m_axi_matrix_a_0_WSTRB,
        m_axi_matrix_a_0_WLAST,
        m_axi_matrix_a_0_WID,
        m_axi_matrix_a_0_WUSER,
        m_axi_matrix_a_0_ARVALID,
        m_axi_matrix_a_0_ARREADY,
        m_axi_matrix_a_0_ARADDR,
        m_axi_matrix_a_0_ARID,
        m_axi_matrix_a_0_ARLEN,
        m_axi_matrix_a_0_ARSIZE,
        m_axi_matrix_a_0_ARBURST,
        m_axi_matrix_a_0_ARLOCK,
        m_axi_matrix_a_0_ARCACHE,
        m_axi_matrix_a_0_ARPROT,
        m_axi_matrix_a_0_ARQOS,
        m_axi_matrix_a_0_ARREGION,
        m_axi_matrix_a_0_ARUSER,
        m_axi_matrix_a_0_RVALID,
        m_axi_matrix_a_0_RREADY,
        m_axi_matrix_a_0_RDATA,
        m_axi_matrix_a_0_RLAST,
        m_axi_matrix_a_0_RID,
        m_axi_matrix_a_0_RFIFONUM,
        m_axi_matrix_a_0_RUSER,
        m_axi_matrix_a_0_RRESP,
        m_axi_matrix_a_0_BVALID,
        m_axi_matrix_a_0_BREADY,
        m_axi_matrix_a_0_BRESP,
        m_axi_matrix_a_0_BID,
        m_axi_matrix_a_0_BUSER,
        m_axi_matrix_b_0_AWVALID,
        m_axi_matrix_b_0_AWREADY,
        m_axi_matrix_b_0_AWADDR,
        m_axi_matrix_b_0_AWID,
        m_axi_matrix_b_0_AWLEN,
        m_axi_matrix_b_0_AWSIZE,
        m_axi_matrix_b_0_AWBURST,
        m_axi_matrix_b_0_AWLOCK,
        m_axi_matrix_b_0_AWCACHE,
        m_axi_matrix_b_0_AWPROT,
        m_axi_matrix_b_0_AWQOS,
        m_axi_matrix_b_0_AWREGION,
        m_axi_matrix_b_0_AWUSER,
        m_axi_matrix_b_0_WVALID,
        m_axi_matrix_b_0_WREADY,
        m_axi_matrix_b_0_WDATA,
        m_axi_matrix_b_0_WSTRB,
        m_axi_matrix_b_0_WLAST,
        m_axi_matrix_b_0_WID,
        m_axi_matrix_b_0_WUSER,
        m_axi_matrix_b_0_ARVALID,
        m_axi_matrix_b_0_ARREADY,
        m_axi_matrix_b_0_ARADDR,
        m_axi_matrix_b_0_ARID,
        m_axi_matrix_b_0_ARLEN,
        m_axi_matrix_b_0_ARSIZE,
        m_axi_matrix_b_0_ARBURST,
        m_axi_matrix_b_0_ARLOCK,
        m_axi_matrix_b_0_ARCACHE,
        m_axi_matrix_b_0_ARPROT,
        m_axi_matrix_b_0_ARQOS,
        m_axi_matrix_b_0_ARREGION,
        m_axi_matrix_b_0_ARUSER,
        m_axi_matrix_b_0_RVALID,
        m_axi_matrix_b_0_RREADY,
        m_axi_matrix_b_0_RDATA,
        m_axi_matrix_b_0_RLAST,
        m_axi_matrix_b_0_RID,
        m_axi_matrix_b_0_RFIFONUM,
        m_axi_matrix_b_0_RUSER,
        m_axi_matrix_b_0_RRESP,
        m_axi_matrix_b_0_BVALID,
        m_axi_matrix_b_0_BREADY,
        m_axi_matrix_b_0_BRESP,
        m_axi_matrix_b_0_BID,
        m_axi_matrix_b_0_BUSER,
        ap_ce,
        matrix_in_1,
        matrix_in_2,
        size,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        matrix_a_blk_n_AR,
        matrix_a_blk_n_R,
        matrix_b_blk_n_AR,
        matrix_b_blk_n_R
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_matrix_a_0_AWVALID;
input   m_axi_matrix_a_0_AWREADY;
output  [63:0] m_axi_matrix_a_0_AWADDR;
output  [0:0] m_axi_matrix_a_0_AWID;
output  [31:0] m_axi_matrix_a_0_AWLEN;
output  [2:0] m_axi_matrix_a_0_AWSIZE;
output  [1:0] m_axi_matrix_a_0_AWBURST;
output  [1:0] m_axi_matrix_a_0_AWLOCK;
output  [3:0] m_axi_matrix_a_0_AWCACHE;
output  [2:0] m_axi_matrix_a_0_AWPROT;
output  [3:0] m_axi_matrix_a_0_AWQOS;
output  [3:0] m_axi_matrix_a_0_AWREGION;
output  [0:0] m_axi_matrix_a_0_AWUSER;
output   m_axi_matrix_a_0_WVALID;
input   m_axi_matrix_a_0_WREADY;
output  [15:0] m_axi_matrix_a_0_WDATA;
output  [1:0] m_axi_matrix_a_0_WSTRB;
output   m_axi_matrix_a_0_WLAST;
output  [0:0] m_axi_matrix_a_0_WID;
output  [0:0] m_axi_matrix_a_0_WUSER;
output   m_axi_matrix_a_0_ARVALID;
input   m_axi_matrix_a_0_ARREADY;
output  [63:0] m_axi_matrix_a_0_ARADDR;
output  [0:0] m_axi_matrix_a_0_ARID;
output  [31:0] m_axi_matrix_a_0_ARLEN;
output  [2:0] m_axi_matrix_a_0_ARSIZE;
output  [1:0] m_axi_matrix_a_0_ARBURST;
output  [1:0] m_axi_matrix_a_0_ARLOCK;
output  [3:0] m_axi_matrix_a_0_ARCACHE;
output  [2:0] m_axi_matrix_a_0_ARPROT;
output  [3:0] m_axi_matrix_a_0_ARQOS;
output  [3:0] m_axi_matrix_a_0_ARREGION;
output  [0:0] m_axi_matrix_a_0_ARUSER;
input   m_axi_matrix_a_0_RVALID;
output   m_axi_matrix_a_0_RREADY;
input  [15:0] m_axi_matrix_a_0_RDATA;
input   m_axi_matrix_a_0_RLAST;
input  [0:0] m_axi_matrix_a_0_RID;
input  [12:0] m_axi_matrix_a_0_RFIFONUM;
input  [0:0] m_axi_matrix_a_0_RUSER;
input  [1:0] m_axi_matrix_a_0_RRESP;
input   m_axi_matrix_a_0_BVALID;
output   m_axi_matrix_a_0_BREADY;
input  [1:0] m_axi_matrix_a_0_BRESP;
input  [0:0] m_axi_matrix_a_0_BID;
input  [0:0] m_axi_matrix_a_0_BUSER;
output   m_axi_matrix_b_0_AWVALID;
input   m_axi_matrix_b_0_AWREADY;
output  [63:0] m_axi_matrix_b_0_AWADDR;
output  [0:0] m_axi_matrix_b_0_AWID;
output  [31:0] m_axi_matrix_b_0_AWLEN;
output  [2:0] m_axi_matrix_b_0_AWSIZE;
output  [1:0] m_axi_matrix_b_0_AWBURST;
output  [1:0] m_axi_matrix_b_0_AWLOCK;
output  [3:0] m_axi_matrix_b_0_AWCACHE;
output  [2:0] m_axi_matrix_b_0_AWPROT;
output  [3:0] m_axi_matrix_b_0_AWQOS;
output  [3:0] m_axi_matrix_b_0_AWREGION;
output  [0:0] m_axi_matrix_b_0_AWUSER;
output   m_axi_matrix_b_0_WVALID;
input   m_axi_matrix_b_0_WREADY;
output  [15:0] m_axi_matrix_b_0_WDATA;
output  [1:0] m_axi_matrix_b_0_WSTRB;
output   m_axi_matrix_b_0_WLAST;
output  [0:0] m_axi_matrix_b_0_WID;
output  [0:0] m_axi_matrix_b_0_WUSER;
output   m_axi_matrix_b_0_ARVALID;
input   m_axi_matrix_b_0_ARREADY;
output  [63:0] m_axi_matrix_b_0_ARADDR;
output  [0:0] m_axi_matrix_b_0_ARID;
output  [31:0] m_axi_matrix_b_0_ARLEN;
output  [2:0] m_axi_matrix_b_0_ARSIZE;
output  [1:0] m_axi_matrix_b_0_ARBURST;
output  [1:0] m_axi_matrix_b_0_ARLOCK;
output  [3:0] m_axi_matrix_b_0_ARCACHE;
output  [2:0] m_axi_matrix_b_0_ARPROT;
output  [3:0] m_axi_matrix_b_0_ARQOS;
output  [3:0] m_axi_matrix_b_0_ARREGION;
output  [0:0] m_axi_matrix_b_0_ARUSER;
input   m_axi_matrix_b_0_RVALID;
output   m_axi_matrix_b_0_RREADY;
input  [15:0] m_axi_matrix_b_0_RDATA;
input   m_axi_matrix_b_0_RLAST;
input  [0:0] m_axi_matrix_b_0_RID;
input  [12:0] m_axi_matrix_b_0_RFIFONUM;
input  [0:0] m_axi_matrix_b_0_RUSER;
input  [1:0] m_axi_matrix_b_0_RRESP;
input   m_axi_matrix_b_0_BVALID;
output   m_axi_matrix_b_0_BREADY;
input  [1:0] m_axi_matrix_b_0_BRESP;
input  [0:0] m_axi_matrix_b_0_BID;
input  [0:0] m_axi_matrix_b_0_BUSER;
input   ap_ce;
input  [63:0] matrix_in_1;
input  [63:0] matrix_in_2;
input  [15:0] size;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
output  [15:0] ap_return_31;
output   matrix_a_blk_n_AR;
output   matrix_a_blk_n_R;
output   matrix_b_blk_n_AR;
output   matrix_b_blk_n_R;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_matrix_a_0_ARVALID;
reg[63:0] m_axi_matrix_a_0_ARADDR;
reg m_axi_matrix_a_0_RREADY;
reg m_axi_matrix_b_0_ARVALID;
reg[63:0] m_axi_matrix_b_0_ARADDR;
reg m_axi_matrix_b_0_RREADY;
reg matrix_a_blk_n_AR;
reg matrix_a_blk_n_R;
reg matrix_b_blk_n_AR;
reg matrix_b_blk_n_R;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_pp0_stage15_subdone_grp6_done_reg;
reg    ap_block_pp0_stage15_subdone_grp6;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage15_subdone_grp7_done_reg;
reg    ap_block_pp0_stage15_subdone_grp7;
reg    ap_block_pp0_stage15_subdone_grp8_done_reg;
reg    ap_block_pp0_stage15_subdone_grp8;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [12:0] arow;
reg   [12:0] offset_a;
reg   [12:0] bcol;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_grp1;
reg    ap_block_pp0_stage6_subdone_grp1_done_reg;
reg    ap_block_pp0_stage6_subdone_grp1;
reg    ap_block_pp0_stage6_subdone;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15_grp6;
wire    ap_block_pp0_stage0_grp9;
reg    ap_block_pp0_stage0_subdone_grp9_done_reg;
reg    ap_block_pp0_stage0_subdone_grp9;
reg    ap_block_pp0_stage0_subdone;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp11;
reg    ap_block_pp0_stage1_subdone_grp11_done_reg;
reg    ap_block_pp0_stage1_subdone_grp11;
reg    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_grp3;
reg    ap_block_pp0_stage10_subdone_grp3_done_reg;
reg    ap_block_pp0_stage10_subdone_grp3;
reg    ap_block_pp0_stage10_subdone;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp14;
reg    ap_block_pp0_stage2_subdone_grp14_done_reg;
reg    ap_block_pp0_stage2_subdone_grp14;
reg    ap_block_pp0_stage2_subdone;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_grp16;
reg    ap_block_pp0_stage3_subdone_grp16_done_reg;
reg    ap_block_pp0_stage3_subdone_grp16;
reg    ap_block_pp0_stage3_subdone;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_grp19;
reg    ap_block_pp0_stage4_subdone_grp19_done_reg;
reg    ap_block_pp0_stage4_subdone_grp19;
reg    ap_block_pp0_stage4_subdone;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_grp21;
reg    ap_block_pp0_stage5_subdone_grp21_done_reg;
reg    ap_block_pp0_stage5_subdone_grp21;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage14_grp5;
reg    ap_block_pp0_stage14_subdone_grp5_done_reg;
reg    ap_block_pp0_stage14_subdone_grp5;
reg    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage6_grp24;
reg    ap_block_pp0_stage6_subdone_grp24_done_reg;
reg    ap_block_pp0_stage6_subdone_grp24;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_grp25;
reg    ap_block_pp0_stage7_subdone_grp25_done_reg;
reg    ap_block_pp0_stage7_subdone_grp25;
reg    ap_block_pp0_stage7_subdone;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_grp27;
reg    ap_block_pp0_stage8_subdone_grp27_done_reg;
reg    ap_block_pp0_stage8_subdone_grp27;
reg    ap_block_pp0_stage8_subdone;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_grp29;
reg    ap_block_pp0_stage9_subdone_grp29_done_reg;
reg    ap_block_pp0_stage9_subdone_grp29;
reg    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage2_grp15;
reg    ap_block_pp0_stage2_subdone_grp15_done_reg;
reg    ap_block_pp0_stage2_subdone_grp15;
wire    ap_block_pp0_stage10_grp32;
reg    ap_block_pp0_stage10_subdone_grp32_done_reg;
reg    ap_block_pp0_stage10_subdone_grp32;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_grp33;
reg    ap_block_pp0_stage11_subdone_grp33_done_reg;
reg    ap_block_pp0_stage11_subdone_grp33;
reg    ap_block_pp0_stage11_subdone;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_grp35;
reg    ap_block_pp0_stage12_subdone_grp35_done_reg;
reg    ap_block_pp0_stage12_subdone_grp35;
reg    ap_block_pp0_stage12_subdone;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_grp37;
reg    ap_block_pp0_stage13_subdone_grp37_done_reg;
reg    ap_block_pp0_stage13_subdone_grp37;
reg    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage7_grp2;
reg    ap_block_pp0_stage7_subdone_grp2_done_reg;
reg    ap_block_pp0_stage7_subdone_grp2;
wire    ap_block_pp0_stage15_grp7;
wire    ap_block_pp0_stage0_grp10;
reg    ap_block_pp0_stage0_subdone_grp10_done_reg;
reg    ap_block_pp0_stage0_subdone_grp10;
wire    ap_block_pp0_stage1_grp12;
reg    ap_block_pp0_stage1_subdone_grp12_done_reg;
reg    ap_block_pp0_stage1_subdone_grp12;
wire    ap_block_pp0_stage2_grp13;
reg    ap_block_pp0_stage2_subdone_grp13_done_reg;
reg    ap_block_pp0_stage2_subdone_grp13;
wire    ap_block_pp0_stage11_grp4;
reg    ap_block_pp0_stage11_subdone_grp4_done_reg;
reg    ap_block_pp0_stage11_subdone_grp4;
wire    ap_block_pp0_stage3_grp17;
reg    ap_block_pp0_stage3_subdone_grp17_done_reg;
reg    ap_block_pp0_stage3_subdone_grp17;
wire    ap_block_pp0_stage4_grp20;
reg    ap_block_pp0_stage4_subdone_grp20_done_reg;
reg    ap_block_pp0_stage4_subdone_grp20;
wire    ap_block_pp0_stage5_grp22;
reg    ap_block_pp0_stage5_subdone_grp22_done_reg;
reg    ap_block_pp0_stage5_subdone_grp22;
wire    ap_block_pp0_stage6_grp23;
reg    ap_block_pp0_stage6_subdone_grp23_done_reg;
reg    ap_block_pp0_stage6_subdone_grp23;
wire    ap_block_pp0_stage15_grp8;
wire    ap_block_pp0_stage7_grp26;
reg    ap_block_pp0_stage7_subdone_grp26_done_reg;
reg    ap_block_pp0_stage7_subdone_grp26;
wire    ap_block_pp0_stage8_grp28;
reg    ap_block_pp0_stage8_subdone_grp28_done_reg;
reg    ap_block_pp0_stage8_subdone_grp28;
wire    ap_block_pp0_stage9_grp30;
reg    ap_block_pp0_stage9_subdone_grp30_done_reg;
reg    ap_block_pp0_stage9_subdone_grp30;
wire    ap_block_pp0_stage10_grp31;
reg    ap_block_pp0_stage10_subdone_grp31_done_reg;
reg    ap_block_pp0_stage10_subdone_grp31;
wire    ap_block_pp0_stage3_grp18;
reg    ap_block_pp0_stage3_subdone_grp18_done_reg;
reg    ap_block_pp0_stage3_subdone_grp18;
wire    ap_block_pp0_stage11_grp34;
reg    ap_block_pp0_stage11_subdone_grp34_done_reg;
reg    ap_block_pp0_stage11_subdone_grp34;
wire    ap_block_pp0_stage12_grp36;
reg    ap_block_pp0_stage12_subdone_grp36_done_reg;
reg    ap_block_pp0_stage12_subdone_grp36;
wire    ap_block_pp0_stage13_grp38;
reg    ap_block_pp0_stage13_subdone_grp38_done_reg;
reg    ap_block_pp0_stage13_subdone_grp38;
reg   [15:0] size_read_reg_770;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp0;
reg   [12:0] arow_load_reg_778;
wire   [28:0] size_cast1_fu_148_p1;
reg   [28:0] size_cast1_reg_784;
reg   [12:0] offset_a_load_reg_797;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
reg    ap_block_pp0_stage1_subdone_grp0;
wire   [28:0] offset_a_load_cast_fu_160_p1;
reg   [28:0] offset_a_load_cast_reg_803;
wire   [12:0] add_ln32_fu_164_p2;
reg   [12:0] add_ln32_reg_810;
reg   [12:0] bcol_load_reg_816;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
reg    ap_block_pp0_stage2_subdone_grp0;
wire   [13:0] arow_load_cast7_fu_174_p1;
reg   [13:0] arow_load_cast7_reg_822;
wire   [0:0] icmp_ln33_fu_180_p2;
reg   [0:0] icmp_ln33_reg_828;
wire   [12:0] add_ln35_fu_185_p2;
reg   [12:0] add_ln35_reg_832;
wire   [28:0] grp_fu_709_p3;
reg   [28:0] add_ln27_reg_838;
wire    ap_block_pp0_stage3_11001_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
reg    ap_block_pp0_stage3_subdone_grp0;
wire   [28:0] zext_ln28_1_fu_191_p1;
reg   [28:0] zext_ln28_1_reg_843;
wire   [13:0] zext_ln27_2_fu_194_p1;
reg   [13:0] zext_ln27_2_reg_849;
wire   [0:0] icmp_ln36_fu_200_p2;
reg   [0:0] icmp_ln36_reg_855;
wire   [12:0] add_ln38_fu_205_p2;
reg   [12:0] add_ln38_reg_859;
reg   [63:0] matrix_in_1_read_reg_865;
wire    ap_block_pp0_stage4_11001_grp0;
reg    ap_block_pp0_stage4_subdone_grp0_done_reg;
reg    ap_block_pp0_stage4_subdone_grp0;
wire   [29:0] size_cast3_fu_210_p1;
reg   [29:0] size_cast3_reg_873;
wire   [28:0] grp_fu_716_p3;
reg   [28:0] add_ln28_reg_886;
reg   [63:0] matrix_in_2_read_reg_891;
wire    ap_block_pp0_stage5_11001_grp0;
reg    ap_block_pp0_stage5_subdone_grp0_done_reg;
reg    ap_block_pp0_stage5_subdone_grp0;
reg   [63:0] matrix_a_addr_reg_899;
wire   [28:0] grp_fu_723_p4;
reg   [28:0] add_ln27_5_reg_910;
wire   [29:0] zext_ln27_fu_306_p1;
reg   [29:0] zext_ln27_reg_915;
wire    ap_block_pp0_stage6_11001_grp0;
reg    ap_block_pp0_stage6_subdone_grp0_done_reg;
reg    ap_block_pp0_stage6_subdone_grp0;
reg   [63:0] matrix_b_addr_reg_921;
wire   [28:0] grp_fu_731_p4;
reg   [28:0] add_ln28_2_reg_932;
wire   [29:0] zext_ln28_fu_345_p1;
reg   [29:0] zext_ln28_reg_937;
wire    ap_block_pp0_stage7_11001_grp0;
reg    ap_block_pp0_stage7_subdone_grp0_done_reg;
reg    ap_block_pp0_stage7_subdone_grp0;
reg   [63:0] matrix_a_addr_1_reg_943;
wire   [29:0] grp_fu_739_p4;
reg   [29:0] add_ln27_7_reg_954;
reg   [63:0] matrix_b_addr_1_reg_959;
wire    ap_block_pp0_stage8_11001_grp0;
reg    ap_block_pp0_stage8_subdone_grp0_done_reg;
reg    ap_block_pp0_stage8_subdone_grp0;
wire   [29:0] grp_fu_748_p4;
reg   [29:0] add_ln28_4_reg_970;
reg   [63:0] matrix_a_addr_2_reg_975;
reg    ap_block_pp0_stage9_11001_grp29;
wire    ap_block_pp0_stage9_11001_grp0;
reg    ap_block_pp0_stage9_subdone_grp0_done_reg;
reg    ap_block_pp0_stage9_subdone_grp0;
wire   [29:0] grp_fu_756_p4;
reg   [29:0] add_ln27_9_reg_986;
reg   [63:0] matrix_b_addr_2_reg_991;
reg    ap_block_pp0_stage10_11001_grp31;
wire    ap_block_pp0_stage10_11001_grp0;
reg    ap_block_pp0_stage10_subdone_grp0_done_reg;
reg    ap_block_pp0_stage10_subdone_grp0;
wire   [29:0] grp_fu_763_p4;
reg   [29:0] add_ln28_6_reg_1002;
reg   [63:0] matrix_a_addr_3_reg_1007;
reg    ap_block_pp0_stage11_11001_grp33;
wire    ap_block_pp0_stage11_11001_grp0;
reg    ap_block_pp0_stage11_subdone_grp0_done_reg;
reg    ap_block_pp0_stage11_subdone_grp0;
reg   [63:0] matrix_b_addr_3_reg_1018;
reg    ap_block_pp0_stage12_11001_grp36;
reg   [15:0] matrix_a_addr_read_reg_1024;
reg    ap_block_state31_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_11001;
reg   [15:0] matrix_a_addr_read_1_reg_1029;
reg    ap_block_pp0_stage15_11001_grp6;
reg   [15:0] matrix_b_addr_read_reg_1034;
reg    ap_block_pp0_stage15_11001_grp7;
reg   [15:0] matrix_a_addr_read_2_reg_1039;
reg    ap_block_pp0_stage0_11001_grp9;
reg   [15:0] matrix_b_addr_read_1_reg_1044;
reg    ap_block_pp0_stage0_11001_grp10;
reg   [15:0] matrix_a_addr_read_3_reg_1049;
reg    ap_block_pp0_stage1_11001_grp11;
reg   [15:0] matrix_b_addr_read_2_reg_1054;
reg    ap_block_pp0_stage1_11001_grp12;
reg   [15:0] matrix_b_addr_read_3_reg_1059;
reg    ap_block_pp0_stage2_11001_grp13;
reg   [15:0] matrix_a_addr_1_read_reg_1064;
reg    ap_block_pp0_stage2_11001_grp14;
reg   [15:0] matrix_a_addr_1_read_1_reg_1069;
reg    ap_block_pp0_stage3_11001_grp16;
reg   [15:0] matrix_b_addr_1_read_reg_1074;
reg    ap_block_pp0_stage3_11001_grp17;
reg   [15:0] matrix_a_addr_1_read_2_reg_1079;
reg    ap_block_pp0_stage4_11001_grp19;
reg   [15:0] matrix_b_addr_1_read_1_reg_1084;
reg    ap_block_pp0_stage4_11001_grp20;
reg   [15:0] matrix_a_addr_1_read_3_reg_1089;
reg    ap_block_pp0_stage5_11001_grp21;
reg   [15:0] matrix_b_addr_1_read_2_reg_1094;
reg    ap_block_pp0_stage5_11001_grp22;
reg   [15:0] matrix_b_addr_1_read_3_reg_1099;
reg    ap_block_pp0_stage6_11001_grp23;
reg   [15:0] matrix_a_addr_2_read_reg_1104;
reg    ap_block_pp0_stage6_11001_grp24;
reg   [15:0] matrix_a_addr_2_read_1_reg_1109;
reg    ap_block_pp0_stage7_11001_grp25;
reg   [15:0] matrix_b_addr_2_read_reg_1114;
reg    ap_block_pp0_stage7_11001_grp26;
reg   [15:0] matrix_a_addr_2_read_2_reg_1119;
reg    ap_block_pp0_stage8_11001_grp27;
reg   [15:0] matrix_b_addr_2_read_1_reg_1124;
reg    ap_block_pp0_stage8_11001_grp28;
reg   [15:0] matrix_a_addr_2_read_3_reg_1129;
reg   [15:0] matrix_b_addr_2_read_2_reg_1134;
reg    ap_block_pp0_stage9_11001_grp30;
reg   [15:0] matrix_b_addr_2_read_3_reg_1139;
reg   [15:0] matrix_a_addr_3_read_reg_1144;
reg    ap_block_pp0_stage10_11001_grp32;
reg   [15:0] matrix_a_addr_3_read_1_reg_1149;
reg   [15:0] matrix_b_addr_3_read_reg_1154;
reg    ap_block_pp0_stage11_11001_grp34;
reg   [15:0] matrix_a_addr_3_read_2_reg_1159;
reg    ap_block_pp0_stage12_11001_grp35;
reg   [15:0] matrix_b_addr_3_read_1_reg_1164;
reg   [15:0] matrix_a_addr_3_read_3_reg_1169;
reg    ap_block_pp0_stage13_11001_grp37;
reg   [15:0] matrix_b_addr_3_read_2_reg_1174;
reg    ap_block_pp0_stage13_11001_grp38;
reg   [63:0] ap_port_reg_matrix_in_1;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] ap_port_reg_matrix_in_2;
reg   [12:0] ap_phi_reg_pp0_iter0_offset_a_new_0_reg_122;
reg   [12:0] ap_phi_reg_pp0_iter0_bcol_new_0_reg_133;
wire  signed [63:0] sext_ln27_fu_273_p1;
wire    ap_block_pp0_stage5_grp0;
wire  signed [63:0] sext_ln28_fu_319_p1;
wire    ap_block_pp0_stage6_grp0;
wire  signed [63:0] sext_ln27_1_fu_358_p1;
wire    ap_block_pp0_stage7_grp0;
wire  signed [63:0] sext_ln28_1_fu_394_p1;
wire    ap_block_pp0_stage8_grp0;
wire  signed [63:0] sext_ln27_2_fu_430_p1;
wire  signed [63:0] sext_ln28_2_fu_466_p1;
wire  signed [63:0] sext_ln27_3_fu_502_p1;
wire  signed [63:0] sext_ln28_3_fu_538_p1;
reg    ap_block_pp0_stage6_11001_grp1;
reg    ap_block_pp0_stage10_11001_grp3;
reg    ap_block_pp0_stage14_11001_grp5;
reg    ap_block_pp0_stage2_11001_grp15;
reg    ap_block_pp0_stage7_11001_grp2;
reg    ap_block_pp0_stage11_11001_grp4;
reg    ap_block_pp0_stage15_11001_grp8;
reg    ap_block_pp0_stage3_11001_grp18;
wire   [12:0] select_ln39_fu_244_p3;
wire    ap_block_pp0_stage0_grp0;
wire    ap_block_pp0_stage1_grp0;
wire    ap_block_pp0_stage2_grp0;
wire   [15:0] zext_ln33_fu_177_p1;
wire    ap_block_pp0_stage3_grp0;
wire   [15:0] zext_ln36_fu_197_p1;
wire    ap_block_pp0_stage4_grp0;
wire   [29:0] shl_ln_fu_213_p3;
wire   [63:0] grp_fu_224_p0;
wire   [15:0] zext_ln39_fu_230_p1;
wire   [0:0] icmp_ln39_fu_233_p2;
wire   [0:0] xor_ln39_fu_238_p2;
wire   [63:0] grp_fu_224_p2;
wire   [62:0] trunc_ln_fu_263_p4;
wire   [29:0] shl_ln1_fu_283_p3;
wire   [63:0] grp_fu_294_p0;
wire   [63:0] grp_fu_294_p2;
wire   [62:0] trunc_ln2_fu_309_p4;
wire   [29:0] shl_ln27_1_fu_329_p3;
wire   [63:0] grp_fu_340_p0;
wire   [63:0] grp_fu_340_p2;
wire   [62:0] trunc_ln27_1_fu_348_p4;
wire   [29:0] shl_ln28_1_fu_368_p3;
wire   [63:0] grp_fu_379_p0;
wire   [63:0] grp_fu_379_p2;
wire   [62:0] trunc_ln28_1_fu_384_p4;
wire   [30:0] shl_ln27_2_fu_404_p3;
wire   [63:0] grp_fu_415_p0;
wire   [63:0] grp_fu_415_p2;
wire   [62:0] trunc_ln27_2_fu_420_p4;
wire    ap_block_pp0_stage9_grp0;
wire   [30:0] shl_ln28_2_fu_440_p3;
wire   [63:0] grp_fu_451_p0;
wire   [63:0] grp_fu_451_p2;
wire   [62:0] trunc_ln28_2_fu_456_p4;
wire    ap_block_pp0_stage10_grp0;
wire   [30:0] shl_ln27_3_fu_476_p3;
wire   [63:0] grp_fu_487_p0;
wire   [63:0] grp_fu_487_p2;
wire   [62:0] trunc_ln27_3_fu_492_p4;
wire    ap_block_pp0_stage11_grp0;
wire   [30:0] shl_ln28_3_fu_512_p3;
wire   [63:0] grp_fu_523_p0;
wire   [63:0] grp_fu_523_p2;
wire   [62:0] trunc_ln28_3_fu_528_p4;
wire   [15:0] grp_fu_709_p0;
wire   [12:0] grp_fu_709_p1;
wire   [12:0] grp_fu_709_p2;
wire   [15:0] grp_fu_716_p0;
wire   [12:0] grp_fu_716_p1;
wire   [12:0] grp_fu_716_p2;
wire   [12:0] grp_fu_723_p0;
wire   [0:0] grp_fu_723_p1;
wire   [15:0] grp_fu_723_p2;
wire   [12:0] grp_fu_723_p3;
wire   [12:0] grp_fu_731_p0;
wire   [0:0] grp_fu_731_p1;
wire   [15:0] grp_fu_731_p2;
wire   [12:0] grp_fu_731_p3;
wire   [12:0] grp_fu_739_p0;
wire   [1:0] grp_fu_739_p1;
wire   [15:0] grp_fu_739_p2;
wire   [12:0] grp_fu_739_p3;
wire   [12:0] grp_fu_748_p0;
wire   [1:0] grp_fu_748_p1;
wire   [15:0] grp_fu_748_p2;
wire   [12:0] grp_fu_748_p3;
wire   [12:0] grp_fu_756_p0;
wire   [1:0] grp_fu_756_p1;
wire   [15:0] grp_fu_756_p2;
wire   [12:0] grp_fu_756_p3;
wire   [12:0] grp_fu_763_p0;
wire   [1:0] grp_fu_763_p1;
wire   [15:0] grp_fu_763_p2;
wire   [12:0] grp_fu_763_p3;
reg    grp_fu_224_ce;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    grp_fu_294_ce;
reg    ap_block_pp0_stage6_11001;
reg    grp_fu_340_ce;
reg    ap_block_pp0_stage7_11001;
reg    grp_fu_379_ce;
reg    ap_block_pp0_stage8_11001;
reg    grp_fu_415_ce;
reg    ap_block_pp0_stage9_11001;
reg    grp_fu_451_ce;
reg    ap_block_pp0_stage10_11001;
reg    grp_fu_487_ce;
reg    ap_block_pp0_stage11_11001;
reg    grp_fu_523_ce;
reg    ap_block_pp0_stage12_11001;
reg    grp_fu_709_ce;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    grp_fu_716_ce;
reg    grp_fu_723_ce;
reg    grp_fu_731_ce;
reg    grp_fu_739_ce;
reg    grp_fu_748_ce;
reg    grp_fu_756_ce;
reg    grp_fu_763_ce;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_709_p00;
wire   [28:0] grp_fu_709_p10;
wire   [28:0] grp_fu_716_p10;
wire   [28:0] grp_fu_716_p20;
wire   [13:0] grp_fu_723_p00;
wire   [13:0] grp_fu_731_p00;
wire   [29:0] grp_fu_739_p20;
wire   [29:0] grp_fu_739_p30;
wire   [29:0] grp_fu_748_p30;
reg    ap_condition_4291;
reg    ap_condition_857;
reg    ap_condition_4298;
reg    ap_condition_4302;
reg    ap_condition_4306;
reg    ap_condition_4310;
reg    ap_condition_4314;
reg    ap_condition_4318;
reg    ap_condition_4322;
reg    ap_condition_4326;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp8_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 arow = 13'd0;
#0 offset_a = 13'd0;
#0 bcol = 13'd0;
#0 ap_block_pp0_stage6_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp9_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp11_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp14_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp16_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp19_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp21_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp24_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp25_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp27_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp29_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp15_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp32_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp33_done_reg = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp35_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp37_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp10_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp12_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp13_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp17_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp20_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp22_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp23_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp26_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp28_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp30_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp31_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp18_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp34_done_reg = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp36_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp38_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp0_done_reg = 1'b0;
end

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_224_p0),
    .din1(ap_port_reg_matrix_in_1),
    .ce(grp_fu_224_ce),
    .dout(grp_fu_224_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_294_p0),
    .din1(ap_port_reg_matrix_in_2),
    .ce(grp_fu_294_ce),
    .dout(grp_fu_294_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_340_p0),
    .din1(matrix_in_1_read_reg_865),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_379_p0),
    .din1(matrix_in_2_read_reg_891),
    .ce(grp_fu_379_ce),
    .dout(grp_fu_379_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_415_p0),
    .din1(matrix_in_1_read_reg_865),
    .ce(grp_fu_415_ce),
    .dout(grp_fu_415_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_451_p0),
    .din1(matrix_in_2_read_reg_891),
    .ce(grp_fu_451_ce),
    .dout(grp_fu_451_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_487_p0),
    .din1(matrix_in_1_read_reg_865),
    .ce(grp_fu_487_ce),
    .dout(grp_fu_487_p2)
);

MatrixMult_NoCache_add_64ns_64ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_523_p0),
    .din1(matrix_in_2_read_reg_891),
    .ce(grp_fu_523_ce),
    .dout(grp_fu_523_p2)
);

MatrixMult_NoCache_mac_muladd_16ns_13ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
mac_muladd_16ns_13ns_13ns_29_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_709_p0),
    .din1(grp_fu_709_p1),
    .din2(grp_fu_709_p2),
    .ce(grp_fu_709_ce),
    .dout(grp_fu_709_p3)
);

MatrixMult_NoCache_mac_muladd_16ns_13ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
mac_muladd_16ns_13ns_13ns_29_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_716_p0),
    .din1(grp_fu_716_p1),
    .din2(grp_fu_716_p2),
    .ce(grp_fu_716_ce),
    .dout(grp_fu_716_p3)
);

MatrixMult_NoCache_ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_723_p0),
    .din1(grp_fu_723_p1),
    .din2(grp_fu_723_p2),
    .din3(grp_fu_723_p3),
    .ce(grp_fu_723_ce),
    .dout(grp_fu_723_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
ama_addmuladd_13ns_1ns_16ns_13ns_29_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_731_p0),
    .din1(grp_fu_731_p1),
    .din2(grp_fu_731_p2),
    .din3(grp_fu_731_p3),
    .ce(grp_fu_731_ce),
    .dout(grp_fu_731_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .din2(grp_fu_739_p2),
    .din3(grp_fu_739_p3),
    .ce(grp_fu_739_ce),
    .dout(grp_fu_739_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_748_p0),
    .din1(grp_fu_748_p1),
    .din2(grp_fu_748_p2),
    .din3(grp_fu_748_p3),
    .ce(grp_fu_748_ce),
    .dout(grp_fu_748_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_756_p0),
    .din1(grp_fu_756_p1),
    .din2(grp_fu_756_p2),
    .din3(grp_fu_756_p3),
    .ce(grp_fu_756_ce),
    .dout(grp_fu_756_p4)
);

MatrixMult_NoCache_ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
ama_addmuladd_13ns_2ns_16ns_13ns_30_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .din2(grp_fu_763_p2),
    .din3(grp_fu_763_p3),
    .ce(grp_fu_763_ce),
    .dout(grp_fu_763_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp10)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp9)) begin
                ap_block_pp0_stage0_subdone_grp9_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp0)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp31_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp31_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp31)) begin
                ap_block_pp0_stage10_subdone_grp31_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp32_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp32_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp32)) begin
                ap_block_pp0_stage10_subdone_grp32_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp3)) begin
                ap_block_pp0_stage10_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp0)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp33_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp33_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp33)) begin
                ap_block_pp0_stage11_subdone_grp33_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp34_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp34_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp34)) begin
                ap_block_pp0_stage11_subdone_grp34_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp4)) begin
                ap_block_pp0_stage11_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp35_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp35_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp35)) begin
                ap_block_pp0_stage12_subdone_grp35_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp36_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp36_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp36)) begin
                ap_block_pp0_stage12_subdone_grp36_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp37_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp37_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp37)) begin
                ap_block_pp0_stage13_subdone_grp37_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp38_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp38_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp38)) begin
                ap_block_pp0_stage13_subdone_grp38_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp5)) begin
                ap_block_pp0_stage14_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp6)) begin
                ap_block_pp0_stage15_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp7)) begin
                ap_block_pp0_stage15_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp8_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp8_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp8)) begin
                ap_block_pp0_stage15_subdone_grp8_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp11)) begin
                ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp12_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp12_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp12)) begin
                ap_block_pp0_stage1_subdone_grp12_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp13_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp13_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp13)) begin
                ap_block_pp0_stage2_subdone_grp13_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp14_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp14_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp14)) begin
                ap_block_pp0_stage2_subdone_grp14_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp15_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp15_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp15)) begin
                ap_block_pp0_stage2_subdone_grp15_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp16_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp16_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp16)) begin
                ap_block_pp0_stage3_subdone_grp16_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp17_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp17_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp17)) begin
                ap_block_pp0_stage3_subdone_grp17_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp18)) begin
                ap_block_pp0_stage3_subdone_grp18_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp0)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp19_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp19_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp19)) begin
                ap_block_pp0_stage4_subdone_grp19_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp20_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp20_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp20)) begin
                ap_block_pp0_stage4_subdone_grp20_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp0)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp21_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp21_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp21)) begin
                ap_block_pp0_stage5_subdone_grp21_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp22_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp22_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp22)) begin
                ap_block_pp0_stage5_subdone_grp22_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp0)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp1)) begin
                ap_block_pp0_stage6_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp23_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp23_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp23)) begin
                ap_block_pp0_stage6_subdone_grp23_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp24_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp24_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp24)) begin
                ap_block_pp0_stage6_subdone_grp24_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp0)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp25_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp25_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp25)) begin
                ap_block_pp0_stage7_subdone_grp25_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp26_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp26_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp26)) begin
                ap_block_pp0_stage7_subdone_grp26_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp2)) begin
                ap_block_pp0_stage7_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp0)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp27_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp27_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp27)) begin
                ap_block_pp0_stage8_subdone_grp27_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp28)) begin
                ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp0)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp29)) begin
                ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp30_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp30_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp30)) begin
                ap_block_pp0_stage9_subdone_grp30_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_4291)) begin
        if ((icmp_ln36_reg_855 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_bcol_new_0_reg_133 <= 13'd0;
        end else if ((icmp_ln36_reg_855 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_bcol_new_0_reg_133 <= add_ln35_reg_832;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((icmp_ln33_reg_828 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_offset_a_new_0_reg_122 <= 13'd0;
        end else if ((icmp_ln33_reg_828 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_offset_a_new_0_reg_122 <= add_ln32_reg_810;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        add_ln27_5_reg_910 <= grp_fu_723_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))) begin
        add_ln27_7_reg_954 <= grp_fu_739_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0))) begin
        add_ln27_9_reg_986 <= grp_fu_756_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        add_ln27_reg_838 <= grp_fu_709_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))) begin
        add_ln28_2_reg_932 <= grp_fu_731_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0))) begin
        add_ln28_4_reg_970 <= grp_fu_748_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp0))) begin
        add_ln28_6_reg_1002 <= grp_fu_763_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        add_ln28_reg_886 <= grp_fu_716_p3;
        offset_a <= ap_phi_reg_pp0_iter0_offset_a_new_0_reg_122;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        add_ln32_reg_810 <= add_ln32_fu_164_p2;
        offset_a_load_cast_reg_803[12 : 0] <= offset_a_load_cast_fu_160_p1[12 : 0];
        offset_a_load_reg_797 <= offset_a;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        add_ln35_reg_832 <= add_ln35_fu_185_p2;
        arow_load_cast7_reg_822[12 : 0] <= arow_load_cast7_fu_174_p1[12 : 0];
        bcol_load_reg_816 <= bcol;
        icmp_ln33_reg_828 <= icmp_ln33_fu_180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        add_ln38_reg_859 <= add_ln38_fu_205_p2;
        icmp_ln36_reg_855 <= icmp_ln36_fu_200_p2;
        zext_ln27_2_reg_849[12 : 0] <= zext_ln27_2_fu_194_p1[12 : 0];
        zext_ln28_1_reg_843[12 : 0] <= zext_ln28_1_fu_191_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_port_reg_matrix_in_1 <= matrix_in_1;
        ap_port_reg_matrix_in_2 <= matrix_in_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_855 == 1'd0) & (icmp_ln33_reg_828 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        arow <= select_ln39_fu_244_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        arow_load_reg_778 <= arow;
        size_cast1_reg_784[15 : 0] <= size_cast1_fu_148_p1[15 : 0];
        size_read_reg_770 <= size;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_828 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        bcol <= ap_phi_reg_pp0_iter0_bcol_new_0_reg_133;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp16))) begin
        matrix_a_addr_1_read_1_reg_1069 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp19))) begin
        matrix_a_addr_1_read_2_reg_1079 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp21))) begin
        matrix_a_addr_1_read_3_reg_1089 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp14))) begin
        matrix_a_addr_1_read_reg_1064 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))) begin
        matrix_a_addr_1_reg_943 <= sext_ln27_1_fu_358_p1;
        zext_ln28_reg_937[12 : 0] <= zext_ln28_fu_345_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp25))) begin
        matrix_a_addr_2_read_1_reg_1109 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp27))) begin
        matrix_a_addr_2_read_2_reg_1119 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg))) begin
        matrix_a_addr_2_read_3_reg_1129 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp24))) begin
        matrix_a_addr_2_read_reg_1104 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg))) begin
        matrix_a_addr_2_reg_975 <= sext_ln27_2_fu_430_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp33))) begin
        matrix_a_addr_3_read_1_reg_1149 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp35))) begin
        matrix_a_addr_3_read_2_reg_1159 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp37))) begin
        matrix_a_addr_3_read_3_reg_1169 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp32))) begin
        matrix_a_addr_3_read_reg_1144 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp33))) begin
        matrix_a_addr_3_reg_1007 <= sext_ln27_3_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp6))) begin
        matrix_a_addr_read_1_reg_1029 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp9))) begin
        matrix_a_addr_read_2_reg_1039 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp11))) begin
        matrix_a_addr_read_3_reg_1049 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        matrix_a_addr_read_reg_1024 <= m_axi_matrix_a_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        matrix_a_addr_reg_899 <= sext_ln27_fu_273_p1;
        matrix_in_2_read_reg_891 <= ap_port_reg_matrix_in_2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp20))) begin
        matrix_b_addr_1_read_1_reg_1084 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp22))) begin
        matrix_b_addr_1_read_2_reg_1094 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp23))) begin
        matrix_b_addr_1_read_3_reg_1099 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp17))) begin
        matrix_b_addr_1_read_reg_1074 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0))) begin
        matrix_b_addr_1_reg_959 <= sext_ln28_1_fu_394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp28))) begin
        matrix_b_addr_2_read_1_reg_1124 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp30))) begin
        matrix_b_addr_2_read_2_reg_1134 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp31))) begin
        matrix_b_addr_2_read_3_reg_1139 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp26))) begin
        matrix_b_addr_2_read_reg_1114 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp31))) begin
        matrix_b_addr_2_reg_991 <= sext_ln28_2_fu_466_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp36))) begin
        matrix_b_addr_3_read_1_reg_1164 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp38))) begin
        matrix_b_addr_3_read_2_reg_1174 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp34))) begin
        matrix_b_addr_3_read_reg_1154 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp36))) begin
        matrix_b_addr_3_reg_1018 <= sext_ln28_3_fu_538_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp10))) begin
        matrix_b_addr_read_1_reg_1044 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp12))) begin
        matrix_b_addr_read_2_reg_1054 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp13))) begin
        matrix_b_addr_read_3_reg_1059 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp7))) begin
        matrix_b_addr_read_reg_1034 <= m_axi_matrix_b_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))) begin
        matrix_b_addr_reg_921 <= sext_ln28_fu_319_p1;
        zext_ln27_reg_915[12 : 0] <= zext_ln27_fu_306_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        matrix_in_1_read_reg_865 <= ap_port_reg_matrix_in_1;
        size_cast3_reg_873[15 : 0] <= size_cast3_fu_210_p1[15 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))))) begin
        grp_fu_224_ce = 1'b1;
    end else begin
        grp_fu_224_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_294_ce = 1'b1;
    end else begin
        grp_fu_294_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))))) begin
        grp_fu_379_ce = 1'b1;
    end else begin
        grp_fu_379_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0))))) begin
        grp_fu_415_ce = 1'b1;
    end else begin
        grp_fu_415_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp31))))) begin
        grp_fu_451_ce = 1'b1;
    end else begin
        grp_fu_451_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp33)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp0))))) begin
        grp_fu_487_ce = 1'b1;
    end else begin
        grp_fu_487_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp36)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp0))))) begin
        grp_fu_523_ce = 1'b1;
    end else begin
        grp_fu_523_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))))) begin
        grp_fu_709_ce = 1'b1;
    end else begin
        grp_fu_709_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))))) begin
        grp_fu_716_ce = 1'b1;
    end else begin
        grp_fu_716_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))))) begin
        grp_fu_723_ce = 1'b1;
    end else begin
        grp_fu_723_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_731_ce = 1'b1;
    end else begin
        grp_fu_731_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_739_ce = 1'b1;
    end else begin
        grp_fu_739_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_748_ce = 1'b1;
    end else begin
        grp_fu_748_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))))) begin
        grp_fu_756_ce = 1'b1;
    end else begin
        grp_fu_756_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp0))))) begin
        grp_fu_763_ce = 1'b1;
    end else begin
        grp_fu_763_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4310)) begin
            m_axi_matrix_a_0_ARADDR = matrix_a_addr_3_reg_1007;
        end else if ((1'b1 == ap_condition_4306)) begin
            m_axi_matrix_a_0_ARADDR = matrix_a_addr_2_reg_975;
        end else if ((1'b1 == ap_condition_4302)) begin
            m_axi_matrix_a_0_ARADDR = matrix_a_addr_1_reg_943;
        end else if ((1'b1 == ap_condition_4298)) begin
            m_axi_matrix_a_0_ARADDR = matrix_a_addr_reg_899;
        end else begin
            m_axi_matrix_a_0_ARADDR = 'bx;
        end
    end else begin
        m_axi_matrix_a_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp15)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp5)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp1)))) begin
        m_axi_matrix_a_0_ARVALID = 1'b1;
    end else begin
        m_axi_matrix_a_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp37)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp35)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp33)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & 
    (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp27)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp16)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp14)) 
    | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp32)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp11)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp24)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001)))) begin
        m_axi_matrix_a_0_RREADY = 1'b1;
    end else begin
        m_axi_matrix_a_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_4326)) begin
            m_axi_matrix_b_0_ARADDR = matrix_b_addr_3_reg_1018;
        end else if ((1'b1 == ap_condition_4322)) begin
            m_axi_matrix_b_0_ARADDR = matrix_b_addr_2_reg_991;
        end else if ((1'b1 == ap_condition_4318)) begin
            m_axi_matrix_b_0_ARADDR = matrix_b_addr_1_reg_959;
        end else if ((1'b1 == ap_condition_4314)) begin
            m_axi_matrix_b_0_ARADDR = matrix_b_addr_reg_921;
        end else begin
            m_axi_matrix_b_0_ARADDR = 'bx;
        end
    end else begin
        m_axi_matrix_b_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp4)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp8)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp18)))) begin
        m_axi_matrix_b_0_ARVALID = 1'b1;
    end else begin
        m_axi_matrix_b_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp38)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp36)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp34)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & 
    (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp28)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp22)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp17)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp13)) 
    | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp10)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp12)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp23)))) begin
        m_axi_matrix_b_0_RREADY = 1'b1;
    end else begin
        m_axi_matrix_b_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage10_grp3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage2_grp15)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage14_grp5)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage6_grp1)))) begin
        matrix_a_blk_n_AR = m_axi_matrix_a_0_ARREADY;
    end else begin
        matrix_a_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp6) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg) & (1'b0 == ap_block_pp0_stage13_grp37)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg) & (1'b0 == ap_block_pp0_stage12_grp35)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg) & (1'b0 == ap_block_pp0_stage11_grp33)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg) & (1'b0 == ap_block_pp0_stage9_grp29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage8_grp27)) | ((ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage7_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage5_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage4_grp19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage3_grp16)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage2_grp14)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg) & (1'b0 == ap_block_pp0_stage10_grp32)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage0_grp9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage1_grp11)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage6_grp24)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14)))) begin
        matrix_a_blk_n_R = m_axi_matrix_a_0_RVALID;
    end else begin
        matrix_a_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage11_grp4)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp8) & (1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage7_grp2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage3_grp18)))) begin
        matrix_b_blk_n_AR = m_axi_matrix_b_0_ARREADY;
    end else begin
        matrix_b_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp7) & (1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (1'b0 == ap_block_pp0_stage13_grp38)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (1'b0 == ap_block_pp0_stage12_grp36)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (1'b0 == ap_block_pp0_stage11_grp34)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (1'b0 == ap_block_pp0_stage9_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_grp28)) | ((ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage7_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage5_grp22)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage4_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage3_grp17)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage2_grp13)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage10_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) 
    & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage0_grp10)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage1_grp12)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage6_grp23)))) begin
        matrix_b_blk_n_R = m_axi_matrix_b_0_RVALID;
    end else begin
        matrix_b_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_fu_164_p2 = (offset_a + 13'd4);

assign add_ln35_fu_185_p2 = (bcol + 13'd4);

assign add_ln38_fu_205_p2 = (arow_load_reg_778 + 13'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg))));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp10 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp9 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp10 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp9 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp9_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg)))) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage10_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001_grp3 = ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_grp31 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_grp32 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg));
end

assign ap_block_pp0_stage10_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg)))) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp3 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp31 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp31_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp32 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp32_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg)))) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage11_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001_grp33 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_grp34 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_grp4 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0));
end

assign ap_block_pp0_stage11_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp33 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg)))) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp33 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp33_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp34 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp34_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp4 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg))));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_grp35 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_grp36 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage12_grp35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_grp36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone_grp35 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp35_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone_grp36 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp36_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_grp37 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_grp38 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage13_grp37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_grp38 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp37 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp37_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp38 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp38_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage14_iter1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & ((m_axi_matrix_a_0_RVALID == 1'b0) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_grp5 = ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg));
end

assign ap_block_pp0_stage14_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage14_iter1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & ((m_axi_matrix_a_0_RVALID == 1'b0) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp5 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp6 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp7 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp8 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0));
end

assign ap_block_pp0_stage15_grp6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_grp7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)) | ((1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp6 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp6_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp7 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp7_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp8 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg))));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp11 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp12 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp11 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp12 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp12_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg)) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg))));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp13 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp14 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp15 = ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg)) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp13 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp13_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp14 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp14_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp15 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)) | ((1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg))));
end

assign ap_block_pp0_stage3_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_grp16 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp17 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp18 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0));
end

assign ap_block_pp0_stage3_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)) | ((1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp16 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp16_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp17 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp17_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp18 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg))));
end

assign ap_block_pp0_stage4_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001_grp19 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_grp20 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage4_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp19 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp19_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp20 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp20_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg))));
end

assign ap_block_pp0_stage5_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001_grp21 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_grp22 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage5_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp21 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp21_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp22 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp22_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg)))) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)));
end

assign ap_block_pp0_stage6_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001_grp1 = ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_grp23 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_grp24 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg));
end

assign ap_block_pp0_stage6_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg)))) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp1 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp23 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp23_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp24 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp24_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg)))) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage7_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001_grp2 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_grp25 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_grp26 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage7_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg)))) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp2 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (m_axi_matrix_b_0_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp25 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp25_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp26 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp26_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg))));
end

assign ap_block_pp0_stage8_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001_grp27 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage8_11001_grp28 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage8_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_grp27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_grp28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp27 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp27_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp28 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg))));
end

assign ap_block_pp0_stage9_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001_grp29 = ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage9_11001_grp30 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0));
end

assign ap_block_pp0_stage9_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_grp29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_grp30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp0 = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp29 = ((1'b0 == ap_ce) | ((m_axi_matrix_a_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp30 = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp30_done_reg) & (m_axi_matrix_b_0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state31_pp0_stage14_iter1 = (m_axi_matrix_b_0_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_4291 = ((icmp_ln33_reg_828 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0));
end

always @ (*) begin
    ap_condition_4298 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp1));
end

always @ (*) begin
    ap_condition_4302 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp3));
end

always @ (*) begin
    ap_condition_4306 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp5));
end

always @ (*) begin
    ap_condition_4310 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp15));
end

always @ (*) begin
    ap_condition_4314 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp2));
end

always @ (*) begin
    ap_condition_4318 = ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp4));
end

always @ (*) begin
    ap_condition_4322 = ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp8));
end

always @ (*) begin
    ap_condition_4326 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp18));
end

always @ (*) begin
    ap_condition_857 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = matrix_a_addr_read_reg_1024;

assign ap_return_1 = matrix_a_addr_read_1_reg_1029;

assign ap_return_10 = matrix_a_addr_2_read_2_reg_1119;

assign ap_return_11 = matrix_a_addr_2_read_3_reg_1129;

assign ap_return_12 = matrix_a_addr_3_read_reg_1144;

assign ap_return_13 = matrix_a_addr_3_read_1_reg_1149;

assign ap_return_14 = matrix_a_addr_3_read_2_reg_1159;

assign ap_return_15 = matrix_a_addr_3_read_3_reg_1169;

assign ap_return_16 = matrix_b_addr_read_reg_1034;

assign ap_return_17 = matrix_b_addr_read_1_reg_1044;

assign ap_return_18 = matrix_b_addr_read_2_reg_1054;

assign ap_return_19 = matrix_b_addr_read_3_reg_1059;

assign ap_return_2 = matrix_a_addr_read_2_reg_1039;

assign ap_return_20 = matrix_b_addr_1_read_reg_1074;

assign ap_return_21 = matrix_b_addr_1_read_1_reg_1084;

assign ap_return_22 = matrix_b_addr_1_read_2_reg_1094;

assign ap_return_23 = matrix_b_addr_1_read_3_reg_1099;

assign ap_return_24 = matrix_b_addr_2_read_reg_1114;

assign ap_return_25 = matrix_b_addr_2_read_1_reg_1124;

assign ap_return_26 = matrix_b_addr_2_read_2_reg_1134;

assign ap_return_27 = matrix_b_addr_2_read_3_reg_1139;

assign ap_return_28 = matrix_b_addr_3_read_reg_1154;

assign ap_return_29 = matrix_b_addr_3_read_1_reg_1164;

assign ap_return_3 = matrix_a_addr_read_3_reg_1049;

assign ap_return_30 = matrix_b_addr_3_read_2_reg_1174;

assign ap_return_31 = m_axi_matrix_b_0_RDATA;

assign ap_return_4 = matrix_a_addr_1_read_reg_1064;

assign ap_return_5 = matrix_a_addr_1_read_1_reg_1069;

assign ap_return_6 = matrix_a_addr_1_read_2_reg_1079;

assign ap_return_7 = matrix_a_addr_1_read_3_reg_1089;

assign ap_return_8 = matrix_a_addr_2_read_reg_1104;

assign ap_return_9 = matrix_a_addr_2_read_1_reg_1109;

assign arow_load_cast7_fu_174_p1 = arow_load_reg_778;

assign grp_fu_224_p0 = shl_ln_fu_213_p3;

assign grp_fu_294_p0 = shl_ln1_fu_283_p3;

assign grp_fu_340_p0 = shl_ln27_1_fu_329_p3;

assign grp_fu_379_p0 = shl_ln28_1_fu_368_p3;

assign grp_fu_415_p0 = shl_ln27_2_fu_404_p3;

assign grp_fu_451_p0 = shl_ln28_2_fu_440_p3;

assign grp_fu_487_p0 = shl_ln27_3_fu_476_p3;

assign grp_fu_523_p0 = shl_ln28_3_fu_512_p3;

assign grp_fu_709_p0 = grp_fu_709_p00;

assign grp_fu_709_p00 = size;

assign grp_fu_709_p1 = grp_fu_709_p10;

assign grp_fu_709_p10 = arow;

assign grp_fu_709_p2 = offset_a_load_cast_reg_803;

assign grp_fu_716_p0 = size_cast1_reg_784;

assign grp_fu_716_p1 = grp_fu_716_p10;

assign grp_fu_716_p10 = offset_a;

assign grp_fu_716_p2 = grp_fu_716_p20;

assign grp_fu_716_p20 = bcol_load_reg_816;

assign grp_fu_723_p0 = grp_fu_723_p00;

assign grp_fu_723_p00 = arow_load_reg_778;

assign grp_fu_723_p1 = 14'd1;

assign grp_fu_723_p2 = size_cast1_reg_784;

assign grp_fu_723_p3 = offset_a_load_cast_reg_803;

assign grp_fu_731_p0 = grp_fu_731_p00;

assign grp_fu_731_p00 = offset_a_load_reg_797;

assign grp_fu_731_p1 = 14'd1;

assign grp_fu_731_p2 = size_cast1_reg_784;

assign grp_fu_731_p3 = zext_ln28_1_reg_843;

assign grp_fu_739_p0 = arow_load_cast7_reg_822;

assign grp_fu_739_p1 = 14'd2;

assign grp_fu_739_p2 = grp_fu_739_p20;

assign grp_fu_739_p20 = size_read_reg_770;

assign grp_fu_739_p3 = grp_fu_739_p30;

assign grp_fu_739_p30 = offset_a_load_reg_797;

assign grp_fu_748_p0 = zext_ln27_2_reg_849;

assign grp_fu_748_p1 = 14'd2;

assign grp_fu_748_p2 = size_cast3_reg_873;

assign grp_fu_748_p3 = grp_fu_748_p30;

assign grp_fu_748_p30 = bcol_load_reg_816;

assign grp_fu_756_p0 = arow_load_cast7_reg_822;

assign grp_fu_756_p1 = 14'd3;

assign grp_fu_756_p2 = size_cast3_reg_873;

assign grp_fu_756_p3 = zext_ln27_reg_915;

assign grp_fu_763_p0 = zext_ln27_2_reg_849;

assign grp_fu_763_p1 = 14'd3;

assign grp_fu_763_p2 = size_cast3_reg_873;

assign grp_fu_763_p3 = zext_ln28_reg_937;

assign icmp_ln33_fu_180_p2 = ((zext_ln33_fu_177_p1 < size_read_reg_770) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_200_p2 = ((zext_ln36_fu_197_p1 < size_read_reg_770) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_233_p2 = ((zext_ln39_fu_230_p1 < size_read_reg_770) ? 1'b1 : 1'b0);

assign m_axi_matrix_a_0_ARBURST = 2'd0;

assign m_axi_matrix_a_0_ARCACHE = 4'd0;

assign m_axi_matrix_a_0_ARID = 1'd0;

assign m_axi_matrix_a_0_ARLEN = 64'd4;

assign m_axi_matrix_a_0_ARLOCK = 2'd0;

assign m_axi_matrix_a_0_ARPROT = 3'd0;

assign m_axi_matrix_a_0_ARQOS = 4'd0;

assign m_axi_matrix_a_0_ARREGION = 4'd0;

assign m_axi_matrix_a_0_ARSIZE = 3'd0;

assign m_axi_matrix_a_0_ARUSER = 1'd0;

assign m_axi_matrix_a_0_AWADDR = 64'd0;

assign m_axi_matrix_a_0_AWBURST = 2'd0;

assign m_axi_matrix_a_0_AWCACHE = 4'd0;

assign m_axi_matrix_a_0_AWID = 1'd0;

assign m_axi_matrix_a_0_AWLEN = 32'd0;

assign m_axi_matrix_a_0_AWLOCK = 2'd0;

assign m_axi_matrix_a_0_AWPROT = 3'd0;

assign m_axi_matrix_a_0_AWQOS = 4'd0;

assign m_axi_matrix_a_0_AWREGION = 4'd0;

assign m_axi_matrix_a_0_AWSIZE = 3'd0;

assign m_axi_matrix_a_0_AWUSER = 1'd0;

assign m_axi_matrix_a_0_AWVALID = 1'b0;

assign m_axi_matrix_a_0_BREADY = 1'b0;

assign m_axi_matrix_a_0_WDATA = 16'd0;

assign m_axi_matrix_a_0_WID = 1'd0;

assign m_axi_matrix_a_0_WLAST = 1'b0;

assign m_axi_matrix_a_0_WSTRB = 2'd0;

assign m_axi_matrix_a_0_WUSER = 1'd0;

assign m_axi_matrix_a_0_WVALID = 1'b0;

assign m_axi_matrix_b_0_ARBURST = 2'd0;

assign m_axi_matrix_b_0_ARCACHE = 4'd0;

assign m_axi_matrix_b_0_ARID = 1'd0;

assign m_axi_matrix_b_0_ARLEN = 64'd4;

assign m_axi_matrix_b_0_ARLOCK = 2'd0;

assign m_axi_matrix_b_0_ARPROT = 3'd0;

assign m_axi_matrix_b_0_ARQOS = 4'd0;

assign m_axi_matrix_b_0_ARREGION = 4'd0;

assign m_axi_matrix_b_0_ARSIZE = 3'd0;

assign m_axi_matrix_b_0_ARUSER = 1'd0;

assign m_axi_matrix_b_0_AWADDR = 64'd0;

assign m_axi_matrix_b_0_AWBURST = 2'd0;

assign m_axi_matrix_b_0_AWCACHE = 4'd0;

assign m_axi_matrix_b_0_AWID = 1'd0;

assign m_axi_matrix_b_0_AWLEN = 32'd0;

assign m_axi_matrix_b_0_AWLOCK = 2'd0;

assign m_axi_matrix_b_0_AWPROT = 3'd0;

assign m_axi_matrix_b_0_AWQOS = 4'd0;

assign m_axi_matrix_b_0_AWREGION = 4'd0;

assign m_axi_matrix_b_0_AWSIZE = 3'd0;

assign m_axi_matrix_b_0_AWUSER = 1'd0;

assign m_axi_matrix_b_0_AWVALID = 1'b0;

assign m_axi_matrix_b_0_BREADY = 1'b0;

assign m_axi_matrix_b_0_WDATA = 16'd0;

assign m_axi_matrix_b_0_WID = 1'd0;

assign m_axi_matrix_b_0_WLAST = 1'b0;

assign m_axi_matrix_b_0_WSTRB = 2'd0;

assign m_axi_matrix_b_0_WUSER = 1'd0;

assign m_axi_matrix_b_0_WVALID = 1'b0;

assign offset_a_load_cast_fu_160_p1 = offset_a;

assign select_ln39_fu_244_p3 = ((xor_ln39_fu_238_p2[0:0] == 1'b1) ? 13'd0 : add_ln38_reg_859);

assign sext_ln27_1_fu_358_p1 = $signed(trunc_ln27_1_fu_348_p4);

assign sext_ln27_2_fu_430_p1 = $signed(trunc_ln27_2_fu_420_p4);

assign sext_ln27_3_fu_502_p1 = $signed(trunc_ln27_3_fu_492_p4);

assign sext_ln27_fu_273_p1 = $signed(trunc_ln_fu_263_p4);

assign sext_ln28_1_fu_394_p1 = $signed(trunc_ln28_1_fu_384_p4);

assign sext_ln28_2_fu_466_p1 = $signed(trunc_ln28_2_fu_456_p4);

assign sext_ln28_3_fu_538_p1 = $signed(trunc_ln28_3_fu_528_p4);

assign sext_ln28_fu_319_p1 = $signed(trunc_ln2_fu_309_p4);

assign shl_ln1_fu_283_p3 = {{add_ln28_reg_886}, {1'd0}};

assign shl_ln27_1_fu_329_p3 = {{add_ln27_5_reg_910}, {1'd0}};

assign shl_ln27_2_fu_404_p3 = {{add_ln27_7_reg_954}, {1'd0}};

assign shl_ln27_3_fu_476_p3 = {{add_ln27_9_reg_986}, {1'd0}};

assign shl_ln28_1_fu_368_p3 = {{add_ln28_2_reg_932}, {1'd0}};

assign shl_ln28_2_fu_440_p3 = {{add_ln28_4_reg_970}, {1'd0}};

assign shl_ln28_3_fu_512_p3 = {{add_ln28_6_reg_1002}, {1'd0}};

assign shl_ln_fu_213_p3 = {{add_ln27_reg_838}, {1'd0}};

assign size_cast1_fu_148_p1 = size;

assign size_cast3_fu_210_p1 = size_read_reg_770;

assign trunc_ln27_1_fu_348_p4 = {{grp_fu_340_p2[63:1]}};

assign trunc_ln27_2_fu_420_p4 = {{grp_fu_415_p2[63:1]}};

assign trunc_ln27_3_fu_492_p4 = {{grp_fu_487_p2[63:1]}};

assign trunc_ln28_1_fu_384_p4 = {{grp_fu_379_p2[63:1]}};

assign trunc_ln28_2_fu_456_p4 = {{grp_fu_451_p2[63:1]}};

assign trunc_ln28_3_fu_528_p4 = {{grp_fu_523_p2[63:1]}};

assign trunc_ln2_fu_309_p4 = {{grp_fu_294_p2[63:1]}};

assign trunc_ln_fu_263_p4 = {{grp_fu_224_p2[63:1]}};

assign xor_ln39_fu_238_p2 = (icmp_ln39_fu_233_p2 ^ 1'd1);

assign zext_ln27_2_fu_194_p1 = offset_a_load_reg_797;

assign zext_ln27_fu_306_p1 = offset_a_load_reg_797;

assign zext_ln28_1_fu_191_p1 = bcol_load_reg_816;

assign zext_ln28_fu_345_p1 = bcol_load_reg_816;

assign zext_ln33_fu_177_p1 = add_ln32_reg_810;

assign zext_ln36_fu_197_p1 = add_ln35_reg_832;

assign zext_ln39_fu_230_p1 = add_ln38_reg_859;

always @ (posedge ap_clk) begin
    size_cast1_reg_784[28:16] <= 13'b0000000000000;
    offset_a_load_cast_reg_803[28:13] <= 16'b0000000000000000;
    arow_load_cast7_reg_822[13] <= 1'b0;
    zext_ln28_1_reg_843[28:13] <= 16'b0000000000000000;
    zext_ln27_2_reg_849[13] <= 1'b0;
    size_cast3_reg_873[29:16] <= 14'b00000000000000;
    zext_ln27_reg_915[29:13] <= 17'b00000000000000000;
    zext_ln28_reg_937[29:13] <= 17'b00000000000000000;
end

endmodule //MatrixMult_NoCache_matrixSlicer
