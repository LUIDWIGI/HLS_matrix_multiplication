-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMult_dataflow_in_loop_VITIS_LOOP_24_1_1_Loop_VITIS_LOOP_30_2_proc10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    size : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_matrix_a_0_AWVALID : OUT STD_LOGIC;
    m_axi_matrix_a_0_AWREADY : IN STD_LOGIC;
    m_axi_matrix_a_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_matrix_a_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_matrix_a_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_a_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_a_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_WVALID : OUT STD_LOGIC;
    m_axi_matrix_a_0_WREADY : IN STD_LOGIC;
    m_axi_matrix_a_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_matrix_a_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_WLAST : OUT STD_LOGIC;
    m_axi_matrix_a_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_ARVALID : OUT STD_LOGIC;
    m_axi_matrix_a_0_ARREADY : IN STD_LOGIC;
    m_axi_matrix_a_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_matrix_a_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_matrix_a_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_a_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_a_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_a_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_RVALID : IN STD_LOGIC;
    m_axi_matrix_a_0_RREADY : OUT STD_LOGIC;
    m_axi_matrix_a_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_matrix_a_0_RLAST : IN STD_LOGIC;
    m_axi_matrix_a_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_matrix_a_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_BVALID : IN STD_LOGIC;
    m_axi_matrix_a_0_BREADY : OUT STD_LOGIC;
    m_axi_matrix_a_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_a_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_a_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    matrix_in_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_matrix_b_0_AWVALID : OUT STD_LOGIC;
    m_axi_matrix_b_0_AWREADY : IN STD_LOGIC;
    m_axi_matrix_b_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_matrix_b_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_matrix_b_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_b_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_b_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_WVALID : OUT STD_LOGIC;
    m_axi_matrix_b_0_WREADY : IN STD_LOGIC;
    m_axi_matrix_b_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_matrix_b_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_WLAST : OUT STD_LOGIC;
    m_axi_matrix_b_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_ARVALID : OUT STD_LOGIC;
    m_axi_matrix_b_0_ARREADY : IN STD_LOGIC;
    m_axi_matrix_b_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_matrix_b_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_matrix_b_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_b_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_matrix_b_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_matrix_b_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_RVALID : IN STD_LOGIC;
    m_axi_matrix_b_0_RREADY : OUT STD_LOGIC;
    m_axi_matrix_b_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_matrix_b_0_RLAST : IN STD_LOGIC;
    m_axi_matrix_b_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_matrix_b_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_BVALID : IN STD_LOGIC;
    m_axi_matrix_b_0_BREADY : OUT STD_LOGIC;
    m_axi_matrix_b_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_matrix_b_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_matrix_b_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    matrix_in_2 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read34 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read38 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read42 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read46 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read50 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read54 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read58 : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MatrixMult_dataflow_in_loop_VITIS_LOOP_24_1_1_Loop_VITIS_LOOP_30_2_proc10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal grp_matrixSlicer_fu_306_matrix_a_blk_n_AR : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_matrix_a_blk_n_R : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_matrix_b_blk_n_AR : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_matrix_b_blk_n_R : STD_LOGIC;
    signal icmp_ln30_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state16_pp0_stage15_iter0_grp10 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage15 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal matrix_a_blk_n_AR : STD_LOGIC;
    signal matrix_a_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_grp1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_grp2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_grp3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_grp4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_grp5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_grp6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12_grp7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_grp8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14_grp9 : BOOLEAN;
    signal ap_block_pp0_stage15_grp10 : BOOLEAN;
    signal ap_block_pp0_stage0_grp11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_grp12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_grp13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_grp14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_grp15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_grp16 : BOOLEAN;
    signal matrix_b_blk_n_AR : STD_LOGIC;
    signal matrix_b_blk_n_R : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal matrix_in_2_read_reg_1236 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 : BOOLEAN := false;
    signal matrix_in_1_read_reg_1241 : STD_LOGIC_VECTOR (63 downto 0);
    signal size_read_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state17_pp0_stage0_iter1_grp11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln30_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_reg_1251_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln30_fu_563_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln30_reg_1255 : STD_LOGIC_VECTOR (13 downto 0);
    signal Matrix_4x4_1_0_0_i_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state13_pp0_stage12_iter0_grp7 : BOOLEAN;
    signal ap_block_state29_pp0_stage12_iter1_grp7 : BOOLEAN;
    signal ap_block_pp0_stage12_11001_grp7 : BOOLEAN;
    signal Matrix_4x4_1_0_1_i_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_0_2_i_reg_1270 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_0_3_i_reg_1275 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_1_0_i_reg_1280 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_1_1_i_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_1_2_i_reg_1290 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_1_3_i_reg_1295 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_2_0_i_reg_1300 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_2_1_i_reg_1305 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_2_2_i_reg_1310 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_2_3_i_reg_1315 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_3_0_i_reg_1320 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_3_1_i_reg_1325 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_3_2_i_reg_1330 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_1_3_3_i_reg_1335 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_0_0_i_reg_1340 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_0_1_i_reg_1345 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_0_2_i_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_0_3_i_reg_1355 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_1_0_i_reg_1360 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_1_1_i_reg_1365 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_1_2_i_reg_1370 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_1_3_i_reg_1375 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_2_0_i_reg_1380 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_2_1_i_reg_1385 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_2_2_i_reg_1390 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_2_3_i_reg_1395 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_3_0_i_reg_1400 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_3_1_i_reg_1405 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_3_2_i_reg_1410 : STD_LOGIC_VECTOR (15 downto 0);
    signal Matrix_4x4_2_3_3_i_reg_1415 : STD_LOGIC_VECTOR (15 downto 0);
    signal matrix_4x4_out_0_0_i_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal matrix_4x4_out_0_1_i_reg_1425 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_0_2_i_reg_1430 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_0_3_i_reg_1435 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_1_0_i_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_1_1_i_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_1_2_i_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_1_3_i_reg_1455 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_2_0_i_reg_1460 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_2_1_i_reg_1465 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_2_2_i_reg_1470 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_2_3_i_reg_1475 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_3_0_i_reg_1480 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_3_1_i_reg_1485 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_3_2_i_reg_1490 : STD_LOGIC_VECTOR (31 downto 0);
    signal matrix_4x4_out_3_3_i_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_0_0_ret_i_reg_1500 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage3_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal Matrix_4x4_final_0_1_ret_i_reg_1505 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_0_2_ret_i_reg_1510 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_0_3_ret_i_reg_1515 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_1_0_ret_i_reg_1520 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_1_1_ret_i_reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_1_2_ret_i_reg_1530 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_1_3_ret_i_reg_1535 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_2_0_ret_i_reg_1540 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_2_1_ret_i_reg_1545 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_2_2_ret_i_reg_1550 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_2_3_ret_i_reg_1555 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_3_0_ret_i_reg_1560 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_3_1_ret_i_reg_1565 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_3_2_ret_i_reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_3_3_ret_i_reg_1575 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state21_pp0_stage4_iter1_grp15 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal grp_matrixSlicer_fu_306_ap_start : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_ap_done : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_ap_idle : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_ap_ready : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WLAST : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_RREADY : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_b_0_BREADY : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WLAST : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARVALID : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_RREADY : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_m_axi_matrix_a_0_BREADY : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_ap_ce : STD_LOGIC;
    signal grp_matrixSlicer_fu_306_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_matrixSlicer_fu_306_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage1_11001_ignoreCallOp124_grp12 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp126_grp13 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp127_grp14 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp128_grp15 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp129_grp16 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp130_grp1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp131_grp2 : BOOLEAN;
    signal ap_block_pp0_stage8_11001_ignoreCallOp132_grp3 : BOOLEAN;
    signal ap_block_pp0_stage9_11001_ignoreCallOp133_grp4 : BOOLEAN;
    signal ap_block_pp0_stage10_11001_ignoreCallOp134_grp5 : BOOLEAN;
    signal ap_block_pp0_stage11_11001_ignoreCallOp135_grp6 : BOOLEAN;
    signal ap_block_pp0_stage12_11001_ignoreCallOp136_grp7 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp137_grp8 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp138_grp9 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp139_grp10 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp140_grp11 : BOOLEAN;
    signal grp_multiplier_fu_323_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_multiplier_fu_323_ap_ce : STD_LOGIC;
    signal ap_block_state14_pp0_stage13_iter0_ignore_call53_grp8 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp185 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0_ignore_call53_grp9 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp186 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0_ignore_call53_grp10 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp187 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter1_ignore_call53_grp12 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp189 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter1_ignore_call53_grp13 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp190 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp185_grp0 : BOOLEAN;
    signal ap_block_pp0_stage13_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage13_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp186_grp0 : BOOLEAN;
    signal ap_block_pp0_stage14_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage14_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp187_grp0 : BOOLEAN;
    signal ap_block_pp0_stage15_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage15_subdone_grp0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call53 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp188_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp189_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp190_grp0 : BOOLEAN;
    signal call_ret2_i_matrixAdder_fu_359_ap_ready : STD_LOGIC;
    signal call_ret2_i_matrixAdder_fu_359_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_i_matrixAdder_fu_359_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matrixSlicer_fu_306_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage6_ignoreCallOp130_grp1 : BOOLEAN;
    signal ap_block_pp0_stage7_ignoreCallOp131_grp2 : BOOLEAN;
    signal ap_block_pp0_stage8_ignoreCallOp132_grp3 : BOOLEAN;
    signal ap_block_pp0_stage9_ignoreCallOp133_grp4 : BOOLEAN;
    signal ap_block_pp0_stage10_ignoreCallOp134_grp5 : BOOLEAN;
    signal ap_block_pp0_stage11_ignoreCallOp135_grp6 : BOOLEAN;
    signal ap_block_pp0_stage12_ignoreCallOp136_grp7 : BOOLEAN;
    signal ap_block_pp0_stage13_ignoreCallOp137_grp8 : BOOLEAN;
    signal ap_block_pp0_stage14_ignoreCallOp138_grp9 : BOOLEAN;
    signal ap_block_pp0_stage15_ignoreCallOp139_grp10 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp140_grp11 : BOOLEAN;
    signal ap_block_pp0_stage1_ignoreCallOp141_grp12 : BOOLEAN;
    signal ap_block_pp0_stage2_ignoreCallOp142_grp13 : BOOLEAN;
    signal ap_block_pp0_stage3_ignoreCallOp143_grp14 : BOOLEAN;
    signal ap_block_pp0_stage4_ignoreCallOp144_grp15 : BOOLEAN;
    signal ap_block_pp0_stage5_ignoreCallOp145_grp16 : BOOLEAN;
    signal ap_block_pp0_stage6_ignoreCallOp146_grp1 : BOOLEAN;
    signal ap_block_pp0_stage7_ignoreCallOp147_grp2 : BOOLEAN;
    signal ap_block_pp0_stage8_ignoreCallOp148_grp3 : BOOLEAN;
    signal ap_block_pp0_stage9_ignoreCallOp149_grp4 : BOOLEAN;
    signal ap_block_pp0_stage10_ignoreCallOp150_grp5 : BOOLEAN;
    signal ap_block_pp0_stage11_ignoreCallOp151_grp6 : BOOLEAN;
    signal ap_block_pp0_stage12_ignoreCallOp152_grp7 : BOOLEAN;
    signal ap_block_pp0_stage1_ignoreCallOp124_grp12 : BOOLEAN;
    signal ap_block_pp0_stage2_ignoreCallOp126_grp13 : BOOLEAN;
    signal ap_block_pp0_stage13_ignoreCallOp185_grp0 : BOOLEAN;
    signal ap_block_pp0_stage3_ignoreCallOp223_grp0 : BOOLEAN;
    signal i_fu_124 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal ap_block_pp0_stage1_11001_grp0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal Matrix_4x4_final_15_i_out_0_fu_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read_cast_fu_455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage3_grp0 : BOOLEAN;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage4 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal Matrix_4x4_final_14_i_out_0_fu_132 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read2_cast_fu_451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_13_i_out_0_fu_136 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read6_cast_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_12_i_out_0_fu_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read10_cast_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_11_i_out_0_fu_144 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read14_cast_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_10_i_out_0_fu_148 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read18_cast_fu_435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_9_i_out_0_fu_152 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read22_cast_fu_431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_8_i_out_0_fu_156 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read26_cast_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_7_i_out_0_fu_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read30_cast_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_6_i_out_0_fu_164 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read34_cast_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_5_i_out_0_fu_168 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read38_cast_fu_415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_4_i_out_0_fu_172 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read42_cast_fu_411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_3_i_out_0_fu_176 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read46_cast_fu_407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_2_i_out_0_fu_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read50_cast_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_1_i_out_0_fu_184 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read54_cast_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal Matrix_4x4_final_i_out_0_fu_188 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_read58_cast_fu_395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal tmp_fu_459_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage2_grp0 : BOOLEAN;
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_state18_pp0_stage1_iter1_grp12 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter1_grp13 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter1_grp14 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter1_grp16 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0_grp1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0_grp2 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter1_grp2 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0_grp3 : BOOLEAN;
    signal ap_block_state25_pp0_stage8_iter1_grp3 : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0_grp4 : BOOLEAN;
    signal ap_block_state26_pp0_stage9_iter1_grp4 : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0_grp5 : BOOLEAN;
    signal ap_block_state27_pp0_stage10_iter1_grp5 : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0_grp6 : BOOLEAN;
    signal ap_block_state28_pp0_stage11_iter1_grp6 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0_grp8 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0_grp9 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMult_matrixSlicer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_matrix_b_0_AWVALID : OUT STD_LOGIC;
        m_axi_matrix_b_0_AWREADY : IN STD_LOGIC;
        m_axi_matrix_b_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_matrix_b_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_matrix_b_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_b_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_b_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_WVALID : OUT STD_LOGIC;
        m_axi_matrix_b_0_WREADY : IN STD_LOGIC;
        m_axi_matrix_b_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_matrix_b_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_WLAST : OUT STD_LOGIC;
        m_axi_matrix_b_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_ARVALID : OUT STD_LOGIC;
        m_axi_matrix_b_0_ARREADY : IN STD_LOGIC;
        m_axi_matrix_b_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_matrix_b_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_matrix_b_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_b_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_b_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_b_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_RVALID : IN STD_LOGIC;
        m_axi_matrix_b_0_RREADY : OUT STD_LOGIC;
        m_axi_matrix_b_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_matrix_b_0_RLAST : IN STD_LOGIC;
        m_axi_matrix_b_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_matrix_b_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_BVALID : IN STD_LOGIC;
        m_axi_matrix_b_0_BREADY : OUT STD_LOGIC;
        m_axi_matrix_b_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_b_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_b_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_AWVALID : OUT STD_LOGIC;
        m_axi_matrix_a_0_AWREADY : IN STD_LOGIC;
        m_axi_matrix_a_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_matrix_a_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_matrix_a_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_a_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_a_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_WVALID : OUT STD_LOGIC;
        m_axi_matrix_a_0_WREADY : IN STD_LOGIC;
        m_axi_matrix_a_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_matrix_a_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_WLAST : OUT STD_LOGIC;
        m_axi_matrix_a_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_ARVALID : OUT STD_LOGIC;
        m_axi_matrix_a_0_ARREADY : IN STD_LOGIC;
        m_axi_matrix_a_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_matrix_a_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_matrix_a_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_a_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_matrix_a_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_matrix_a_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_RVALID : IN STD_LOGIC;
        m_axi_matrix_a_0_RREADY : OUT STD_LOGIC;
        m_axi_matrix_a_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_matrix_a_0_RLAST : IN STD_LOGIC;
        m_axi_matrix_a_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_matrix_a_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_BVALID : IN STD_LOGIC;
        m_axi_matrix_a_0_BREADY : OUT STD_LOGIC;
        m_axi_matrix_a_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_matrix_a_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_matrix_a_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ce : IN STD_LOGIC;
        matrix_in_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        matrix_in_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        size : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        matrix_a_blk_n_AR : OUT STD_LOGIC;
        matrix_a_blk_n_R : OUT STD_LOGIC;
        matrix_b_blk_n_AR : OUT STD_LOGIC;
        matrix_b_blk_n_R : OUT STD_LOGIC );
    end component;


    component MatrixMult_multiplier IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        matrix_in_1_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_0_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_0_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_1_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_1_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_1_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_1_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_2_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_2_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_2_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_2_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_3_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_3_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_3_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_1_3_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_0_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_0_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_1_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_1_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_1_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_1_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_2_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_2_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_2_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_2_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_3_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_3_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_3_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        matrix_in_2_3_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component MatrixMult_matrixAdder IS
    port (
        ap_ready : OUT STD_LOGIC;
        input_matrix_0_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_0_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_0_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_0_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_1_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_1_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_1_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_1_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_2_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_2_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_2_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_2_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_3_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_3_1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_3_2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        input_matrix_3_3_val : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_31 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_32 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_33 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_34 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_35 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_36 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_37 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_38 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_39 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_40 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_41 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_42 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_43 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_44 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_matrix_read_45 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_rst : IN STD_LOGIC );
    end component;


    component MatrixMult_flow_control_loop_delay_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_loop_exit_ready_delayed : IN STD_LOGIC );
    end component;



begin
    grp_matrixSlicer_fu_306 : component MatrixMult_matrixSlicer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_matrixSlicer_fu_306_ap_start,
        ap_done => grp_matrixSlicer_fu_306_ap_done,
        ap_idle => grp_matrixSlicer_fu_306_ap_idle,
        ap_ready => grp_matrixSlicer_fu_306_ap_ready,
        m_axi_matrix_b_0_AWVALID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWVALID,
        m_axi_matrix_b_0_AWREADY => ap_const_logic_0,
        m_axi_matrix_b_0_AWADDR => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWADDR,
        m_axi_matrix_b_0_AWID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWID,
        m_axi_matrix_b_0_AWLEN => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWLEN,
        m_axi_matrix_b_0_AWSIZE => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWSIZE,
        m_axi_matrix_b_0_AWBURST => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWBURST,
        m_axi_matrix_b_0_AWLOCK => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWLOCK,
        m_axi_matrix_b_0_AWCACHE => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWCACHE,
        m_axi_matrix_b_0_AWPROT => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWPROT,
        m_axi_matrix_b_0_AWQOS => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWQOS,
        m_axi_matrix_b_0_AWREGION => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWREGION,
        m_axi_matrix_b_0_AWUSER => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_AWUSER,
        m_axi_matrix_b_0_WVALID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WVALID,
        m_axi_matrix_b_0_WREADY => ap_const_logic_0,
        m_axi_matrix_b_0_WDATA => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WDATA,
        m_axi_matrix_b_0_WSTRB => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WSTRB,
        m_axi_matrix_b_0_WLAST => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WLAST,
        m_axi_matrix_b_0_WID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WID,
        m_axi_matrix_b_0_WUSER => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_WUSER,
        m_axi_matrix_b_0_ARVALID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARVALID,
        m_axi_matrix_b_0_ARREADY => m_axi_matrix_b_0_ARREADY,
        m_axi_matrix_b_0_ARADDR => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARADDR,
        m_axi_matrix_b_0_ARID => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARID,
        m_axi_matrix_b_0_ARLEN => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLEN,
        m_axi_matrix_b_0_ARSIZE => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARSIZE,
        m_axi_matrix_b_0_ARBURST => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARBURST,
        m_axi_matrix_b_0_ARLOCK => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLOCK,
        m_axi_matrix_b_0_ARCACHE => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARCACHE,
        m_axi_matrix_b_0_ARPROT => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARPROT,
        m_axi_matrix_b_0_ARQOS => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARQOS,
        m_axi_matrix_b_0_ARREGION => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARREGION,
        m_axi_matrix_b_0_ARUSER => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARUSER,
        m_axi_matrix_b_0_RVALID => m_axi_matrix_b_0_RVALID,
        m_axi_matrix_b_0_RREADY => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_RREADY,
        m_axi_matrix_b_0_RDATA => m_axi_matrix_b_0_RDATA,
        m_axi_matrix_b_0_RLAST => m_axi_matrix_b_0_RLAST,
        m_axi_matrix_b_0_RID => m_axi_matrix_b_0_RID,
        m_axi_matrix_b_0_RFIFONUM => m_axi_matrix_b_0_RFIFONUM,
        m_axi_matrix_b_0_RUSER => m_axi_matrix_b_0_RUSER,
        m_axi_matrix_b_0_RRESP => m_axi_matrix_b_0_RRESP,
        m_axi_matrix_b_0_BVALID => ap_const_logic_0,
        m_axi_matrix_b_0_BREADY => grp_matrixSlicer_fu_306_m_axi_matrix_b_0_BREADY,
        m_axi_matrix_b_0_BRESP => ap_const_lv2_0,
        m_axi_matrix_b_0_BID => ap_const_lv1_0,
        m_axi_matrix_b_0_BUSER => ap_const_lv1_0,
        m_axi_matrix_a_0_AWVALID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWVALID,
        m_axi_matrix_a_0_AWREADY => ap_const_logic_0,
        m_axi_matrix_a_0_AWADDR => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWADDR,
        m_axi_matrix_a_0_AWID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWID,
        m_axi_matrix_a_0_AWLEN => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWLEN,
        m_axi_matrix_a_0_AWSIZE => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWSIZE,
        m_axi_matrix_a_0_AWBURST => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWBURST,
        m_axi_matrix_a_0_AWLOCK => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWLOCK,
        m_axi_matrix_a_0_AWCACHE => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWCACHE,
        m_axi_matrix_a_0_AWPROT => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWPROT,
        m_axi_matrix_a_0_AWQOS => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWQOS,
        m_axi_matrix_a_0_AWREGION => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWREGION,
        m_axi_matrix_a_0_AWUSER => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_AWUSER,
        m_axi_matrix_a_0_WVALID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WVALID,
        m_axi_matrix_a_0_WREADY => ap_const_logic_0,
        m_axi_matrix_a_0_WDATA => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WDATA,
        m_axi_matrix_a_0_WSTRB => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WSTRB,
        m_axi_matrix_a_0_WLAST => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WLAST,
        m_axi_matrix_a_0_WID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WID,
        m_axi_matrix_a_0_WUSER => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_WUSER,
        m_axi_matrix_a_0_ARVALID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARVALID,
        m_axi_matrix_a_0_ARREADY => m_axi_matrix_a_0_ARREADY,
        m_axi_matrix_a_0_ARADDR => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARADDR,
        m_axi_matrix_a_0_ARID => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARID,
        m_axi_matrix_a_0_ARLEN => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLEN,
        m_axi_matrix_a_0_ARSIZE => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARSIZE,
        m_axi_matrix_a_0_ARBURST => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARBURST,
        m_axi_matrix_a_0_ARLOCK => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLOCK,
        m_axi_matrix_a_0_ARCACHE => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARCACHE,
        m_axi_matrix_a_0_ARPROT => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARPROT,
        m_axi_matrix_a_0_ARQOS => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARQOS,
        m_axi_matrix_a_0_ARREGION => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARREGION,
        m_axi_matrix_a_0_ARUSER => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARUSER,
        m_axi_matrix_a_0_RVALID => m_axi_matrix_a_0_RVALID,
        m_axi_matrix_a_0_RREADY => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_RREADY,
        m_axi_matrix_a_0_RDATA => m_axi_matrix_a_0_RDATA,
        m_axi_matrix_a_0_RLAST => m_axi_matrix_a_0_RLAST,
        m_axi_matrix_a_0_RID => m_axi_matrix_a_0_RID,
        m_axi_matrix_a_0_RFIFONUM => m_axi_matrix_a_0_RFIFONUM,
        m_axi_matrix_a_0_RUSER => m_axi_matrix_a_0_RUSER,
        m_axi_matrix_a_0_RRESP => m_axi_matrix_a_0_RRESP,
        m_axi_matrix_a_0_BVALID => ap_const_logic_0,
        m_axi_matrix_a_0_BREADY => grp_matrixSlicer_fu_306_m_axi_matrix_a_0_BREADY,
        m_axi_matrix_a_0_BRESP => ap_const_lv2_0,
        m_axi_matrix_a_0_BID => ap_const_lv1_0,
        m_axi_matrix_a_0_BUSER => ap_const_lv1_0,
        ap_ce => grp_matrixSlicer_fu_306_ap_ce,
        matrix_in_1 => matrix_in_1_read_reg_1241,
        matrix_in_2 => matrix_in_2_read_reg_1236,
        size => size_read_reg_1246,
        ap_return_0 => grp_matrixSlicer_fu_306_ap_return_0,
        ap_return_1 => grp_matrixSlicer_fu_306_ap_return_1,
        ap_return_2 => grp_matrixSlicer_fu_306_ap_return_2,
        ap_return_3 => grp_matrixSlicer_fu_306_ap_return_3,
        ap_return_4 => grp_matrixSlicer_fu_306_ap_return_4,
        ap_return_5 => grp_matrixSlicer_fu_306_ap_return_5,
        ap_return_6 => grp_matrixSlicer_fu_306_ap_return_6,
        ap_return_7 => grp_matrixSlicer_fu_306_ap_return_7,
        ap_return_8 => grp_matrixSlicer_fu_306_ap_return_8,
        ap_return_9 => grp_matrixSlicer_fu_306_ap_return_9,
        ap_return_10 => grp_matrixSlicer_fu_306_ap_return_10,
        ap_return_11 => grp_matrixSlicer_fu_306_ap_return_11,
        ap_return_12 => grp_matrixSlicer_fu_306_ap_return_12,
        ap_return_13 => grp_matrixSlicer_fu_306_ap_return_13,
        ap_return_14 => grp_matrixSlicer_fu_306_ap_return_14,
        ap_return_15 => grp_matrixSlicer_fu_306_ap_return_15,
        ap_return_16 => grp_matrixSlicer_fu_306_ap_return_16,
        ap_return_17 => grp_matrixSlicer_fu_306_ap_return_17,
        ap_return_18 => grp_matrixSlicer_fu_306_ap_return_18,
        ap_return_19 => grp_matrixSlicer_fu_306_ap_return_19,
        ap_return_20 => grp_matrixSlicer_fu_306_ap_return_20,
        ap_return_21 => grp_matrixSlicer_fu_306_ap_return_21,
        ap_return_22 => grp_matrixSlicer_fu_306_ap_return_22,
        ap_return_23 => grp_matrixSlicer_fu_306_ap_return_23,
        ap_return_24 => grp_matrixSlicer_fu_306_ap_return_24,
        ap_return_25 => grp_matrixSlicer_fu_306_ap_return_25,
        ap_return_26 => grp_matrixSlicer_fu_306_ap_return_26,
        ap_return_27 => grp_matrixSlicer_fu_306_ap_return_27,
        ap_return_28 => grp_matrixSlicer_fu_306_ap_return_28,
        ap_return_29 => grp_matrixSlicer_fu_306_ap_return_29,
        ap_return_30 => grp_matrixSlicer_fu_306_ap_return_30,
        ap_return_31 => grp_matrixSlicer_fu_306_ap_return_31,
        matrix_a_blk_n_AR => grp_matrixSlicer_fu_306_matrix_a_blk_n_AR,
        matrix_a_blk_n_R => grp_matrixSlicer_fu_306_matrix_a_blk_n_R,
        matrix_b_blk_n_AR => grp_matrixSlicer_fu_306_matrix_b_blk_n_AR,
        matrix_b_blk_n_R => grp_matrixSlicer_fu_306_matrix_b_blk_n_R);

    grp_multiplier_fu_323 : component MatrixMult_multiplier
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        matrix_in_1_0_0_val => Matrix_4x4_1_0_0_i_reg_1260,
        matrix_in_1_0_1_val => Matrix_4x4_1_0_1_i_reg_1265,
        matrix_in_1_0_2_val => Matrix_4x4_1_0_2_i_reg_1270,
        matrix_in_1_0_3_val => Matrix_4x4_1_0_3_i_reg_1275,
        matrix_in_1_1_0_val => Matrix_4x4_1_1_0_i_reg_1280,
        matrix_in_1_1_1_val => Matrix_4x4_1_1_1_i_reg_1285,
        matrix_in_1_1_2_val => Matrix_4x4_1_1_2_i_reg_1290,
        matrix_in_1_1_3_val => Matrix_4x4_1_1_3_i_reg_1295,
        matrix_in_1_2_0_val => Matrix_4x4_1_2_0_i_reg_1300,
        matrix_in_1_2_1_val => Matrix_4x4_1_2_1_i_reg_1305,
        matrix_in_1_2_2_val => Matrix_4x4_1_2_2_i_reg_1310,
        matrix_in_1_2_3_val => Matrix_4x4_1_2_3_i_reg_1315,
        matrix_in_1_3_0_val => Matrix_4x4_1_3_0_i_reg_1320,
        matrix_in_1_3_1_val => Matrix_4x4_1_3_1_i_reg_1325,
        matrix_in_1_3_2_val => Matrix_4x4_1_3_2_i_reg_1330,
        matrix_in_1_3_3_val => Matrix_4x4_1_3_3_i_reg_1335,
        matrix_in_2_0_0_val => Matrix_4x4_2_0_0_i_reg_1340,
        matrix_in_2_0_1_val => Matrix_4x4_2_0_1_i_reg_1345,
        matrix_in_2_0_2_val => Matrix_4x4_2_0_2_i_reg_1350,
        matrix_in_2_0_3_val => Matrix_4x4_2_0_3_i_reg_1355,
        matrix_in_2_1_0_val => Matrix_4x4_2_1_0_i_reg_1360,
        matrix_in_2_1_1_val => Matrix_4x4_2_1_1_i_reg_1365,
        matrix_in_2_1_2_val => Matrix_4x4_2_1_2_i_reg_1370,
        matrix_in_2_1_3_val => Matrix_4x4_2_1_3_i_reg_1375,
        matrix_in_2_2_0_val => Matrix_4x4_2_2_0_i_reg_1380,
        matrix_in_2_2_1_val => Matrix_4x4_2_2_1_i_reg_1385,
        matrix_in_2_2_2_val => Matrix_4x4_2_2_2_i_reg_1390,
        matrix_in_2_2_3_val => Matrix_4x4_2_2_3_i_reg_1395,
        matrix_in_2_3_0_val => Matrix_4x4_2_3_0_i_reg_1400,
        matrix_in_2_3_1_val => Matrix_4x4_2_3_1_i_reg_1405,
        matrix_in_2_3_2_val => Matrix_4x4_2_3_2_i_reg_1410,
        matrix_in_2_3_3_val => Matrix_4x4_2_3_3_i_reg_1415,
        ap_return_0 => grp_multiplier_fu_323_ap_return_0,
        ap_return_1 => grp_multiplier_fu_323_ap_return_1,
        ap_return_2 => grp_multiplier_fu_323_ap_return_2,
        ap_return_3 => grp_multiplier_fu_323_ap_return_3,
        ap_return_4 => grp_multiplier_fu_323_ap_return_4,
        ap_return_5 => grp_multiplier_fu_323_ap_return_5,
        ap_return_6 => grp_multiplier_fu_323_ap_return_6,
        ap_return_7 => grp_multiplier_fu_323_ap_return_7,
        ap_return_8 => grp_multiplier_fu_323_ap_return_8,
        ap_return_9 => grp_multiplier_fu_323_ap_return_9,
        ap_return_10 => grp_multiplier_fu_323_ap_return_10,
        ap_return_11 => grp_multiplier_fu_323_ap_return_11,
        ap_return_12 => grp_multiplier_fu_323_ap_return_12,
        ap_return_13 => grp_multiplier_fu_323_ap_return_13,
        ap_return_14 => grp_multiplier_fu_323_ap_return_14,
        ap_return_15 => grp_multiplier_fu_323_ap_return_15,
        ap_ce => grp_multiplier_fu_323_ap_ce);

    call_ret2_i_matrixAdder_fu_359 : component MatrixMult_matrixAdder
    port map (
        ap_ready => call_ret2_i_matrixAdder_fu_359_ap_ready,
        input_matrix_0_0_val => matrix_4x4_out_0_0_i_reg_1420,
        input_matrix_0_1_val => matrix_4x4_out_0_1_i_reg_1425,
        input_matrix_0_2_val => matrix_4x4_out_0_2_i_reg_1430,
        input_matrix_0_3_val => matrix_4x4_out_0_3_i_reg_1435,
        input_matrix_1_0_val => matrix_4x4_out_1_0_i_reg_1440,
        input_matrix_1_1_val => matrix_4x4_out_1_1_i_reg_1445,
        input_matrix_1_2_val => matrix_4x4_out_1_2_i_reg_1450,
        input_matrix_1_3_val => matrix_4x4_out_1_3_i_reg_1455,
        input_matrix_2_0_val => matrix_4x4_out_2_0_i_reg_1460,
        input_matrix_2_1_val => matrix_4x4_out_2_1_i_reg_1465,
        input_matrix_2_2_val => matrix_4x4_out_2_2_i_reg_1470,
        input_matrix_2_3_val => matrix_4x4_out_2_3_i_reg_1475,
        input_matrix_3_0_val => matrix_4x4_out_3_0_i_reg_1480,
        input_matrix_3_1_val => matrix_4x4_out_3_1_i_reg_1485,
        input_matrix_3_2_val => matrix_4x4_out_3_2_i_reg_1490,
        input_matrix_3_3_val => matrix_4x4_out_3_3_i_reg_1495,
        output_matrix_read => Matrix_4x4_final_15_i_out_0_fu_128,
        output_matrix_read_31 => Matrix_4x4_final_14_i_out_0_fu_132,
        output_matrix_read_32 => Matrix_4x4_final_13_i_out_0_fu_136,
        output_matrix_read_33 => Matrix_4x4_final_12_i_out_0_fu_140,
        output_matrix_read_34 => Matrix_4x4_final_11_i_out_0_fu_144,
        output_matrix_read_35 => Matrix_4x4_final_10_i_out_0_fu_148,
        output_matrix_read_36 => Matrix_4x4_final_9_i_out_0_fu_152,
        output_matrix_read_37 => Matrix_4x4_final_8_i_out_0_fu_156,
        output_matrix_read_38 => Matrix_4x4_final_7_i_out_0_fu_160,
        output_matrix_read_39 => Matrix_4x4_final_6_i_out_0_fu_164,
        output_matrix_read_40 => Matrix_4x4_final_5_i_out_0_fu_168,
        output_matrix_read_41 => Matrix_4x4_final_4_i_out_0_fu_172,
        output_matrix_read_42 => Matrix_4x4_final_3_i_out_0_fu_176,
        output_matrix_read_43 => Matrix_4x4_final_2_i_out_0_fu_180,
        output_matrix_read_44 => Matrix_4x4_final_1_i_out_0_fu_184,
        output_matrix_read_45 => Matrix_4x4_final_i_out_0_fu_188,
        ap_return_0 => call_ret2_i_matrixAdder_fu_359_ap_return_0,
        ap_return_1 => call_ret2_i_matrixAdder_fu_359_ap_return_1,
        ap_return_2 => call_ret2_i_matrixAdder_fu_359_ap_return_2,
        ap_return_3 => call_ret2_i_matrixAdder_fu_359_ap_return_3,
        ap_return_4 => call_ret2_i_matrixAdder_fu_359_ap_return_4,
        ap_return_5 => call_ret2_i_matrixAdder_fu_359_ap_return_5,
        ap_return_6 => call_ret2_i_matrixAdder_fu_359_ap_return_6,
        ap_return_7 => call_ret2_i_matrixAdder_fu_359_ap_return_7,
        ap_return_8 => call_ret2_i_matrixAdder_fu_359_ap_return_8,
        ap_return_9 => call_ret2_i_matrixAdder_fu_359_ap_return_9,
        ap_return_10 => call_ret2_i_matrixAdder_fu_359_ap_return_10,
        ap_return_11 => call_ret2_i_matrixAdder_fu_359_ap_return_11,
        ap_return_12 => call_ret2_i_matrixAdder_fu_359_ap_return_12,
        ap_return_13 => call_ret2_i_matrixAdder_fu_359_ap_return_13,
        ap_return_14 => call_ret2_i_matrixAdder_fu_359_ap_return_14,
        ap_return_15 => call_ret2_i_matrixAdder_fu_359_ap_return_15,
        ap_rst => ap_rst);

    flow_control_loop_delay_pipe_U : component MatrixMult_flow_control_loop_delay_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage15,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue,
        ap_loop_exit_ready_delayed => ap_loop_exit_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage13_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage13_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then 
                        ap_block_pp0_stage13_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone_grp0)) then 
                        ap_block_pp0_stage13_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage14_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage14_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then 
                        ap_block_pp0_stage14_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone_grp0)) then 
                        ap_block_pp0_stage14_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage15_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage15_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then 
                        ap_block_pp0_stage15_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone_grp0)) then 
                        ap_block_pp0_stage15_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage3_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage3_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then 
                        ap_block_pp0_stage3_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone_grp0)) then 
                        ap_block_pp0_stage3_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage15)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_0_preg <= ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_10_preg <= ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_11_preg <= ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_12_preg <= ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_13_preg <= ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_14_preg <= ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_15_preg <= ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_1_preg <= ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_2_preg <= ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_3_preg <= ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_4_preg <= ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_5_preg <= ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_6_preg <= ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_7_preg <= ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_8_preg <= ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_return_9_preg <= ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load;
                end if; 
            end if;
        end if;
    end process;


    grp_matrixSlicer_fu_306_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_matrixSlicer_fu_306_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln30_fu_557_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_matrixSlicer_fu_306_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matrixSlicer_fu_306_ap_ready = ap_const_logic_1)) then 
                    grp_matrixSlicer_fu_306_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    Matrix_4x4_final_10_i_out_0_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_10_i_out_0_fu_148 <= p_read18_cast_fu_435_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_10_i_out_0_fu_148 <= Matrix_4x4_final_1_1_ret_i_reg_1525;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_11_i_out_0_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_11_i_out_0_fu_144 <= p_read14_cast_fu_439_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_11_i_out_0_fu_144 <= Matrix_4x4_final_1_0_ret_i_reg_1520;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_12_i_out_0_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_12_i_out_0_fu_140 <= p_read10_cast_fu_443_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_12_i_out_0_fu_140 <= Matrix_4x4_final_0_3_ret_i_reg_1515;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_13_i_out_0_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_13_i_out_0_fu_136 <= p_read6_cast_fu_447_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_13_i_out_0_fu_136 <= Matrix_4x4_final_0_2_ret_i_reg_1510;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_14_i_out_0_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_14_i_out_0_fu_132 <= p_read2_cast_fu_451_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_14_i_out_0_fu_132 <= Matrix_4x4_final_0_1_ret_i_reg_1505;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_15_i_out_0_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_15_i_out_0_fu_128 <= p_read_cast_fu_455_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_15_i_out_0_fu_128 <= Matrix_4x4_final_0_0_ret_i_reg_1500;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_1_i_out_0_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_1_i_out_0_fu_184 <= p_read54_cast_fu_399_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_1_i_out_0_fu_184 <= Matrix_4x4_final_3_2_ret_i_reg_1570;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_2_i_out_0_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_2_i_out_0_fu_180 <= p_read50_cast_fu_403_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_2_i_out_0_fu_180 <= Matrix_4x4_final_3_1_ret_i_reg_1565;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_3_i_out_0_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_3_i_out_0_fu_176 <= p_read46_cast_fu_407_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_3_i_out_0_fu_176 <= Matrix_4x4_final_3_0_ret_i_reg_1560;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_4_i_out_0_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_4_i_out_0_fu_172 <= p_read42_cast_fu_411_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_4_i_out_0_fu_172 <= Matrix_4x4_final_2_3_ret_i_reg_1555;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_5_i_out_0_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_5_i_out_0_fu_168 <= p_read38_cast_fu_415_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_5_i_out_0_fu_168 <= Matrix_4x4_final_2_2_ret_i_reg_1550;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_6_i_out_0_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_6_i_out_0_fu_164 <= p_read34_cast_fu_419_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_6_i_out_0_fu_164 <= Matrix_4x4_final_2_1_ret_i_reg_1545;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_7_i_out_0_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_7_i_out_0_fu_160 <= p_read30_cast_fu_423_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_7_i_out_0_fu_160 <= Matrix_4x4_final_2_0_ret_i_reg_1540;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_8_i_out_0_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_8_i_out_0_fu_156 <= p_read26_cast_fu_427_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_8_i_out_0_fu_156 <= Matrix_4x4_final_1_3_ret_i_reg_1535;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_9_i_out_0_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_9_i_out_0_fu_152 <= p_read22_cast_fu_431_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_9_i_out_0_fu_152 <= Matrix_4x4_final_1_2_ret_i_reg_1530;
            end if; 
        end if;
    end process;

    Matrix_4x4_final_i_out_0_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                Matrix_4x4_final_i_out_0_fu_188 <= p_read58_cast_fu_395_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Matrix_4x4_final_i_out_0_fu_188 <= Matrix_4x4_final_3_3_ret_i_reg_1575;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    i_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                i_fu_124 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                i_fu_124 <= add_ln30_reg_1255;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage12_11001_grp7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then
                Matrix_4x4_1_0_0_i_reg_1260 <= grp_matrixSlicer_fu_306_ap_return_0;
                Matrix_4x4_1_0_1_i_reg_1265 <= grp_matrixSlicer_fu_306_ap_return_1;
                Matrix_4x4_1_0_2_i_reg_1270 <= grp_matrixSlicer_fu_306_ap_return_2;
                Matrix_4x4_1_0_3_i_reg_1275 <= grp_matrixSlicer_fu_306_ap_return_3;
                Matrix_4x4_1_1_0_i_reg_1280 <= grp_matrixSlicer_fu_306_ap_return_4;
                Matrix_4x4_1_1_1_i_reg_1285 <= grp_matrixSlicer_fu_306_ap_return_5;
                Matrix_4x4_1_1_2_i_reg_1290 <= grp_matrixSlicer_fu_306_ap_return_6;
                Matrix_4x4_1_1_3_i_reg_1295 <= grp_matrixSlicer_fu_306_ap_return_7;
                Matrix_4x4_1_2_0_i_reg_1300 <= grp_matrixSlicer_fu_306_ap_return_8;
                Matrix_4x4_1_2_1_i_reg_1305 <= grp_matrixSlicer_fu_306_ap_return_9;
                Matrix_4x4_1_2_2_i_reg_1310 <= grp_matrixSlicer_fu_306_ap_return_10;
                Matrix_4x4_1_2_3_i_reg_1315 <= grp_matrixSlicer_fu_306_ap_return_11;
                Matrix_4x4_1_3_0_i_reg_1320 <= grp_matrixSlicer_fu_306_ap_return_12;
                Matrix_4x4_1_3_1_i_reg_1325 <= grp_matrixSlicer_fu_306_ap_return_13;
                Matrix_4x4_1_3_2_i_reg_1330 <= grp_matrixSlicer_fu_306_ap_return_14;
                Matrix_4x4_1_3_3_i_reg_1335 <= grp_matrixSlicer_fu_306_ap_return_15;
                Matrix_4x4_2_0_0_i_reg_1340 <= grp_matrixSlicer_fu_306_ap_return_16;
                Matrix_4x4_2_0_1_i_reg_1345 <= grp_matrixSlicer_fu_306_ap_return_17;
                Matrix_4x4_2_0_2_i_reg_1350 <= grp_matrixSlicer_fu_306_ap_return_18;
                Matrix_4x4_2_0_3_i_reg_1355 <= grp_matrixSlicer_fu_306_ap_return_19;
                Matrix_4x4_2_1_0_i_reg_1360 <= grp_matrixSlicer_fu_306_ap_return_20;
                Matrix_4x4_2_1_1_i_reg_1365 <= grp_matrixSlicer_fu_306_ap_return_21;
                Matrix_4x4_2_1_2_i_reg_1370 <= grp_matrixSlicer_fu_306_ap_return_22;
                Matrix_4x4_2_1_3_i_reg_1375 <= grp_matrixSlicer_fu_306_ap_return_23;
                Matrix_4x4_2_2_0_i_reg_1380 <= grp_matrixSlicer_fu_306_ap_return_24;
                Matrix_4x4_2_2_1_i_reg_1385 <= grp_matrixSlicer_fu_306_ap_return_25;
                Matrix_4x4_2_2_2_i_reg_1390 <= grp_matrixSlicer_fu_306_ap_return_26;
                Matrix_4x4_2_2_3_i_reg_1395 <= grp_matrixSlicer_fu_306_ap_return_27;
                Matrix_4x4_2_3_0_i_reg_1400 <= grp_matrixSlicer_fu_306_ap_return_28;
                Matrix_4x4_2_3_1_i_reg_1405 <= grp_matrixSlicer_fu_306_ap_return_29;
                Matrix_4x4_2_3_2_i_reg_1410 <= grp_matrixSlicer_fu_306_ap_return_30;
                Matrix_4x4_2_3_3_i_reg_1415 <= grp_matrixSlicer_fu_306_ap_return_31;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                Matrix_4x4_final_0_0_ret_i_reg_1500 <= call_ret2_i_matrixAdder_fu_359_ap_return_0;
                Matrix_4x4_final_0_1_ret_i_reg_1505 <= call_ret2_i_matrixAdder_fu_359_ap_return_1;
                Matrix_4x4_final_0_2_ret_i_reg_1510 <= call_ret2_i_matrixAdder_fu_359_ap_return_2;
                Matrix_4x4_final_0_3_ret_i_reg_1515 <= call_ret2_i_matrixAdder_fu_359_ap_return_3;
                Matrix_4x4_final_1_0_ret_i_reg_1520 <= call_ret2_i_matrixAdder_fu_359_ap_return_4;
                Matrix_4x4_final_1_1_ret_i_reg_1525 <= call_ret2_i_matrixAdder_fu_359_ap_return_5;
                Matrix_4x4_final_1_2_ret_i_reg_1530 <= call_ret2_i_matrixAdder_fu_359_ap_return_6;
                Matrix_4x4_final_1_3_ret_i_reg_1535 <= call_ret2_i_matrixAdder_fu_359_ap_return_7;
                Matrix_4x4_final_2_0_ret_i_reg_1540 <= call_ret2_i_matrixAdder_fu_359_ap_return_8;
                Matrix_4x4_final_2_1_ret_i_reg_1545 <= call_ret2_i_matrixAdder_fu_359_ap_return_9;
                Matrix_4x4_final_2_2_ret_i_reg_1550 <= call_ret2_i_matrixAdder_fu_359_ap_return_10;
                Matrix_4x4_final_2_3_ret_i_reg_1555 <= call_ret2_i_matrixAdder_fu_359_ap_return_11;
                Matrix_4x4_final_3_0_ret_i_reg_1560 <= call_ret2_i_matrixAdder_fu_359_ap_return_12;
                Matrix_4x4_final_3_1_ret_i_reg_1565 <= call_ret2_i_matrixAdder_fu_359_ap_return_13;
                Matrix_4x4_final_3_2_ret_i_reg_1570 <= call_ret2_i_matrixAdder_fu_359_ap_return_14;
                Matrix_4x4_final_3_3_ret_i_reg_1575 <= call_ret2_i_matrixAdder_fu_359_ap_return_15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln30_reg_1255 <= add_ln30_fu_563_p2;
                icmp_ln30_reg_1251 <= icmp_ln30_fu_557_p2;
                icmp_ln30_reg_1251_pp0_iter1_reg <= icmp_ln30_reg_1251;
                size_read_reg_1246 <= size;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                matrix_4x4_out_0_0_i_reg_1420 <= grp_multiplier_fu_323_ap_return_0;
                matrix_4x4_out_0_1_i_reg_1425 <= grp_multiplier_fu_323_ap_return_1;
                matrix_4x4_out_0_2_i_reg_1430 <= grp_multiplier_fu_323_ap_return_2;
                matrix_4x4_out_0_3_i_reg_1435 <= grp_multiplier_fu_323_ap_return_3;
                matrix_4x4_out_1_0_i_reg_1440 <= grp_multiplier_fu_323_ap_return_4;
                matrix_4x4_out_1_1_i_reg_1445 <= grp_multiplier_fu_323_ap_return_5;
                matrix_4x4_out_1_2_i_reg_1450 <= grp_multiplier_fu_323_ap_return_6;
                matrix_4x4_out_1_3_i_reg_1455 <= grp_multiplier_fu_323_ap_return_7;
                matrix_4x4_out_2_0_i_reg_1460 <= grp_multiplier_fu_323_ap_return_8;
                matrix_4x4_out_2_1_i_reg_1465 <= grp_multiplier_fu_323_ap_return_9;
                matrix_4x4_out_2_2_i_reg_1470 <= grp_multiplier_fu_323_ap_return_10;
                matrix_4x4_out_2_3_i_reg_1475 <= grp_multiplier_fu_323_ap_return_11;
                matrix_4x4_out_3_0_i_reg_1480 <= grp_multiplier_fu_323_ap_return_12;
                matrix_4x4_out_3_1_i_reg_1485 <= grp_multiplier_fu_323_ap_return_13;
                matrix_4x4_out_3_2_i_reg_1490 <= grp_multiplier_fu_323_ap_return_14;
                matrix_4x4_out_3_3_i_reg_1495 <= grp_multiplier_fu_323_ap_return_15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                matrix_in_1_read_reg_1241 <= matrix_in_1;
                matrix_in_2_read_reg_1236 <= matrix_in_2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage15_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter1_stage4, ap_idle_pp0_0to0, ap_idle_pp0_1to2, ap_done_pending_pp0, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln30_fu_563_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv14_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state1_pp0_stage0_iter0, ap_block_state17_pp0_stage0_iter1_grp11)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter1_grp11)));
    end process;


    ap_block_pp0_stage0_11001_grp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001_grp0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp140_grp11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call20)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp140_grp11 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call20));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp188_grp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call53)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp188_grp0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call53));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp140_grp11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state1_pp0_stage0_iter0, ap_block_state17_pp0_stage0_iter1_grp11)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter1_grp11)));
    end process;


    ap_block_pp0_stage0_subdone_grp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone_grp0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;

        ap_block_pp0_stage10_11001_ignoreCallOp134_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_ignoreCallOp134_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_ignoreCallOp150_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state11_pp0_stage10_iter0_grp5, ap_block_state27_pp0_stage10_iter1_grp5)
    begin
                ap_block_pp0_stage10_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0_grp5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage10_iter1_grp5)));
    end process;

        ap_block_pp0_stage11_11001_ignoreCallOp135_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_ignoreCallOp135_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_ignoreCallOp151_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state12_pp0_stage11_iter0_grp6, ap_block_state28_pp0_stage11_iter1_grp6)
    begin
                ap_block_pp0_stage11_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0_grp6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage11_iter1_grp6)));
    end process;


    ap_block_pp0_stage12_11001_grp7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state13_pp0_stage12_iter0_grp7, ap_block_state29_pp0_stage12_iter1_grp7)
    begin
                ap_block_pp0_stage12_11001_grp7 <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0_grp7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage12_iter1_grp7)));
    end process;

        ap_block_pp0_stage12_11001_ignoreCallOp136_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_ignoreCallOp136_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_ignoreCallOp152_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state13_pp0_stage12_iter0_grp7, ap_block_state29_pp0_stage12_iter1_grp7)
    begin
                ap_block_pp0_stage12_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0_grp7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage12_iter1_grp7)));
    end process;

        ap_block_pp0_stage13_11001_ignoreCallOp137_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_ignoreCallOp185_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state14_pp0_stage13_iter0_ignore_call53_grp8)
    begin
                ap_block_pp0_stage13_11001_ignoreCallOp185 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0_ignore_call53_grp8));
    end process;

        ap_block_pp0_stage13_11001_ignoreCallOp185_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_ignoreCallOp137_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_ignoreCallOp185_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state14_pp0_stage13_iter0_grp8)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0_grp8));
    end process;

        ap_block_pp0_stage13_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001_ignoreCallOp138_grp9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_ignoreCallOp186_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state15_pp0_stage14_iter0_ignore_call53_grp9)
    begin
                ap_block_pp0_stage14_11001_ignoreCallOp186 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0_ignore_call53_grp9));
    end process;

        ap_block_pp0_stage14_11001_ignoreCallOp186_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_grp9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_ignoreCallOp138_grp9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state15_pp0_stage14_iter0_grp9)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0_grp9));
    end process;

        ap_block_pp0_stage14_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_block_state16_pp0_stage15_iter0_grp10, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_grp10));
    end process;

        ap_block_pp0_stage15_11001_ignoreCallOp139_grp10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_ignoreCallOp187_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state16_pp0_stage15_iter0_ignore_call53_grp10)
    begin
                ap_block_pp0_stage15_11001_ignoreCallOp187 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_ignore_call53_grp10));
    end process;

        ap_block_pp0_stage15_11001_ignoreCallOp187_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_grp10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_ignoreCallOp139_grp10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_subdone_assign_proc : process(ap_block_state16_pp0_stage15_iter0_grp10, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_grp10));
    end process;

        ap_block_pp0_stage15_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp124_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_ignoreCallOp189_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state18_pp0_stage1_iter1_ignore_call53_grp12)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp189 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage1_iter1_ignore_call53_grp12));
    end process;

        ap_block_pp0_stage1_11001_ignoreCallOp189_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp124_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp141_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state18_pp0_stage1_iter1_grp12)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage1_iter1_grp12));
    end process;

        ap_block_pp0_stage1_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp126_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_ignoreCallOp190_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state19_pp0_stage2_iter1_ignore_call53_grp13)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp190 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage2_iter1_ignore_call53_grp13));
    end process;

        ap_block_pp0_stage2_11001_ignoreCallOp190_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_ignoreCallOp126_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_ignoreCallOp142_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state19_pp0_stage2_iter1_grp13)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage2_iter1_grp13));
    end process;

        ap_block_pp0_stage2_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp127_grp14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_grp14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_ignoreCallOp143_grp14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_ignoreCallOp223_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state20_pp0_stage3_iter1_grp14)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage3_iter1_grp14));
    end process;

        ap_block_pp0_stage3_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state21_pp0_stage4_iter1_grp15)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage4_iter1_grp15));
    end process;

        ap_block_pp0_stage4_11001_ignoreCallOp128_grp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_grp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_ignoreCallOp144_grp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state21_pp0_stage4_iter1_grp15)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage4_iter1_grp15));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp129_grp16_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp129_grp16 <= (ap_done_reg = ap_const_logic_1);
    end process;

        ap_block_pp0_stage5_grp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_ignoreCallOp145_grp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state22_pp0_stage5_iter1_grp16)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage5_iter1_grp16)));
    end process;

        ap_block_pp0_stage6_11001_ignoreCallOp130_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_ignoreCallOp130_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_ignoreCallOp146_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state7_pp0_stage6_iter0_grp1, ap_block_state23_pp0_stage6_iter1_grp1)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0_grp1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage6_iter1_grp1)));
    end process;

        ap_block_pp0_stage7_11001_ignoreCallOp131_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_ignoreCallOp131_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_ignoreCallOp147_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state8_pp0_stage7_iter0_grp2, ap_block_state24_pp0_stage7_iter1_grp2)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0_grp2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage7_iter1_grp2)));
    end process;

        ap_block_pp0_stage8_11001_ignoreCallOp132_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_ignoreCallOp132_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_ignoreCallOp148_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state9_pp0_stage8_iter0_grp3, ap_block_state25_pp0_stage8_iter1_grp3)
    begin
                ap_block_pp0_stage8_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0_grp3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage8_iter1_grp3)));
    end process;

        ap_block_pp0_stage9_11001_ignoreCallOp133_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_ignoreCallOp133_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_ignoreCallOp149_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, ap_block_state10_pp0_stage9_iter0_grp4, ap_block_state26_pp0_stage9_iter1_grp4)
    begin
                ap_block_pp0_stage9_subdone <= (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0_grp4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage9_iter1_grp4)));
    end process;


    ap_block_state10_pp0_stage9_iter0_grp4_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state10_pp0_stage9_iter0_grp4 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state11_pp0_stage10_iter0_grp5_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state11_pp0_stage10_iter0_grp5 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state12_pp0_stage11_iter0_grp6_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state12_pp0_stage11_iter0_grp6 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state13_pp0_stage12_iter0_grp7_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state13_pp0_stage12_iter0_grp7 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state14_pp0_stage13_iter0_grp8_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state14_pp0_stage13_iter0_grp8 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state14_pp0_stage13_iter0_ignore_call53_grp8_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state14_pp0_stage13_iter0_ignore_call53_grp8 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state15_pp0_stage14_iter0_grp9_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state15_pp0_stage14_iter0_grp9 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state15_pp0_stage14_iter0_ignore_call53_grp9_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state15_pp0_stage14_iter0_ignore_call53_grp9 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state16_pp0_stage15_iter0_grp10_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state16_pp0_stage15_iter0_grp10 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state16_pp0_stage15_iter0_ignore_call53_grp10_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state16_pp0_stage15_iter0_ignore_call53_grp10 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state17_pp0_stage0_iter1_grp11_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state17_pp0_stage0_iter1_grp11 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state18_pp0_stage1_iter1_grp12_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state18_pp0_stage1_iter1_grp12 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage1_iter1_ignore_call53_grp12_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state18_pp0_stage1_iter1_ignore_call53_grp12 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage2_iter1_grp13_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state19_pp0_stage2_iter1_grp13 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage2_iter1_ignore_call53_grp13_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state19_pp0_stage2_iter1_ignore_call53_grp13 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call20_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call20 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call53_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call53 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state20_pp0_stage3_iter1_grp14_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state20_pp0_stage3_iter1_grp14 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage4_iter1_grp15_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state21_pp0_stage4_iter1_grp15 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage5_iter1_grp16_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state22_pp0_stage5_iter1_grp16 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state23_pp0_stage6_iter1_grp1_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state23_pp0_stage6_iter1_grp1 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage7_iter1_grp2_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state24_pp0_stage7_iter1_grp2 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state25_pp0_stage8_iter1_grp3_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state25_pp0_stage8_iter1_grp3 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state26_pp0_stage9_iter1_grp4_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state26_pp0_stage9_iter1_grp4 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state27_pp0_stage10_iter1_grp5_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state27_pp0_stage10_iter1_grp5 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state28_pp0_stage11_iter1_grp6_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state28_pp0_stage11_iter1_grp6 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state29_pp0_stage12_iter1_grp7_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R)
    begin
                ap_block_state29_pp0_stage12_iter1_grp7 <= (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage6_iter0_grp1_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state7_pp0_stage6_iter0_grp1 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state8_pp0_stage7_iter0_grp2_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state8_pp0_stage7_iter0_grp2 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_block_state9_pp0_stage8_iter0_grp3_assign_proc : process(grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251)
    begin
                ap_block_state9_pp0_stage8_iter0_grp3 <= ((icmp_ln30_reg_1251 = ap_const_lv1_0) and (((grp_matrixSlicer_fu_306_matrix_b_blk_n_R and grp_matrixSlicer_fu_306_matrix_b_blk_n_AR) = ap_const_logic_0) or ((grp_matrixSlicer_fu_306_matrix_a_blk_n_R and grp_matrixSlicer_fu_306_matrix_a_blk_n_AR) = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter0_stage15_assign_proc : process(ap_CS_fsm_pp0_stage15, icmp_ln30_reg_1251, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage15_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            ap_condition_exit_pp0_iter0_stage15 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln30_reg_1251_pp0_iter1_reg, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (icmp_ln30_reg_1251_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_done_reg, ap_block_pp0_stage4_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_loop_exit_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_loop_exit_done_int <= ap_const_logic_1;
        else 
            ap_loop_exit_done_int <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage15;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage15_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load, ap_loop_exit_ready_pp0_iter1_reg, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_0 <= ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_1 <= ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load, ap_return_10_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_10 <= ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load, ap_return_11_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_11 <= ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load, ap_return_12_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_12 <= ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load, ap_return_13_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_13 <= ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load, ap_return_14_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_14 <= ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load;
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load, ap_return_15_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_15 <= ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load;
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_2 <= ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_3 <= ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load, ap_return_4_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_4 <= ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load, ap_return_5_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_5 <= ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load, ap_return_6_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_6 <= ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load, ap_return_7_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_7 <= ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load, ap_return_8_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_8 <= ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_loop_exit_ready_pp0_iter1_reg, ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load, ap_return_9_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_return_9 <= ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_1_1_ret_i_reg_1525, ap_block_pp0_stage4, Matrix_4x4_final_10_i_out_0_fu_148)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load <= Matrix_4x4_final_1_1_ret_i_reg_1525;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_10_i_out_0_load <= Matrix_4x4_final_10_i_out_0_fu_148;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_1_0_ret_i_reg_1520, ap_block_pp0_stage4, Matrix_4x4_final_11_i_out_0_fu_144)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load <= Matrix_4x4_final_1_0_ret_i_reg_1520;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_11_i_out_0_load <= Matrix_4x4_final_11_i_out_0_fu_144;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_0_3_ret_i_reg_1515, ap_block_pp0_stage4, Matrix_4x4_final_12_i_out_0_fu_140)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load <= Matrix_4x4_final_0_3_ret_i_reg_1515;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_12_i_out_0_load <= Matrix_4x4_final_12_i_out_0_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_0_2_ret_i_reg_1510, ap_block_pp0_stage4, Matrix_4x4_final_13_i_out_0_fu_136)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load <= Matrix_4x4_final_0_2_ret_i_reg_1510;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_13_i_out_0_load <= Matrix_4x4_final_13_i_out_0_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_0_1_ret_i_reg_1505, ap_block_pp0_stage4, Matrix_4x4_final_14_i_out_0_fu_132)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load <= Matrix_4x4_final_0_1_ret_i_reg_1505;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_14_i_out_0_load <= Matrix_4x4_final_14_i_out_0_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_0_0_ret_i_reg_1500, Matrix_4x4_final_15_i_out_0_fu_128, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load <= Matrix_4x4_final_0_0_ret_i_reg_1500;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_15_i_out_0_load <= Matrix_4x4_final_15_i_out_0_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_3_2_ret_i_reg_1570, ap_block_pp0_stage4, Matrix_4x4_final_1_i_out_0_fu_184)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load <= Matrix_4x4_final_3_2_ret_i_reg_1570;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_1_i_out_0_load <= Matrix_4x4_final_1_i_out_0_fu_184;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_3_1_ret_i_reg_1565, ap_block_pp0_stage4, Matrix_4x4_final_2_i_out_0_fu_180)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load <= Matrix_4x4_final_3_1_ret_i_reg_1565;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_2_i_out_0_load <= Matrix_4x4_final_2_i_out_0_fu_180;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_3_0_ret_i_reg_1560, ap_block_pp0_stage4, Matrix_4x4_final_3_i_out_0_fu_176)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load <= Matrix_4x4_final_3_0_ret_i_reg_1560;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_3_i_out_0_load <= Matrix_4x4_final_3_i_out_0_fu_176;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_2_3_ret_i_reg_1555, ap_block_pp0_stage4, Matrix_4x4_final_4_i_out_0_fu_172)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load <= Matrix_4x4_final_2_3_ret_i_reg_1555;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_4_i_out_0_load <= Matrix_4x4_final_4_i_out_0_fu_172;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_2_2_ret_i_reg_1550, ap_block_pp0_stage4, Matrix_4x4_final_5_i_out_0_fu_168)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load <= Matrix_4x4_final_2_2_ret_i_reg_1550;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_5_i_out_0_load <= Matrix_4x4_final_5_i_out_0_fu_168;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_2_1_ret_i_reg_1545, ap_block_pp0_stage4, Matrix_4x4_final_6_i_out_0_fu_164)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load <= Matrix_4x4_final_2_1_ret_i_reg_1545;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_6_i_out_0_load <= Matrix_4x4_final_6_i_out_0_fu_164;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_2_0_ret_i_reg_1540, ap_block_pp0_stage4, Matrix_4x4_final_7_i_out_0_fu_160)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load <= Matrix_4x4_final_2_0_ret_i_reg_1540;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_7_i_out_0_load <= Matrix_4x4_final_7_i_out_0_fu_160;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_1_3_ret_i_reg_1535, ap_block_pp0_stage4, Matrix_4x4_final_8_i_out_0_fu_156)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load <= Matrix_4x4_final_1_3_ret_i_reg_1535;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_8_i_out_0_load <= Matrix_4x4_final_8_i_out_0_fu_156;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_1_2_ret_i_reg_1530, ap_block_pp0_stage4, Matrix_4x4_final_9_i_out_0_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load <= Matrix_4x4_final_1_2_ret_i_reg_1530;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_9_i_out_0_load <= Matrix_4x4_final_9_i_out_0_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, Matrix_4x4_final_3_3_ret_i_reg_1575, ap_block_pp0_stage4, Matrix_4x4_final_i_out_0_fu_188)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load <= Matrix_4x4_final_3_3_ret_i_reg_1575;
        else 
            ap_sig_allocacmp_Matrix_4x4_final_i_out_0_load <= Matrix_4x4_final_i_out_0_fu_188;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, i_fu_124, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv14_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_124;
        end if; 
    end process;


    grp_matrixSlicer_fu_306_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage1_11001_ignoreCallOp124_grp12, ap_block_pp0_stage2_11001_ignoreCallOp126_grp13, ap_block_pp0_stage3_11001_ignoreCallOp127_grp14, ap_block_pp0_stage4_11001_ignoreCallOp128_grp15, ap_block_pp0_stage5_11001_ignoreCallOp129_grp16, ap_block_pp0_stage6_11001_ignoreCallOp130_grp1, ap_block_pp0_stage7_11001_ignoreCallOp131_grp2, ap_block_pp0_stage8_11001_ignoreCallOp132_grp3, ap_block_pp0_stage9_11001_ignoreCallOp133_grp4, ap_block_pp0_stage10_11001_ignoreCallOp134_grp5, ap_block_pp0_stage11_11001_ignoreCallOp135_grp6, ap_block_pp0_stage12_11001_ignoreCallOp136_grp7, ap_block_pp0_stage13_11001_ignoreCallOp137_grp8, ap_block_pp0_stage14_11001_ignoreCallOp138_grp9, ap_block_pp0_stage15_11001_ignoreCallOp139_grp10, ap_block_pp0_stage0_11001_ignoreCallOp140_grp11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp140_grp11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp139_grp10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp138_grp9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp137_grp8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001_ignoreCallOp136_grp7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001_ignoreCallOp135_grp6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001_ignoreCallOp134_grp5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001_ignoreCallOp133_grp4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001_ignoreCallOp132_grp3) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp131_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp130_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp129_grp16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp128_grp15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp127_grp14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp126_grp13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp124_grp12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_matrixSlicer_fu_306_ap_ce <= ap_const_logic_1;
        else 
            grp_matrixSlicer_fu_306_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_matrixSlicer_fu_306_ap_start <= grp_matrixSlicer_fu_306_ap_start_reg;

    grp_multiplier_fu_323_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage13_11001_ignoreCallOp185_grp0, ap_block_pp0_stage13_subdone_grp0_done_reg, ap_block_pp0_stage14_11001_ignoreCallOp186_grp0, ap_block_pp0_stage14_subdone_grp0_done_reg, ap_block_pp0_stage15_11001_ignoreCallOp187_grp0, ap_block_pp0_stage15_subdone_grp0_done_reg, ap_block_pp0_stage0_11001_ignoreCallOp188_grp0, ap_block_pp0_stage1_11001_ignoreCallOp189_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_ignoreCallOp190_grp0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp190_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp188_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp189_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp187_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp186_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone_grp0_done_reg) and 
    (ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp185_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_multiplier_fu_323_ap_ce <= ap_const_logic_1;
        else 
            grp_multiplier_fu_323_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln30_fu_557_p2 <= "1" when (ap_sig_allocacmp_i_load = tmp_fu_459_p4) else "0";
    m_axi_matrix_a_0_ARADDR <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARADDR;
    m_axi_matrix_a_0_ARBURST <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARBURST;
    m_axi_matrix_a_0_ARCACHE <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARCACHE;
    m_axi_matrix_a_0_ARID <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARID;
    m_axi_matrix_a_0_ARLEN <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLEN;
    m_axi_matrix_a_0_ARLOCK <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARLOCK;
    m_axi_matrix_a_0_ARPROT <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARPROT;
    m_axi_matrix_a_0_ARQOS <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARQOS;
    m_axi_matrix_a_0_ARREGION <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARREGION;
    m_axi_matrix_a_0_ARSIZE <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARSIZE;
    m_axi_matrix_a_0_ARUSER <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARUSER;

    m_axi_matrix_a_0_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARVALID, ap_block_pp0_stage6_ignoreCallOp130_grp1, ap_block_pp0_stage7_ignoreCallOp131_grp2, ap_block_pp0_stage8_ignoreCallOp132_grp3, ap_block_pp0_stage9_ignoreCallOp133_grp4, ap_block_pp0_stage10_ignoreCallOp134_grp5, ap_block_pp0_stage11_ignoreCallOp135_grp6, ap_block_pp0_stage12_ignoreCallOp136_grp7, ap_block_pp0_stage13_ignoreCallOp137_grp8, ap_block_pp0_stage14_ignoreCallOp138_grp9, ap_block_pp0_stage15_ignoreCallOp139_grp10, ap_block_pp0_stage0_ignoreCallOp140_grp11, ap_block_pp0_stage1_ignoreCallOp141_grp12, ap_block_pp0_stage2_ignoreCallOp142_grp13, ap_block_pp0_stage3_ignoreCallOp143_grp14, ap_block_pp0_stage4_ignoreCallOp144_grp15, ap_block_pp0_stage5_ignoreCallOp145_grp16, ap_block_pp0_stage6_ignoreCallOp146_grp1, ap_block_pp0_stage7_ignoreCallOp147_grp2, ap_block_pp0_stage8_ignoreCallOp148_grp3, ap_block_pp0_stage9_ignoreCallOp149_grp4, ap_block_pp0_stage10_ignoreCallOp150_grp5, ap_block_pp0_stage11_ignoreCallOp151_grp6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp151_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp150_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp149_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp148_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp147_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp146_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp145_grp16) 
    and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp144_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp143_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp142_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp141_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp140_grp11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_ignoreCallOp139_grp10) and (ap_enable_reg_pp0_iter0_reg = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_ignoreCallOp138_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp137_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp136_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp135_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp134_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp133_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp132_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp131_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp130_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            m_axi_matrix_a_0_ARVALID <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_ARVALID;
        else 
            m_axi_matrix_a_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_matrix_a_0_AWADDR <= ap_const_lv64_0;
    m_axi_matrix_a_0_AWBURST <= ap_const_lv2_0;
    m_axi_matrix_a_0_AWCACHE <= ap_const_lv4_0;
    m_axi_matrix_a_0_AWID <= ap_const_lv1_0;
    m_axi_matrix_a_0_AWLEN <= ap_const_lv32_0;
    m_axi_matrix_a_0_AWLOCK <= ap_const_lv2_0;
    m_axi_matrix_a_0_AWPROT <= ap_const_lv3_0;
    m_axi_matrix_a_0_AWQOS <= ap_const_lv4_0;
    m_axi_matrix_a_0_AWREGION <= ap_const_lv4_0;
    m_axi_matrix_a_0_AWSIZE <= ap_const_lv3_0;
    m_axi_matrix_a_0_AWUSER <= ap_const_lv1_0;
    m_axi_matrix_a_0_AWVALID <= ap_const_logic_0;
    m_axi_matrix_a_0_BREADY <= ap_const_logic_0;

    m_axi_matrix_a_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_matrixSlicer_fu_306_m_axi_matrix_a_0_RREADY, ap_block_pp0_stage12_ignoreCallOp136_grp7, ap_block_pp0_stage13_ignoreCallOp137_grp8, ap_block_pp0_stage14_ignoreCallOp138_grp9, ap_block_pp0_stage15_ignoreCallOp139_grp10, ap_block_pp0_stage0_ignoreCallOp140_grp11, ap_block_pp0_stage1_ignoreCallOp141_grp12, ap_block_pp0_stage2_ignoreCallOp142_grp13, ap_block_pp0_stage3_ignoreCallOp143_grp14, ap_block_pp0_stage4_ignoreCallOp144_grp15, ap_block_pp0_stage5_ignoreCallOp145_grp16, ap_block_pp0_stage6_ignoreCallOp146_grp1, ap_block_pp0_stage7_ignoreCallOp147_grp2, ap_block_pp0_stage8_ignoreCallOp148_grp3, ap_block_pp0_stage9_ignoreCallOp149_grp4, ap_block_pp0_stage10_ignoreCallOp150_grp5, ap_block_pp0_stage11_ignoreCallOp151_grp6, ap_block_pp0_stage12_ignoreCallOp152_grp7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp152_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp151_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp150_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp149_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp148_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp147_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp146_grp1) 
    and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp145_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp144_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp143_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp142_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp141_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp140_grp11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_ignoreCallOp139_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_ignoreCallOp138_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp137_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp136_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
            m_axi_matrix_a_0_RREADY <= grp_matrixSlicer_fu_306_m_axi_matrix_a_0_RREADY;
        else 
            m_axi_matrix_a_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_matrix_a_0_WDATA <= ap_const_lv16_0;
    m_axi_matrix_a_0_WID <= ap_const_lv1_0;
    m_axi_matrix_a_0_WLAST <= ap_const_logic_0;
    m_axi_matrix_a_0_WSTRB <= ap_const_lv2_0;
    m_axi_matrix_a_0_WUSER <= ap_const_lv1_0;
    m_axi_matrix_a_0_WVALID <= ap_const_logic_0;
    m_axi_matrix_b_0_ARADDR <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARADDR;
    m_axi_matrix_b_0_ARBURST <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARBURST;
    m_axi_matrix_b_0_ARCACHE <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARCACHE;
    m_axi_matrix_b_0_ARID <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARID;
    m_axi_matrix_b_0_ARLEN <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLEN;
    m_axi_matrix_b_0_ARLOCK <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARLOCK;
    m_axi_matrix_b_0_ARPROT <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARPROT;
    m_axi_matrix_b_0_ARQOS <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARQOS;
    m_axi_matrix_b_0_ARREGION <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARREGION;
    m_axi_matrix_b_0_ARSIZE <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARSIZE;
    m_axi_matrix_b_0_ARUSER <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARUSER;

    m_axi_matrix_b_0_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARVALID, ap_block_pp0_stage6_ignoreCallOp130_grp1, ap_block_pp0_stage7_ignoreCallOp131_grp2, ap_block_pp0_stage8_ignoreCallOp132_grp3, ap_block_pp0_stage9_ignoreCallOp133_grp4, ap_block_pp0_stage10_ignoreCallOp134_grp5, ap_block_pp0_stage11_ignoreCallOp135_grp6, ap_block_pp0_stage12_ignoreCallOp136_grp7, ap_block_pp0_stage13_ignoreCallOp137_grp8, ap_block_pp0_stage14_ignoreCallOp138_grp9, ap_block_pp0_stage15_ignoreCallOp139_grp10, ap_block_pp0_stage0_ignoreCallOp140_grp11, ap_block_pp0_stage1_ignoreCallOp141_grp12, ap_block_pp0_stage2_ignoreCallOp142_grp13, ap_block_pp0_stage3_ignoreCallOp143_grp14, ap_block_pp0_stage4_ignoreCallOp144_grp15, ap_block_pp0_stage5_ignoreCallOp145_grp16, ap_block_pp0_stage6_ignoreCallOp146_grp1, ap_block_pp0_stage7_ignoreCallOp147_grp2, ap_block_pp0_stage8_ignoreCallOp148_grp3, ap_block_pp0_stage9_ignoreCallOp149_grp4, ap_block_pp0_stage10_ignoreCallOp150_grp5, ap_block_pp0_stage11_ignoreCallOp151_grp6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp151_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp150_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp149_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp148_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp147_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp146_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp145_grp16) 
    and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp144_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp143_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp142_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp141_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp140_grp11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_ignoreCallOp139_grp10) and (ap_enable_reg_pp0_iter0_reg = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_ignoreCallOp138_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp137_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp136_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp135_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp134_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp133_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp132_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp131_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp130_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            m_axi_matrix_b_0_ARVALID <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_ARVALID;
        else 
            m_axi_matrix_b_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_matrix_b_0_AWADDR <= ap_const_lv64_0;
    m_axi_matrix_b_0_AWBURST <= ap_const_lv2_0;
    m_axi_matrix_b_0_AWCACHE <= ap_const_lv4_0;
    m_axi_matrix_b_0_AWID <= ap_const_lv1_0;
    m_axi_matrix_b_0_AWLEN <= ap_const_lv32_0;
    m_axi_matrix_b_0_AWLOCK <= ap_const_lv2_0;
    m_axi_matrix_b_0_AWPROT <= ap_const_lv3_0;
    m_axi_matrix_b_0_AWQOS <= ap_const_lv4_0;
    m_axi_matrix_b_0_AWREGION <= ap_const_lv4_0;
    m_axi_matrix_b_0_AWSIZE <= ap_const_lv3_0;
    m_axi_matrix_b_0_AWUSER <= ap_const_lv1_0;
    m_axi_matrix_b_0_AWVALID <= ap_const_logic_0;
    m_axi_matrix_b_0_BREADY <= ap_const_logic_0;

    m_axi_matrix_b_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_matrixSlicer_fu_306_m_axi_matrix_b_0_RREADY, ap_block_pp0_stage12_ignoreCallOp136_grp7, ap_block_pp0_stage13_ignoreCallOp137_grp8, ap_block_pp0_stage14_ignoreCallOp138_grp9, ap_block_pp0_stage15_ignoreCallOp139_grp10, ap_block_pp0_stage0_ignoreCallOp140_grp11, ap_block_pp0_stage1_ignoreCallOp141_grp12, ap_block_pp0_stage2_ignoreCallOp142_grp13, ap_block_pp0_stage3_ignoreCallOp143_grp14, ap_block_pp0_stage4_ignoreCallOp144_grp15, ap_block_pp0_stage5_ignoreCallOp145_grp16, ap_block_pp0_stage6_ignoreCallOp146_grp1, ap_block_pp0_stage7_ignoreCallOp147_grp2, ap_block_pp0_stage8_ignoreCallOp148_grp3, ap_block_pp0_stage9_ignoreCallOp149_grp4, ap_block_pp0_stage10_ignoreCallOp150_grp5, ap_block_pp0_stage11_ignoreCallOp151_grp6, ap_block_pp0_stage12_ignoreCallOp152_grp7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp152_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_ignoreCallOp151_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp150_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp149_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_ignoreCallOp148_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp147_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp146_grp1) 
    and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp145_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp144_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp143_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp142_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp141_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp140_grp11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_ignoreCallOp139_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_ignoreCallOp138_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp137_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_ignoreCallOp136_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
            m_axi_matrix_b_0_RREADY <= grp_matrixSlicer_fu_306_m_axi_matrix_b_0_RREADY;
        else 
            m_axi_matrix_b_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_matrix_b_0_WDATA <= ap_const_lv16_0;
    m_axi_matrix_b_0_WID <= ap_const_lv1_0;
    m_axi_matrix_b_0_WLAST <= ap_const_logic_0;
    m_axi_matrix_b_0_WSTRB <= ap_const_lv2_0;
    m_axi_matrix_b_0_WUSER <= ap_const_lv1_0;
    m_axi_matrix_b_0_WVALID <= ap_const_logic_0;

    matrix_a_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, grp_matrixSlicer_fu_306_matrix_a_blk_n_AR, icmp_ln30_reg_1251, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_grp1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_grp2, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_grp3, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_grp4, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_grp5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_grp6, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_grp7, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_grp8, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_grp9, ap_block_pp0_stage15_grp10, ap_block_pp0_stage0_grp11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_grp13, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_grp14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_grp15, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_grp16)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp11) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or 
    ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            matrix_a_blk_n_AR <= grp_matrixSlicer_fu_306_matrix_a_blk_n_AR;
        else 
            matrix_a_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    matrix_a_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, grp_matrixSlicer_fu_306_matrix_a_blk_n_R, icmp_ln30_reg_1251, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_grp1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_grp2, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_grp3, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_grp4, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_grp5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_grp6, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_grp7, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_grp8, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_grp9, ap_block_pp0_stage15_grp10, ap_block_pp0_stage0_grp11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_grp13, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_grp14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_grp15, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_grp16)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp11) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or 
    ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            matrix_a_blk_n_R <= grp_matrixSlicer_fu_306_matrix_a_blk_n_R;
        else 
            matrix_a_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    matrix_b_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, grp_matrixSlicer_fu_306_matrix_b_blk_n_AR, icmp_ln30_reg_1251, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_grp1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_grp2, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_grp3, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_grp4, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_grp5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_grp6, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_grp7, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_grp8, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_grp9, ap_block_pp0_stage15_grp10, ap_block_pp0_stage0_grp11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_grp13, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_grp14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_grp15, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_grp16)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp11) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or 
    ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            matrix_b_blk_n_AR <= grp_matrixSlicer_fu_306_matrix_b_blk_n_AR;
        else 
            matrix_b_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    matrix_b_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, grp_matrixSlicer_fu_306_matrix_b_blk_n_R, icmp_ln30_reg_1251, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_grp1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_grp2, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_grp3, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_grp4, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_grp5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_grp6, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_grp7, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_grp8, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_grp9, ap_block_pp0_stage15_grp10, ap_block_pp0_stage0_grp11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp12, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_grp13, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_grp14, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_grp15, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_grp16)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_grp16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_grp15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_grp14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_grp13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_grp12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp11) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_grp10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_grp9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_grp8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or 
    ((ap_const_boolean_0 = ap_block_pp0_stage11_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage8_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln30_reg_1251 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            matrix_b_blk_n_R <= grp_matrixSlicer_fu_306_matrix_b_blk_n_R;
        else 
            matrix_b_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    p_read10_cast_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read10),32));
    p_read14_cast_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read14),32));
    p_read18_cast_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read18),32));
    p_read22_cast_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read22),32));
    p_read26_cast_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read26),32));
    p_read2_cast_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read2),32));
    p_read30_cast_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read30),32));
    p_read34_cast_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read34),32));
    p_read38_cast_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read38),32));
    p_read42_cast_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read42),32));
    p_read46_cast_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read46),32));
    p_read50_cast_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read50),32));
    p_read54_cast_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read54),32));
    p_read58_cast_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read58),32));
    p_read6_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read6),32));
    p_read_cast_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),32));
    tmp_fu_459_p4 <= size(15 downto 2);
end behav;
