// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MatrixMult_MatrixMult,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.500000,HLS_SYN_LAT=8388651,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=18787,HLS_SYN_LUT=8073,HLS_VERSION=2025_1}" *)

module MatrixMult (
        ap_clk,
        ap_rst_n,
        m_axi_matrix_a_AWVALID,
        m_axi_matrix_a_AWREADY,
        m_axi_matrix_a_AWADDR,
        m_axi_matrix_a_AWID,
        m_axi_matrix_a_AWLEN,
        m_axi_matrix_a_AWSIZE,
        m_axi_matrix_a_AWBURST,
        m_axi_matrix_a_AWLOCK,
        m_axi_matrix_a_AWCACHE,
        m_axi_matrix_a_AWPROT,
        m_axi_matrix_a_AWQOS,
        m_axi_matrix_a_AWREGION,
        m_axi_matrix_a_AWUSER,
        m_axi_matrix_a_WVALID,
        m_axi_matrix_a_WREADY,
        m_axi_matrix_a_WDATA,
        m_axi_matrix_a_WSTRB,
        m_axi_matrix_a_WLAST,
        m_axi_matrix_a_WID,
        m_axi_matrix_a_WUSER,
        m_axi_matrix_a_ARVALID,
        m_axi_matrix_a_ARREADY,
        m_axi_matrix_a_ARADDR,
        m_axi_matrix_a_ARID,
        m_axi_matrix_a_ARLEN,
        m_axi_matrix_a_ARSIZE,
        m_axi_matrix_a_ARBURST,
        m_axi_matrix_a_ARLOCK,
        m_axi_matrix_a_ARCACHE,
        m_axi_matrix_a_ARPROT,
        m_axi_matrix_a_ARQOS,
        m_axi_matrix_a_ARREGION,
        m_axi_matrix_a_ARUSER,
        m_axi_matrix_a_RVALID,
        m_axi_matrix_a_RREADY,
        m_axi_matrix_a_RDATA,
        m_axi_matrix_a_RLAST,
        m_axi_matrix_a_RID,
        m_axi_matrix_a_RUSER,
        m_axi_matrix_a_RRESP,
        m_axi_matrix_a_BVALID,
        m_axi_matrix_a_BREADY,
        m_axi_matrix_a_BRESP,
        m_axi_matrix_a_BID,
        m_axi_matrix_a_BUSER,
        m_axi_matrix_b_AWVALID,
        m_axi_matrix_b_AWREADY,
        m_axi_matrix_b_AWADDR,
        m_axi_matrix_b_AWID,
        m_axi_matrix_b_AWLEN,
        m_axi_matrix_b_AWSIZE,
        m_axi_matrix_b_AWBURST,
        m_axi_matrix_b_AWLOCK,
        m_axi_matrix_b_AWCACHE,
        m_axi_matrix_b_AWPROT,
        m_axi_matrix_b_AWQOS,
        m_axi_matrix_b_AWREGION,
        m_axi_matrix_b_AWUSER,
        m_axi_matrix_b_WVALID,
        m_axi_matrix_b_WREADY,
        m_axi_matrix_b_WDATA,
        m_axi_matrix_b_WSTRB,
        m_axi_matrix_b_WLAST,
        m_axi_matrix_b_WID,
        m_axi_matrix_b_WUSER,
        m_axi_matrix_b_ARVALID,
        m_axi_matrix_b_ARREADY,
        m_axi_matrix_b_ARADDR,
        m_axi_matrix_b_ARID,
        m_axi_matrix_b_ARLEN,
        m_axi_matrix_b_ARSIZE,
        m_axi_matrix_b_ARBURST,
        m_axi_matrix_b_ARLOCK,
        m_axi_matrix_b_ARCACHE,
        m_axi_matrix_b_ARPROT,
        m_axi_matrix_b_ARQOS,
        m_axi_matrix_b_ARREGION,
        m_axi_matrix_b_ARUSER,
        m_axi_matrix_b_RVALID,
        m_axi_matrix_b_RREADY,
        m_axi_matrix_b_RDATA,
        m_axi_matrix_b_RLAST,
        m_axi_matrix_b_RID,
        m_axi_matrix_b_RUSER,
        m_axi_matrix_b_RRESP,
        m_axi_matrix_b_BVALID,
        m_axi_matrix_b_BREADY,
        m_axi_matrix_b_BRESP,
        m_axi_matrix_b_BID,
        m_axi_matrix_b_BUSER,
        m_axi_matrix_c_AWVALID,
        m_axi_matrix_c_AWREADY,
        m_axi_matrix_c_AWADDR,
        m_axi_matrix_c_AWID,
        m_axi_matrix_c_AWLEN,
        m_axi_matrix_c_AWSIZE,
        m_axi_matrix_c_AWBURST,
        m_axi_matrix_c_AWLOCK,
        m_axi_matrix_c_AWCACHE,
        m_axi_matrix_c_AWPROT,
        m_axi_matrix_c_AWQOS,
        m_axi_matrix_c_AWREGION,
        m_axi_matrix_c_AWUSER,
        m_axi_matrix_c_WVALID,
        m_axi_matrix_c_WREADY,
        m_axi_matrix_c_WDATA,
        m_axi_matrix_c_WSTRB,
        m_axi_matrix_c_WLAST,
        m_axi_matrix_c_WID,
        m_axi_matrix_c_WUSER,
        m_axi_matrix_c_ARVALID,
        m_axi_matrix_c_ARREADY,
        m_axi_matrix_c_ARADDR,
        m_axi_matrix_c_ARID,
        m_axi_matrix_c_ARLEN,
        m_axi_matrix_c_ARSIZE,
        m_axi_matrix_c_ARBURST,
        m_axi_matrix_c_ARLOCK,
        m_axi_matrix_c_ARCACHE,
        m_axi_matrix_c_ARPROT,
        m_axi_matrix_c_ARQOS,
        m_axi_matrix_c_ARREGION,
        m_axi_matrix_c_ARUSER,
        m_axi_matrix_c_RVALID,
        m_axi_matrix_c_RREADY,
        m_axi_matrix_c_RDATA,
        m_axi_matrix_c_RLAST,
        m_axi_matrix_c_RID,
        m_axi_matrix_c_RUSER,
        m_axi_matrix_c_RRESP,
        m_axi_matrix_c_BVALID,
        m_axi_matrix_c_BREADY,
        m_axi_matrix_c_BRESP,
        m_axi_matrix_c_BID,
        m_axi_matrix_c_BUSER,
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MATRIX_A_ID_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_ADDR_WIDTH = 64;
parameter    C_M_AXI_MATRIX_A_DATA_WIDTH = 32;
parameter    C_M_AXI_MATRIX_A_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_WUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_RUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_BUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_A_USER_VALUE = 0;
parameter    C_M_AXI_MATRIX_A_PROT_VALUE = 0;
parameter    C_M_AXI_MATRIX_A_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MATRIX_B_ID_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_ADDR_WIDTH = 64;
parameter    C_M_AXI_MATRIX_B_DATA_WIDTH = 32;
parameter    C_M_AXI_MATRIX_B_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_WUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_RUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_BUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_B_USER_VALUE = 0;
parameter    C_M_AXI_MATRIX_B_PROT_VALUE = 0;
parameter    C_M_AXI_MATRIX_B_CACHE_VALUE = 3;
parameter    C_M_AXI_MATRIX_C_ID_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_ADDR_WIDTH = 64;
parameter    C_M_AXI_MATRIX_C_DATA_WIDTH = 32;
parameter    C_M_AXI_MATRIX_C_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_WUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_RUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_BUSER_WIDTH = 1;
parameter    C_M_AXI_MATRIX_C_USER_VALUE = 0;
parameter    C_M_AXI_MATRIX_C_PROT_VALUE = 0;
parameter    C_M_AXI_MATRIX_C_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MATRIX_A_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MATRIX_B_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MATRIX_C_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_matrix_a_AWVALID;
input   m_axi_matrix_a_AWREADY;
output  [C_M_AXI_MATRIX_A_ADDR_WIDTH - 1:0] m_axi_matrix_a_AWADDR;
output  [C_M_AXI_MATRIX_A_ID_WIDTH - 1:0] m_axi_matrix_a_AWID;
output  [7:0] m_axi_matrix_a_AWLEN;
output  [2:0] m_axi_matrix_a_AWSIZE;
output  [1:0] m_axi_matrix_a_AWBURST;
output  [1:0] m_axi_matrix_a_AWLOCK;
output  [3:0] m_axi_matrix_a_AWCACHE;
output  [2:0] m_axi_matrix_a_AWPROT;
output  [3:0] m_axi_matrix_a_AWQOS;
output  [3:0] m_axi_matrix_a_AWREGION;
output  [C_M_AXI_MATRIX_A_AWUSER_WIDTH - 1:0] m_axi_matrix_a_AWUSER;
output   m_axi_matrix_a_WVALID;
input   m_axi_matrix_a_WREADY;
output  [C_M_AXI_MATRIX_A_DATA_WIDTH - 1:0] m_axi_matrix_a_WDATA;
output  [C_M_AXI_MATRIX_A_WSTRB_WIDTH - 1:0] m_axi_matrix_a_WSTRB;
output   m_axi_matrix_a_WLAST;
output  [C_M_AXI_MATRIX_A_ID_WIDTH - 1:0] m_axi_matrix_a_WID;
output  [C_M_AXI_MATRIX_A_WUSER_WIDTH - 1:0] m_axi_matrix_a_WUSER;
output   m_axi_matrix_a_ARVALID;
input   m_axi_matrix_a_ARREADY;
output  [C_M_AXI_MATRIX_A_ADDR_WIDTH - 1:0] m_axi_matrix_a_ARADDR;
output  [C_M_AXI_MATRIX_A_ID_WIDTH - 1:0] m_axi_matrix_a_ARID;
output  [7:0] m_axi_matrix_a_ARLEN;
output  [2:0] m_axi_matrix_a_ARSIZE;
output  [1:0] m_axi_matrix_a_ARBURST;
output  [1:0] m_axi_matrix_a_ARLOCK;
output  [3:0] m_axi_matrix_a_ARCACHE;
output  [2:0] m_axi_matrix_a_ARPROT;
output  [3:0] m_axi_matrix_a_ARQOS;
output  [3:0] m_axi_matrix_a_ARREGION;
output  [C_M_AXI_MATRIX_A_ARUSER_WIDTH - 1:0] m_axi_matrix_a_ARUSER;
input   m_axi_matrix_a_RVALID;
output   m_axi_matrix_a_RREADY;
input  [C_M_AXI_MATRIX_A_DATA_WIDTH - 1:0] m_axi_matrix_a_RDATA;
input   m_axi_matrix_a_RLAST;
input  [C_M_AXI_MATRIX_A_ID_WIDTH - 1:0] m_axi_matrix_a_RID;
input  [C_M_AXI_MATRIX_A_RUSER_WIDTH - 1:0] m_axi_matrix_a_RUSER;
input  [1:0] m_axi_matrix_a_RRESP;
input   m_axi_matrix_a_BVALID;
output   m_axi_matrix_a_BREADY;
input  [1:0] m_axi_matrix_a_BRESP;
input  [C_M_AXI_MATRIX_A_ID_WIDTH - 1:0] m_axi_matrix_a_BID;
input  [C_M_AXI_MATRIX_A_BUSER_WIDTH - 1:0] m_axi_matrix_a_BUSER;
output   m_axi_matrix_b_AWVALID;
input   m_axi_matrix_b_AWREADY;
output  [C_M_AXI_MATRIX_B_ADDR_WIDTH - 1:0] m_axi_matrix_b_AWADDR;
output  [C_M_AXI_MATRIX_B_ID_WIDTH - 1:0] m_axi_matrix_b_AWID;
output  [7:0] m_axi_matrix_b_AWLEN;
output  [2:0] m_axi_matrix_b_AWSIZE;
output  [1:0] m_axi_matrix_b_AWBURST;
output  [1:0] m_axi_matrix_b_AWLOCK;
output  [3:0] m_axi_matrix_b_AWCACHE;
output  [2:0] m_axi_matrix_b_AWPROT;
output  [3:0] m_axi_matrix_b_AWQOS;
output  [3:0] m_axi_matrix_b_AWREGION;
output  [C_M_AXI_MATRIX_B_AWUSER_WIDTH - 1:0] m_axi_matrix_b_AWUSER;
output   m_axi_matrix_b_WVALID;
input   m_axi_matrix_b_WREADY;
output  [C_M_AXI_MATRIX_B_DATA_WIDTH - 1:0] m_axi_matrix_b_WDATA;
output  [C_M_AXI_MATRIX_B_WSTRB_WIDTH - 1:0] m_axi_matrix_b_WSTRB;
output   m_axi_matrix_b_WLAST;
output  [C_M_AXI_MATRIX_B_ID_WIDTH - 1:0] m_axi_matrix_b_WID;
output  [C_M_AXI_MATRIX_B_WUSER_WIDTH - 1:0] m_axi_matrix_b_WUSER;
output   m_axi_matrix_b_ARVALID;
input   m_axi_matrix_b_ARREADY;
output  [C_M_AXI_MATRIX_B_ADDR_WIDTH - 1:0] m_axi_matrix_b_ARADDR;
output  [C_M_AXI_MATRIX_B_ID_WIDTH - 1:0] m_axi_matrix_b_ARID;
output  [7:0] m_axi_matrix_b_ARLEN;
output  [2:0] m_axi_matrix_b_ARSIZE;
output  [1:0] m_axi_matrix_b_ARBURST;
output  [1:0] m_axi_matrix_b_ARLOCK;
output  [3:0] m_axi_matrix_b_ARCACHE;
output  [2:0] m_axi_matrix_b_ARPROT;
output  [3:0] m_axi_matrix_b_ARQOS;
output  [3:0] m_axi_matrix_b_ARREGION;
output  [C_M_AXI_MATRIX_B_ARUSER_WIDTH - 1:0] m_axi_matrix_b_ARUSER;
input   m_axi_matrix_b_RVALID;
output   m_axi_matrix_b_RREADY;
input  [C_M_AXI_MATRIX_B_DATA_WIDTH - 1:0] m_axi_matrix_b_RDATA;
input   m_axi_matrix_b_RLAST;
input  [C_M_AXI_MATRIX_B_ID_WIDTH - 1:0] m_axi_matrix_b_RID;
input  [C_M_AXI_MATRIX_B_RUSER_WIDTH - 1:0] m_axi_matrix_b_RUSER;
input  [1:0] m_axi_matrix_b_RRESP;
input   m_axi_matrix_b_BVALID;
output   m_axi_matrix_b_BREADY;
input  [1:0] m_axi_matrix_b_BRESP;
input  [C_M_AXI_MATRIX_B_ID_WIDTH - 1:0] m_axi_matrix_b_BID;
input  [C_M_AXI_MATRIX_B_BUSER_WIDTH - 1:0] m_axi_matrix_b_BUSER;
output   m_axi_matrix_c_AWVALID;
input   m_axi_matrix_c_AWREADY;
output  [C_M_AXI_MATRIX_C_ADDR_WIDTH - 1:0] m_axi_matrix_c_AWADDR;
output  [C_M_AXI_MATRIX_C_ID_WIDTH - 1:0] m_axi_matrix_c_AWID;
output  [7:0] m_axi_matrix_c_AWLEN;
output  [2:0] m_axi_matrix_c_AWSIZE;
output  [1:0] m_axi_matrix_c_AWBURST;
output  [1:0] m_axi_matrix_c_AWLOCK;
output  [3:0] m_axi_matrix_c_AWCACHE;
output  [2:0] m_axi_matrix_c_AWPROT;
output  [3:0] m_axi_matrix_c_AWQOS;
output  [3:0] m_axi_matrix_c_AWREGION;
output  [C_M_AXI_MATRIX_C_AWUSER_WIDTH - 1:0] m_axi_matrix_c_AWUSER;
output   m_axi_matrix_c_WVALID;
input   m_axi_matrix_c_WREADY;
output  [C_M_AXI_MATRIX_C_DATA_WIDTH - 1:0] m_axi_matrix_c_WDATA;
output  [C_M_AXI_MATRIX_C_WSTRB_WIDTH - 1:0] m_axi_matrix_c_WSTRB;
output   m_axi_matrix_c_WLAST;
output  [C_M_AXI_MATRIX_C_ID_WIDTH - 1:0] m_axi_matrix_c_WID;
output  [C_M_AXI_MATRIX_C_WUSER_WIDTH - 1:0] m_axi_matrix_c_WUSER;
output   m_axi_matrix_c_ARVALID;
input   m_axi_matrix_c_ARREADY;
output  [C_M_AXI_MATRIX_C_ADDR_WIDTH - 1:0] m_axi_matrix_c_ARADDR;
output  [C_M_AXI_MATRIX_C_ID_WIDTH - 1:0] m_axi_matrix_c_ARID;
output  [7:0] m_axi_matrix_c_ARLEN;
output  [2:0] m_axi_matrix_c_ARSIZE;
output  [1:0] m_axi_matrix_c_ARBURST;
output  [1:0] m_axi_matrix_c_ARLOCK;
output  [3:0] m_axi_matrix_c_ARCACHE;
output  [2:0] m_axi_matrix_c_ARPROT;
output  [3:0] m_axi_matrix_c_ARQOS;
output  [3:0] m_axi_matrix_c_ARREGION;
output  [C_M_AXI_MATRIX_C_ARUSER_WIDTH - 1:0] m_axi_matrix_c_ARUSER;
input   m_axi_matrix_c_RVALID;
output   m_axi_matrix_c_RREADY;
input  [C_M_AXI_MATRIX_C_DATA_WIDTH - 1:0] m_axi_matrix_c_RDATA;
input   m_axi_matrix_c_RLAST;
input  [C_M_AXI_MATRIX_C_ID_WIDTH - 1:0] m_axi_matrix_c_RID;
input  [C_M_AXI_MATRIX_C_RUSER_WIDTH - 1:0] m_axi_matrix_c_RUSER;
input  [1:0] m_axi_matrix_c_RRESP;
input   m_axi_matrix_c_BVALID;
output   m_axi_matrix_c_BREADY;
input  [1:0] m_axi_matrix_c_BRESP;
input  [C_M_AXI_MATRIX_C_ID_WIDTH - 1:0] m_axi_matrix_c_BID;
input  [C_M_AXI_MATRIX_C_BUSER_WIDTH - 1:0] m_axi_matrix_c_BUSER;
input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] matrix_in_1;
wire   [63:0] matrix_in_2;
wire   [15:0] size;
wire   [63:0] matrix_out;
reg   [63:0] matrix_out_read_reg_153;
reg   [15:0] size_read_reg_158;
reg   [63:0] matrix_in_2_read_reg_163;
reg   [63:0] matrix_in_1_read_reg_168;
reg   [13:0] div_reg_173;
wire   [27:0] div_cast_fu_143_p1;
wire    ap_CS_fsm_state2;
wire   [27:0] grp_fu_146_p2;
reg   [27:0] mul_reg_184;
wire    ap_CS_fsm_state3;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WVALID;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WDATA;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WSTRB;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WLAST;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WID;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_RREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_BREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WVALID;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WDATA;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WSTRB;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WLAST;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WID;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_RREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_BREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WVALID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WDATA;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WSTRB;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WLAST;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WID;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARVALID;
wire   [63:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARADDR;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARID;
wire   [31:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARLEN;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARSIZE;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARBURST;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARLOCK;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARCACHE;
wire   [2:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARPROT;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARQOS;
wire   [3:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARREGION;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARUSER;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_RREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_BREADY;
wire    grp_dataflow_parent_loop_proc_fu_108_ap_start;
wire    grp_dataflow_parent_loop_proc_fu_108_ap_done;
wire    grp_dataflow_parent_loop_proc_fu_108_ap_ready;
wire    grp_dataflow_parent_loop_proc_fu_108_ap_idle;
reg    grp_dataflow_parent_loop_proc_fu_108_ap_continue;
wire    matrix_a_0_AWREADY;
wire    matrix_a_0_WREADY;
reg    matrix_a_0_ARVALID;
wire    matrix_a_0_ARREADY;
wire    matrix_a_0_RVALID;
reg    matrix_a_0_RREADY;
wire   [15:0] matrix_a_0_RDATA;
wire   [12:0] matrix_a_0_RFIFONUM;
wire    matrix_a_0_BVALID;
wire    matrix_b_0_AWREADY;
wire    matrix_b_0_WREADY;
reg    matrix_b_0_ARVALID;
wire    matrix_b_0_ARREADY;
wire    matrix_b_0_RVALID;
reg    matrix_b_0_RREADY;
wire   [15:0] matrix_b_0_RDATA;
wire   [12:0] matrix_b_0_RFIFONUM;
wire    matrix_b_0_BVALID;
reg    matrix_c_0_AWVALID;
wire    matrix_c_0_AWREADY;
reg    matrix_c_0_WVALID;
wire    matrix_c_0_WREADY;
wire    matrix_c_0_ARREADY;
wire    matrix_c_0_RVALID;
wire   [31:0] matrix_c_0_RDATA;
wire   [11:0] matrix_c_0_RFIFONUM;
wire    matrix_c_0_BVALID;
reg    matrix_c_0_BREADY;
reg    grp_dataflow_parent_loop_proc_fu_108_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done;
reg    ap_block_state4_on_subcall_done;
wire    ap_sync_grp_dataflow_parent_loop_proc_fu_108_ap_ready;
wire   [13:0] grp_fu_146_p0;
wire   [13:0] grp_fu_146_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_dataflow_parent_loop_proc_fu_108_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done = 1'b0;
end

MatrixMult_dataflow_parent_loop_proc grp_dataflow_parent_loop_proc_fu_108(
    .mul(mul_reg_184),
    .size(size_read_reg_158),
    .m_axi_matrix_a_0_AWVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWVALID),
    .m_axi_matrix_a_0_AWREADY(1'b0),
    .m_axi_matrix_a_0_AWADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWADDR),
    .m_axi_matrix_a_0_AWID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWID),
    .m_axi_matrix_a_0_AWLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWLEN),
    .m_axi_matrix_a_0_AWSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWSIZE),
    .m_axi_matrix_a_0_AWBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWBURST),
    .m_axi_matrix_a_0_AWLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWLOCK),
    .m_axi_matrix_a_0_AWCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWCACHE),
    .m_axi_matrix_a_0_AWPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWPROT),
    .m_axi_matrix_a_0_AWQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWQOS),
    .m_axi_matrix_a_0_AWREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWREGION),
    .m_axi_matrix_a_0_AWUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_AWUSER),
    .m_axi_matrix_a_0_WVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WVALID),
    .m_axi_matrix_a_0_WREADY(1'b0),
    .m_axi_matrix_a_0_WDATA(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WDATA),
    .m_axi_matrix_a_0_WSTRB(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WSTRB),
    .m_axi_matrix_a_0_WLAST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WLAST),
    .m_axi_matrix_a_0_WID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WID),
    .m_axi_matrix_a_0_WUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_WUSER),
    .m_axi_matrix_a_0_ARVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARVALID),
    .m_axi_matrix_a_0_ARREADY(matrix_a_0_ARREADY),
    .m_axi_matrix_a_0_ARADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARADDR),
    .m_axi_matrix_a_0_ARID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARID),
    .m_axi_matrix_a_0_ARLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARLEN),
    .m_axi_matrix_a_0_ARSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARSIZE),
    .m_axi_matrix_a_0_ARBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARBURST),
    .m_axi_matrix_a_0_ARLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARLOCK),
    .m_axi_matrix_a_0_ARCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARCACHE),
    .m_axi_matrix_a_0_ARPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARPROT),
    .m_axi_matrix_a_0_ARQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARQOS),
    .m_axi_matrix_a_0_ARREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARREGION),
    .m_axi_matrix_a_0_ARUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARUSER),
    .m_axi_matrix_a_0_RVALID(matrix_a_0_RVALID),
    .m_axi_matrix_a_0_RREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_RREADY),
    .m_axi_matrix_a_0_RDATA(matrix_a_0_RDATA),
    .m_axi_matrix_a_0_RLAST(1'b0),
    .m_axi_matrix_a_0_RID(1'd0),
    .m_axi_matrix_a_0_RFIFONUM(matrix_a_0_RFIFONUM),
    .m_axi_matrix_a_0_RUSER(1'd0),
    .m_axi_matrix_a_0_RRESP(2'd0),
    .m_axi_matrix_a_0_BVALID(1'b0),
    .m_axi_matrix_a_0_BREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_BREADY),
    .m_axi_matrix_a_0_BRESP(2'd0),
    .m_axi_matrix_a_0_BID(1'd0),
    .m_axi_matrix_a_0_BUSER(1'd0),
    .matrix_in_1(matrix_in_1_read_reg_168),
    .m_axi_matrix_b_0_AWVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWVALID),
    .m_axi_matrix_b_0_AWREADY(1'b0),
    .m_axi_matrix_b_0_AWADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWADDR),
    .m_axi_matrix_b_0_AWID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWID),
    .m_axi_matrix_b_0_AWLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWLEN),
    .m_axi_matrix_b_0_AWSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWSIZE),
    .m_axi_matrix_b_0_AWBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWBURST),
    .m_axi_matrix_b_0_AWLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWLOCK),
    .m_axi_matrix_b_0_AWCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWCACHE),
    .m_axi_matrix_b_0_AWPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWPROT),
    .m_axi_matrix_b_0_AWQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWQOS),
    .m_axi_matrix_b_0_AWREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWREGION),
    .m_axi_matrix_b_0_AWUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_AWUSER),
    .m_axi_matrix_b_0_WVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WVALID),
    .m_axi_matrix_b_0_WREADY(1'b0),
    .m_axi_matrix_b_0_WDATA(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WDATA),
    .m_axi_matrix_b_0_WSTRB(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WSTRB),
    .m_axi_matrix_b_0_WLAST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WLAST),
    .m_axi_matrix_b_0_WID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WID),
    .m_axi_matrix_b_0_WUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_WUSER),
    .m_axi_matrix_b_0_ARVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARVALID),
    .m_axi_matrix_b_0_ARREADY(matrix_b_0_ARREADY),
    .m_axi_matrix_b_0_ARADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARADDR),
    .m_axi_matrix_b_0_ARID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARID),
    .m_axi_matrix_b_0_ARLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARLEN),
    .m_axi_matrix_b_0_ARSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARSIZE),
    .m_axi_matrix_b_0_ARBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARBURST),
    .m_axi_matrix_b_0_ARLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARLOCK),
    .m_axi_matrix_b_0_ARCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARCACHE),
    .m_axi_matrix_b_0_ARPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARPROT),
    .m_axi_matrix_b_0_ARQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARQOS),
    .m_axi_matrix_b_0_ARREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARREGION),
    .m_axi_matrix_b_0_ARUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARUSER),
    .m_axi_matrix_b_0_RVALID(matrix_b_0_RVALID),
    .m_axi_matrix_b_0_RREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_RREADY),
    .m_axi_matrix_b_0_RDATA(matrix_b_0_RDATA),
    .m_axi_matrix_b_0_RLAST(1'b0),
    .m_axi_matrix_b_0_RID(1'd0),
    .m_axi_matrix_b_0_RFIFONUM(matrix_b_0_RFIFONUM),
    .m_axi_matrix_b_0_RUSER(1'd0),
    .m_axi_matrix_b_0_RRESP(2'd0),
    .m_axi_matrix_b_0_BVALID(1'b0),
    .m_axi_matrix_b_0_BREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_BREADY),
    .m_axi_matrix_b_0_BRESP(2'd0),
    .m_axi_matrix_b_0_BID(1'd0),
    .m_axi_matrix_b_0_BUSER(1'd0),
    .matrix_in_2(matrix_in_2_read_reg_163),
    .m_axi_matrix_c_0_AWVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWVALID),
    .m_axi_matrix_c_0_AWREADY(matrix_c_0_AWREADY),
    .m_axi_matrix_c_0_AWADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWADDR),
    .m_axi_matrix_c_0_AWID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWID),
    .m_axi_matrix_c_0_AWLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWLEN),
    .m_axi_matrix_c_0_AWSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWSIZE),
    .m_axi_matrix_c_0_AWBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWBURST),
    .m_axi_matrix_c_0_AWLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWLOCK),
    .m_axi_matrix_c_0_AWCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWCACHE),
    .m_axi_matrix_c_0_AWPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWPROT),
    .m_axi_matrix_c_0_AWQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWQOS),
    .m_axi_matrix_c_0_AWREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWREGION),
    .m_axi_matrix_c_0_AWUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWUSER),
    .m_axi_matrix_c_0_WVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WVALID),
    .m_axi_matrix_c_0_WREADY(matrix_c_0_WREADY),
    .m_axi_matrix_c_0_WDATA(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WDATA),
    .m_axi_matrix_c_0_WSTRB(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WSTRB),
    .m_axi_matrix_c_0_WLAST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WLAST),
    .m_axi_matrix_c_0_WID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WID),
    .m_axi_matrix_c_0_WUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WUSER),
    .m_axi_matrix_c_0_ARVALID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARVALID),
    .m_axi_matrix_c_0_ARREADY(1'b0),
    .m_axi_matrix_c_0_ARADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARADDR),
    .m_axi_matrix_c_0_ARID(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARID),
    .m_axi_matrix_c_0_ARLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARLEN),
    .m_axi_matrix_c_0_ARSIZE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARSIZE),
    .m_axi_matrix_c_0_ARBURST(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARBURST),
    .m_axi_matrix_c_0_ARLOCK(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARLOCK),
    .m_axi_matrix_c_0_ARCACHE(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARCACHE),
    .m_axi_matrix_c_0_ARPROT(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARPROT),
    .m_axi_matrix_c_0_ARQOS(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARQOS),
    .m_axi_matrix_c_0_ARREGION(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARREGION),
    .m_axi_matrix_c_0_ARUSER(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_ARUSER),
    .m_axi_matrix_c_0_RVALID(1'b0),
    .m_axi_matrix_c_0_RREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_RREADY),
    .m_axi_matrix_c_0_RDATA(32'd0),
    .m_axi_matrix_c_0_RLAST(1'b0),
    .m_axi_matrix_c_0_RID(1'd0),
    .m_axi_matrix_c_0_RFIFONUM(12'd0),
    .m_axi_matrix_c_0_RUSER(1'd0),
    .m_axi_matrix_c_0_RRESP(2'd0),
    .m_axi_matrix_c_0_BVALID(matrix_c_0_BVALID),
    .m_axi_matrix_c_0_BREADY(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_BREADY),
    .m_axi_matrix_c_0_BRESP(2'd0),
    .m_axi_matrix_c_0_BID(1'd0),
    .m_axi_matrix_c_0_BUSER(1'd0),
    .matrix_out(matrix_out_read_reg_153),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .size_ap_vld(1'b1),
    .matrix_in_1_ap_vld(1'b1),
    .matrix_in_2_ap_vld(1'b1),
    .matrix_out_ap_vld(1'b1),
    .ap_start(grp_dataflow_parent_loop_proc_fu_108_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc_fu_108_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc_fu_108_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc_fu_108_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc_fu_108_ap_continue)
);

MatrixMult_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .matrix_in_1(matrix_in_1),
    .matrix_in_2(matrix_in_2),
    .size(size),
    .matrix_out(matrix_out),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

MatrixMult_matrix_a_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MATRIX_A_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MATRIX_A_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MATRIX_A_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MATRIX_A_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MATRIX_A_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MATRIX_A_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MATRIX_A_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MATRIX_A_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MATRIX_A_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MATRIX_A_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MATRIX_A_CACHE_VALUE ),
    .CH0_NUM_READ_OUTSTANDING( 16 ),
    .CH0_NUM_WRITE_OUTSTANDING( 16 ),
    .CH0_USER_RFIFONUM_WIDTH( 13 ),
    .CH0_USER_DW( 16 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
matrix_a_m_axi_U(
    .AWVALID(m_axi_matrix_a_AWVALID),
    .AWREADY(m_axi_matrix_a_AWREADY),
    .AWADDR(m_axi_matrix_a_AWADDR),
    .AWID(m_axi_matrix_a_AWID),
    .AWLEN(m_axi_matrix_a_AWLEN),
    .AWSIZE(m_axi_matrix_a_AWSIZE),
    .AWBURST(m_axi_matrix_a_AWBURST),
    .AWLOCK(m_axi_matrix_a_AWLOCK),
    .AWCACHE(m_axi_matrix_a_AWCACHE),
    .AWPROT(m_axi_matrix_a_AWPROT),
    .AWQOS(m_axi_matrix_a_AWQOS),
    .AWREGION(m_axi_matrix_a_AWREGION),
    .AWUSER(m_axi_matrix_a_AWUSER),
    .WVALID(m_axi_matrix_a_WVALID),
    .WREADY(m_axi_matrix_a_WREADY),
    .WDATA(m_axi_matrix_a_WDATA),
    .WSTRB(m_axi_matrix_a_WSTRB),
    .WLAST(m_axi_matrix_a_WLAST),
    .WID(m_axi_matrix_a_WID),
    .WUSER(m_axi_matrix_a_WUSER),
    .ARVALID(m_axi_matrix_a_ARVALID),
    .ARREADY(m_axi_matrix_a_ARREADY),
    .ARADDR(m_axi_matrix_a_ARADDR),
    .ARID(m_axi_matrix_a_ARID),
    .ARLEN(m_axi_matrix_a_ARLEN),
    .ARSIZE(m_axi_matrix_a_ARSIZE),
    .ARBURST(m_axi_matrix_a_ARBURST),
    .ARLOCK(m_axi_matrix_a_ARLOCK),
    .ARCACHE(m_axi_matrix_a_ARCACHE),
    .ARPROT(m_axi_matrix_a_ARPROT),
    .ARQOS(m_axi_matrix_a_ARQOS),
    .ARREGION(m_axi_matrix_a_ARREGION),
    .ARUSER(m_axi_matrix_a_ARUSER),
    .RVALID(m_axi_matrix_a_RVALID),
    .RREADY(m_axi_matrix_a_RREADY),
    .RDATA(m_axi_matrix_a_RDATA),
    .RLAST(m_axi_matrix_a_RLAST),
    .RID(m_axi_matrix_a_RID),
    .RUSER(m_axi_matrix_a_RUSER),
    .RRESP(m_axi_matrix_a_RRESP),
    .BVALID(m_axi_matrix_a_BVALID),
    .BREADY(m_axi_matrix_a_BREADY),
    .BRESP(m_axi_matrix_a_BRESP),
    .BID(m_axi_matrix_a_BID),
    .BUSER(m_axi_matrix_a_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(matrix_a_0_ARVALID),
    .I_CH0_ARREADY(matrix_a_0_ARREADY),
    .I_CH0_ARADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARADDR),
    .I_CH0_ARLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARLEN),
    .I_CH0_RVALID(matrix_a_0_RVALID),
    .I_CH0_RREADY(matrix_a_0_RREADY),
    .I_CH0_RDATA(matrix_a_0_RDATA),
    .I_CH0_RFIFONUM(matrix_a_0_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(matrix_a_0_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(matrix_a_0_WREADY),
    .I_CH0_WDATA(16'd0),
    .I_CH0_WSTRB(2'd0),
    .I_CH0_BVALID(matrix_a_0_BVALID),
    .I_CH0_BREADY(1'b0)
);

MatrixMult_matrix_b_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MATRIX_B_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MATRIX_B_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MATRIX_B_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MATRIX_B_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MATRIX_B_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MATRIX_B_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MATRIX_B_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MATRIX_B_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MATRIX_B_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MATRIX_B_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MATRIX_B_CACHE_VALUE ),
    .CH0_NUM_READ_OUTSTANDING( 16 ),
    .CH0_NUM_WRITE_OUTSTANDING( 16 ),
    .CH0_USER_RFIFONUM_WIDTH( 13 ),
    .CH0_USER_DW( 16 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
matrix_b_m_axi_U(
    .AWVALID(m_axi_matrix_b_AWVALID),
    .AWREADY(m_axi_matrix_b_AWREADY),
    .AWADDR(m_axi_matrix_b_AWADDR),
    .AWID(m_axi_matrix_b_AWID),
    .AWLEN(m_axi_matrix_b_AWLEN),
    .AWSIZE(m_axi_matrix_b_AWSIZE),
    .AWBURST(m_axi_matrix_b_AWBURST),
    .AWLOCK(m_axi_matrix_b_AWLOCK),
    .AWCACHE(m_axi_matrix_b_AWCACHE),
    .AWPROT(m_axi_matrix_b_AWPROT),
    .AWQOS(m_axi_matrix_b_AWQOS),
    .AWREGION(m_axi_matrix_b_AWREGION),
    .AWUSER(m_axi_matrix_b_AWUSER),
    .WVALID(m_axi_matrix_b_WVALID),
    .WREADY(m_axi_matrix_b_WREADY),
    .WDATA(m_axi_matrix_b_WDATA),
    .WSTRB(m_axi_matrix_b_WSTRB),
    .WLAST(m_axi_matrix_b_WLAST),
    .WID(m_axi_matrix_b_WID),
    .WUSER(m_axi_matrix_b_WUSER),
    .ARVALID(m_axi_matrix_b_ARVALID),
    .ARREADY(m_axi_matrix_b_ARREADY),
    .ARADDR(m_axi_matrix_b_ARADDR),
    .ARID(m_axi_matrix_b_ARID),
    .ARLEN(m_axi_matrix_b_ARLEN),
    .ARSIZE(m_axi_matrix_b_ARSIZE),
    .ARBURST(m_axi_matrix_b_ARBURST),
    .ARLOCK(m_axi_matrix_b_ARLOCK),
    .ARCACHE(m_axi_matrix_b_ARCACHE),
    .ARPROT(m_axi_matrix_b_ARPROT),
    .ARQOS(m_axi_matrix_b_ARQOS),
    .ARREGION(m_axi_matrix_b_ARREGION),
    .ARUSER(m_axi_matrix_b_ARUSER),
    .RVALID(m_axi_matrix_b_RVALID),
    .RREADY(m_axi_matrix_b_RREADY),
    .RDATA(m_axi_matrix_b_RDATA),
    .RLAST(m_axi_matrix_b_RLAST),
    .RID(m_axi_matrix_b_RID),
    .RUSER(m_axi_matrix_b_RUSER),
    .RRESP(m_axi_matrix_b_RRESP),
    .BVALID(m_axi_matrix_b_BVALID),
    .BREADY(m_axi_matrix_b_BREADY),
    .BRESP(m_axi_matrix_b_BRESP),
    .BID(m_axi_matrix_b_BID),
    .BUSER(m_axi_matrix_b_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(matrix_b_0_ARVALID),
    .I_CH0_ARREADY(matrix_b_0_ARREADY),
    .I_CH0_ARADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARADDR),
    .I_CH0_ARLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARLEN),
    .I_CH0_RVALID(matrix_b_0_RVALID),
    .I_CH0_RREADY(matrix_b_0_RREADY),
    .I_CH0_RDATA(matrix_b_0_RDATA),
    .I_CH0_RFIFONUM(matrix_b_0_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(matrix_b_0_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(matrix_b_0_WREADY),
    .I_CH0_WDATA(16'd0),
    .I_CH0_WSTRB(2'd0),
    .I_CH0_BVALID(matrix_b_0_BVALID),
    .I_CH0_BREADY(1'b0)
);

MatrixMult_matrix_c_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 4 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MATRIX_C_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MATRIX_C_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MATRIX_C_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MATRIX_C_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MATRIX_C_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MATRIX_C_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MATRIX_C_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MATRIX_C_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MATRIX_C_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MATRIX_C_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MATRIX_C_CACHE_VALUE ),
    .CH0_NUM_READ_OUTSTANDING( 16 ),
    .CH0_NUM_WRITE_OUTSTANDING( 16 ),
    .CH0_USER_RFIFONUM_WIDTH( 12 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 0 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
matrix_c_m_axi_U(
    .AWVALID(m_axi_matrix_c_AWVALID),
    .AWREADY(m_axi_matrix_c_AWREADY),
    .AWADDR(m_axi_matrix_c_AWADDR),
    .AWID(m_axi_matrix_c_AWID),
    .AWLEN(m_axi_matrix_c_AWLEN),
    .AWSIZE(m_axi_matrix_c_AWSIZE),
    .AWBURST(m_axi_matrix_c_AWBURST),
    .AWLOCK(m_axi_matrix_c_AWLOCK),
    .AWCACHE(m_axi_matrix_c_AWCACHE),
    .AWPROT(m_axi_matrix_c_AWPROT),
    .AWQOS(m_axi_matrix_c_AWQOS),
    .AWREGION(m_axi_matrix_c_AWREGION),
    .AWUSER(m_axi_matrix_c_AWUSER),
    .WVALID(m_axi_matrix_c_WVALID),
    .WREADY(m_axi_matrix_c_WREADY),
    .WDATA(m_axi_matrix_c_WDATA),
    .WSTRB(m_axi_matrix_c_WSTRB),
    .WLAST(m_axi_matrix_c_WLAST),
    .WID(m_axi_matrix_c_WID),
    .WUSER(m_axi_matrix_c_WUSER),
    .ARVALID(m_axi_matrix_c_ARVALID),
    .ARREADY(m_axi_matrix_c_ARREADY),
    .ARADDR(m_axi_matrix_c_ARADDR),
    .ARID(m_axi_matrix_c_ARID),
    .ARLEN(m_axi_matrix_c_ARLEN),
    .ARSIZE(m_axi_matrix_c_ARSIZE),
    .ARBURST(m_axi_matrix_c_ARBURST),
    .ARLOCK(m_axi_matrix_c_ARLOCK),
    .ARCACHE(m_axi_matrix_c_ARCACHE),
    .ARPROT(m_axi_matrix_c_ARPROT),
    .ARQOS(m_axi_matrix_c_ARQOS),
    .ARREGION(m_axi_matrix_c_ARREGION),
    .ARUSER(m_axi_matrix_c_ARUSER),
    .RVALID(m_axi_matrix_c_RVALID),
    .RREADY(m_axi_matrix_c_RREADY),
    .RDATA(m_axi_matrix_c_RDATA),
    .RLAST(m_axi_matrix_c_RLAST),
    .RID(m_axi_matrix_c_RID),
    .RUSER(m_axi_matrix_c_RUSER),
    .RRESP(m_axi_matrix_c_RRESP),
    .BVALID(m_axi_matrix_c_BVALID),
    .BREADY(m_axi_matrix_c_BREADY),
    .BRESP(m_axi_matrix_c_BRESP),
    .BID(m_axi_matrix_c_BID),
    .BUSER(m_axi_matrix_c_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(1'b0),
    .I_CH0_ARREADY(matrix_c_0_ARREADY),
    .I_CH0_ARADDR(64'd0),
    .I_CH0_ARLEN(32'd0),
    .I_CH0_RVALID(matrix_c_0_RVALID),
    .I_CH0_RREADY(1'b0),
    .I_CH0_RDATA(matrix_c_0_RDATA),
    .I_CH0_RFIFONUM(matrix_c_0_RFIFONUM),
    .I_CH0_AWVALID(matrix_c_0_AWVALID),
    .I_CH0_AWREADY(matrix_c_0_AWREADY),
    .I_CH0_AWADDR(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWADDR),
    .I_CH0_AWLEN(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWLEN),
    .I_CH0_WVALID(matrix_c_0_WVALID),
    .I_CH0_WREADY(matrix_c_0_WREADY),
    .I_CH0_WDATA(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WDATA),
    .I_CH0_WSTRB(grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WSTRB),
    .I_CH0_BVALID(matrix_c_0_BVALID),
    .I_CH0_BREADY(matrix_c_0_BREADY)
);

MatrixMult_mul_14ns_14ns_28_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 28 ))
mul_14ns_14ns_28_2_1_U235(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_146_p0),
    .din1(grp_fu_146_p1),
    .ce(1'b1),
    .dout(grp_fu_146_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_108_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_108_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dataflow_parent_loop_proc_fu_108_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_sync_grp_dataflow_parent_loop_proc_fu_108_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_dataflow_parent_loop_proc_fu_108_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc_fu_108_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc_fu_108_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        div_reg_173 <= {{size[15:2]}};
        matrix_in_1_read_reg_168 <= matrix_in_1;
        matrix_in_2_read_reg_163 <= matrix_in_2;
        matrix_out_read_reg_153 <= matrix_out;
        size_read_reg_158 <= size;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_reg_184 <= grp_fu_146_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_dataflow_parent_loop_proc_fu_108_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc_fu_108_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_a_0_ARVALID = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_ARVALID;
    end else begin
        matrix_a_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_a_0_RREADY = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_a_0_RREADY;
    end else begin
        matrix_a_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_b_0_ARVALID = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_ARVALID;
    end else begin
        matrix_b_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_b_0_RREADY = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_b_0_RREADY;
    end else begin
        matrix_b_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_c_0_AWVALID = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_AWVALID;
    end else begin
        matrix_c_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_c_0_BREADY = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_BREADY;
    end else begin
        matrix_c_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        matrix_c_0_WVALID = grp_dataflow_parent_loop_proc_fu_108_m_axi_matrix_c_0_WVALID;
    end else begin
        matrix_c_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready & ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_dataflow_parent_loop_proc_fu_108_ap_ready = (grp_dataflow_parent_loop_proc_fu_108_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc_fu_108_ap_ready);

assign div_cast_fu_143_p1 = div_reg_173;

assign grp_dataflow_parent_loop_proc_fu_108_ap_start = grp_dataflow_parent_loop_proc_fu_108_ap_start_reg;

assign grp_fu_146_p0 = div_cast_fu_143_p1;

assign grp_fu_146_p1 = div_cast_fu_143_p1;

endmodule //MatrixMult
