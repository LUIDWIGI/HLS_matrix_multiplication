// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMult_matrixAdder (
        ap_ready,
        input_matrix_0_0_val,
        input_matrix_0_1_val,
        input_matrix_0_2_val,
        input_matrix_0_3_val,
        input_matrix_1_0_val,
        input_matrix_1_1_val,
        input_matrix_1_2_val,
        input_matrix_1_3_val,
        input_matrix_2_0_val,
        input_matrix_2_1_val,
        input_matrix_2_2_val,
        input_matrix_2_3_val,
        input_matrix_3_0_val,
        input_matrix_3_1_val,
        input_matrix_3_2_val,
        input_matrix_3_3_val,
        output_matrix_read,
        output_matrix_read_31,
        output_matrix_read_32,
        output_matrix_read_33,
        output_matrix_read_34,
        output_matrix_read_35,
        output_matrix_read_36,
        output_matrix_read_37,
        output_matrix_read_38,
        output_matrix_read_39,
        output_matrix_read_40,
        output_matrix_read_41,
        output_matrix_read_42,
        output_matrix_read_43,
        output_matrix_read_44,
        output_matrix_read_45,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_rst
);


output   ap_ready;
input  [31:0] input_matrix_0_0_val;
input  [31:0] input_matrix_0_1_val;
input  [31:0] input_matrix_0_2_val;
input  [31:0] input_matrix_0_3_val;
input  [31:0] input_matrix_1_0_val;
input  [31:0] input_matrix_1_1_val;
input  [31:0] input_matrix_1_2_val;
input  [31:0] input_matrix_1_3_val;
input  [31:0] input_matrix_2_0_val;
input  [31:0] input_matrix_2_1_val;
input  [31:0] input_matrix_2_2_val;
input  [31:0] input_matrix_2_3_val;
input  [31:0] input_matrix_3_0_val;
input  [31:0] input_matrix_3_1_val;
input  [31:0] input_matrix_3_2_val;
input  [31:0] input_matrix_3_3_val;
input  [31:0] output_matrix_read;
input  [31:0] output_matrix_read_31;
input  [31:0] output_matrix_read_32;
input  [31:0] output_matrix_read_33;
input  [31:0] output_matrix_read_34;
input  [31:0] output_matrix_read_35;
input  [31:0] output_matrix_read_36;
input  [31:0] output_matrix_read_37;
input  [31:0] output_matrix_read_38;
input  [31:0] output_matrix_read_39;
input  [31:0] output_matrix_read_40;
input  [31:0] output_matrix_read_41;
input  [31:0] output_matrix_read_42;
input  [31:0] output_matrix_read_43;
input  [31:0] output_matrix_read_44;
input  [31:0] output_matrix_read_45;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
input   ap_rst;

wire   [31:0] add_ln16_fu_268_p2;
wire   [31:0] add_ln16_48_fu_274_p2;
wire   [31:0] add_ln16_49_fu_280_p2;
wire   [31:0] add_ln16_50_fu_286_p2;
wire   [31:0] add_ln16_51_fu_292_p2;
wire   [31:0] add_ln16_52_fu_298_p2;
wire   [31:0] add_ln16_53_fu_304_p2;
wire   [31:0] add_ln16_54_fu_310_p2;
wire   [31:0] add_ln16_55_fu_316_p2;
wire   [31:0] add_ln16_56_fu_322_p2;
wire   [31:0] add_ln16_57_fu_328_p2;
wire   [31:0] add_ln16_58_fu_334_p2;
wire   [31:0] add_ln16_59_fu_340_p2;
wire   [31:0] add_ln16_60_fu_346_p2;
wire   [31:0] add_ln16_61_fu_352_p2;
wire   [31:0] add_ln16_62_fu_358_p2;

assign add_ln16_48_fu_274_p2 = (output_matrix_read_31 + input_matrix_0_1_val);

assign add_ln16_49_fu_280_p2 = (output_matrix_read_32 + input_matrix_0_2_val);

assign add_ln16_50_fu_286_p2 = (output_matrix_read_33 + input_matrix_0_3_val);

assign add_ln16_51_fu_292_p2 = (output_matrix_read_34 + input_matrix_1_0_val);

assign add_ln16_52_fu_298_p2 = (output_matrix_read_35 + input_matrix_1_1_val);

assign add_ln16_53_fu_304_p2 = (output_matrix_read_36 + input_matrix_1_2_val);

assign add_ln16_54_fu_310_p2 = (output_matrix_read_37 + input_matrix_1_3_val);

assign add_ln16_55_fu_316_p2 = (output_matrix_read_38 + input_matrix_2_0_val);

assign add_ln16_56_fu_322_p2 = (output_matrix_read_39 + input_matrix_2_1_val);

assign add_ln16_57_fu_328_p2 = (output_matrix_read_40 + input_matrix_2_2_val);

assign add_ln16_58_fu_334_p2 = (output_matrix_read_41 + input_matrix_2_3_val);

assign add_ln16_59_fu_340_p2 = (output_matrix_read_42 + input_matrix_3_0_val);

assign add_ln16_60_fu_346_p2 = (output_matrix_read_43 + input_matrix_3_1_val);

assign add_ln16_61_fu_352_p2 = (output_matrix_read_44 + input_matrix_3_2_val);

assign add_ln16_62_fu_358_p2 = (output_matrix_read_45 + input_matrix_3_3_val);

assign add_ln16_fu_268_p2 = (output_matrix_read + input_matrix_0_0_val);

assign ap_ready = 1'b1;

assign ap_return_0 = add_ln16_fu_268_p2;

assign ap_return_1 = add_ln16_48_fu_274_p2;

assign ap_return_10 = add_ln16_57_fu_328_p2;

assign ap_return_11 = add_ln16_58_fu_334_p2;

assign ap_return_12 = add_ln16_59_fu_340_p2;

assign ap_return_13 = add_ln16_60_fu_346_p2;

assign ap_return_14 = add_ln16_61_fu_352_p2;

assign ap_return_15 = add_ln16_62_fu_358_p2;

assign ap_return_2 = add_ln16_49_fu_280_p2;

assign ap_return_3 = add_ln16_50_fu_286_p2;

assign ap_return_4 = add_ln16_51_fu_292_p2;

assign ap_return_5 = add_ln16_52_fu_298_p2;

assign ap_return_6 = add_ln16_53_fu_304_p2;

assign ap_return_7 = add_ln16_54_fu_310_p2;

assign ap_return_8 = add_ln16_55_fu_316_p2;

assign ap_return_9 = add_ln16_56_fu_322_p2;

endmodule //MatrixMult_matrixAdder
